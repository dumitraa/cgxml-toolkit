//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by xsd, Version=4.6.1055.0.
// 


/// <summary>
///Represents a strongly typed in-memory cache of data.
///</summary>
[global::System.Serializable()]
[global::System.ComponentModel.DesignerCategoryAttribute("code")]
[global::System.ComponentModel.ToolboxItem(true)]
[global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
[global::System.Xml.Serialization.XmlRootAttribute("CGXML")]
[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
public partial class CGXML : global::System.Data.DataSet
{

    private AddressDataTable tableAddress;

    private BuildingDataTable tableBuilding;

    private BuildingCommonPartsDataTable tableBuildingCommonParts;

    private DeedDataTable tableDeed;

    private FileDescriptionDataTable tableFileDescription;

    private LandDataTable tableLand;

    private IUDataTable tableIU;

    private ParcelDataTable tableParcel;

    private PersonDataTable tablePerson;

    private PointsDataTable tablePoints;

    private RegistrationDataTable tableRegistration;

    private RegistrationXEntityDataTable tableRegistrationXEntity;

    private ContestedDataTable tableContested;

    private ContestedxEntityDataTable tableContestedxEntity;

    private global::System.Data.DataRelation relationFK_Building_IndividualUnit;

    private global::System.Data.DataRelation relationFK_Building_BuildingCommonParts;

    private global::System.Data.DataRelation relationFK_Immovable_Building;

    private global::System.Data.DataRelation relationFK_FileDescription_Land;

    private global::System.Data.DataRelation relationFK_Address_Building;

    private global::System.Data.DataRelation relationFK_Building_Points;

    private global::System.Data.DataRelation relationFK_Immovable_Points;

    private global::System.Data.DataRelation relationFK_Address_Immovable;

    private global::System.Data.DataRelation relationFK_Immovable_Parcel;

    private global::System.Data.DataRelation relationFK_Person_FileDescription;

    private global::System.Data.DataRelation relationFK_Address_Person;

    private global::System.Data.DataRelation relationFK_Deed_FileDescription;

    private global::System.Data.DataRelation relationFK_Land_RegistrationXEntity;

    private global::System.Data.DataRelation relationFK_Building_InscrierexEntitate;

    private global::System.Data.DataRelation relationFK_IU_RegistrationXEntity;

    private global::System.Data.DataRelation relationFK_Registration_RegistrationXEntity;

    private global::System.Data.DataRelation relationFK_Deed_Registration;

    private global::System.Data.DataRelation relationFK_Registration_Person;

    private global::System.Data.DataRelation relationContested_ContestedxEntity;

    private global::System.Data.DataRelation relationIU_ContestedxEntity;

    private global::System.Data.DataRelation relationBuilding_ContestedxEntity;

    private global::System.Data.DataRelation relationLand_ContestedxEntity;

    private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public CGXML()
    {
        this.BeginInit();
        this.InitClass();
        global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
        base.Tables.CollectionChanged += schemaChangedHandler;
        base.Relations.CollectionChanged += schemaChangedHandler;
        this.EndInit();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    protected CGXML(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
            base(info, context, false)
    {
        if ((this.IsBinarySerialized(info, context) == true))
        {
            this.InitVars(false);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler1;
            this.Relations.CollectionChanged += schemaChangedHandler1;
            return;
        }
        string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
        if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema))
        {
            global::System.Data.DataSet ds = new global::System.Data.DataSet();
            ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            if ((ds.Tables["Address"] != null))
            {
                base.Tables.Add(new AddressDataTable(ds.Tables["Address"]));
            }
            if ((ds.Tables["Building"] != null))
            {
                base.Tables.Add(new BuildingDataTable(ds.Tables["Building"]));
            }
            if ((ds.Tables["BuildingCommonParts"] != null))
            {
                base.Tables.Add(new BuildingCommonPartsDataTable(ds.Tables["BuildingCommonParts"]));
            }
            if ((ds.Tables["Deed"] != null))
            {
                base.Tables.Add(new DeedDataTable(ds.Tables["Deed"]));
            }
            if ((ds.Tables["FileDescription"] != null))
            {
                base.Tables.Add(new FileDescriptionDataTable(ds.Tables["FileDescription"]));
            }
            if ((ds.Tables["Land"] != null))
            {
                base.Tables.Add(new LandDataTable(ds.Tables["Land"]));
            }
            if ((ds.Tables["IU"] != null))
            {
                base.Tables.Add(new IUDataTable(ds.Tables["IU"]));
            }
            if ((ds.Tables["Parcel"] != null))
            {
                base.Tables.Add(new ParcelDataTable(ds.Tables["Parcel"]));
            }
            if ((ds.Tables["Person"] != null))
            {
                base.Tables.Add(new PersonDataTable(ds.Tables["Person"]));
            }
            if ((ds.Tables["Points"] != null))
            {
                base.Tables.Add(new PointsDataTable(ds.Tables["Points"]));
            }
            if ((ds.Tables["Registration"] != null))
            {
                base.Tables.Add(new RegistrationDataTable(ds.Tables["Registration"]));
            }
            if ((ds.Tables["RegistrationXEntity"] != null))
            {
                base.Tables.Add(new RegistrationXEntityDataTable(ds.Tables["RegistrationXEntity"]));
            }
            if ((ds.Tables["Contested"] != null))
            {
                base.Tables.Add(new ContestedDataTable(ds.Tables["Contested"]));
            }
            if ((ds.Tables["ContestedxEntity"] != null))
            {
                base.Tables.Add(new ContestedxEntityDataTable(ds.Tables["ContestedxEntity"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        else
        {
            this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
        }
        this.GetSerializationData(info, context);
        global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
        base.Tables.CollectionChanged += schemaChangedHandler;
        this.Relations.CollectionChanged += schemaChangedHandler;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public AddressDataTable Address
    {
        get
        {
            return this.tableAddress;
        }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public BuildingDataTable Building
    {
        get
        {
            return this.tableBuilding;
        }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public BuildingCommonPartsDataTable BuildingCommonParts
    {
        get
        {
            return this.tableBuildingCommonParts;
        }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public DeedDataTable Deed
    {
        get
        {
            return this.tableDeed;
        }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public FileDescriptionDataTable FileDescription
    {
        get
        {
            return this.tableFileDescription;
        }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public LandDataTable Land
    {
        get
        {
            return this.tableLand;
        }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public IUDataTable IU
    {
        get
        {
            return this.tableIU;
        }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public ParcelDataTable Parcel
    {
        get
        {
            return this.tableParcel;
        }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public PersonDataTable Person
    {
        get
        {
            return this.tablePerson;
        }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public PointsDataTable Points
    {
        get
        {
            return this.tablePoints;
        }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public RegistrationDataTable Registration
    {
        get
        {
            return this.tableRegistration;
        }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public RegistrationXEntityDataTable RegistrationXEntity
    {
        get
        {
            return this.tableRegistrationXEntity;
        }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public ContestedDataTable Contested
    {
        get
        {
            return this.tableContested;
        }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public ContestedxEntityDataTable ContestedxEntity
    {
        get
        {
            return this.tableContestedxEntity;
        }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.BrowsableAttribute(true)]
    [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
    public override global::System.Data.SchemaSerializationMode SchemaSerializationMode
    {
        get
        {
            return this._schemaSerializationMode;
        }
        set
        {
            this._schemaSerializationMode = value;
        }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
    public new global::System.Data.DataTableCollection Tables
    {
        get
        {
            return base.Tables;
        }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
    public new global::System.Data.DataRelationCollection Relations
    {
        get
        {
            return base.Relations;
        }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    protected override void InitializeDerivedDataSet()
    {
        this.BeginInit();
        this.InitClass();
        this.EndInit();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public override global::System.Data.DataSet Clone()
    {
        CGXML cln = ((CGXML)(base.Clone()));
        cln.InitVars();
        cln.SchemaSerializationMode = this.SchemaSerializationMode;
        return cln;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    protected override bool ShouldSerializeTables()
    {
        return false;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    protected override bool ShouldSerializeRelations()
    {
        return false;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader)
    {
        if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema))
        {
            this.Reset();
            global::System.Data.DataSet ds = new global::System.Data.DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["Address"] != null))
            {
                base.Tables.Add(new AddressDataTable(ds.Tables["Address"]));
            }
            if ((ds.Tables["Building"] != null))
            {
                base.Tables.Add(new BuildingDataTable(ds.Tables["Building"]));
            }
            if ((ds.Tables["BuildingCommonParts"] != null))
            {
                base.Tables.Add(new BuildingCommonPartsDataTable(ds.Tables["BuildingCommonParts"]));
            }
            if ((ds.Tables["Deed"] != null))
            {
                base.Tables.Add(new DeedDataTable(ds.Tables["Deed"]));
            }
            if ((ds.Tables["FileDescription"] != null))
            {
                base.Tables.Add(new FileDescriptionDataTable(ds.Tables["FileDescription"]));
            }
            if ((ds.Tables["Land"] != null))
            {
                base.Tables.Add(new LandDataTable(ds.Tables["Land"]));
            }
            if ((ds.Tables["IU"] != null))
            {
                base.Tables.Add(new IUDataTable(ds.Tables["IU"]));
            }
            if ((ds.Tables["Parcel"] != null))
            {
                base.Tables.Add(new ParcelDataTable(ds.Tables["Parcel"]));
            }
            if ((ds.Tables["Person"] != null))
            {
                base.Tables.Add(new PersonDataTable(ds.Tables["Person"]));
            }
            if ((ds.Tables["Points"] != null))
            {
                base.Tables.Add(new PointsDataTable(ds.Tables["Points"]));
            }
            if ((ds.Tables["Registration"] != null))
            {
                base.Tables.Add(new RegistrationDataTable(ds.Tables["Registration"]));
            }
            if ((ds.Tables["RegistrationXEntity"] != null))
            {
                base.Tables.Add(new RegistrationXEntityDataTable(ds.Tables["RegistrationXEntity"]));
            }
            if ((ds.Tables["Contested"] != null))
            {
                base.Tables.Add(new ContestedDataTable(ds.Tables["Contested"]));
            }
            if ((ds.Tables["ContestedxEntity"] != null))
            {
                base.Tables.Add(new ContestedxEntityDataTable(ds.Tables["ContestedxEntity"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        else
        {
            this.ReadXml(reader);
            this.InitVars();
        }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable()
    {
        global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
        this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
        stream.Position = 0;
        return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    internal void InitVars()
    {
        this.InitVars(true);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    internal void InitVars(bool initTable)
    {
        this.tableAddress = ((AddressDataTable)(base.Tables["Address"]));
        if ((initTable == true))
        {
            if ((this.tableAddress != null))
            {
                this.tableAddress.InitVars();
            }
        }
        this.tableBuilding = ((BuildingDataTable)(base.Tables["Building"]));
        if ((initTable == true))
        {
            if ((this.tableBuilding != null))
            {
                this.tableBuilding.InitVars();
            }
        }
        this.tableBuildingCommonParts = ((BuildingCommonPartsDataTable)(base.Tables["BuildingCommonParts"]));
        if ((initTable == true))
        {
            if ((this.tableBuildingCommonParts != null))
            {
                this.tableBuildingCommonParts.InitVars();
            }
        }
        this.tableDeed = ((DeedDataTable)(base.Tables["Deed"]));
        if ((initTable == true))
        {
            if ((this.tableDeed != null))
            {
                this.tableDeed.InitVars();
            }
        }
        this.tableFileDescription = ((FileDescriptionDataTable)(base.Tables["FileDescription"]));
        if ((initTable == true))
        {
            if ((this.tableFileDescription != null))
            {
                this.tableFileDescription.InitVars();
            }
        }
        this.tableLand = ((LandDataTable)(base.Tables["Land"]));
        if ((initTable == true))
        {
            if ((this.tableLand != null))
            {
                this.tableLand.InitVars();
            }
        }
        this.tableIU = ((IUDataTable)(base.Tables["IU"]));
        if ((initTable == true))
        {
            if ((this.tableIU != null))
            {
                this.tableIU.InitVars();
            }
        }
        this.tableParcel = ((ParcelDataTable)(base.Tables["Parcel"]));
        if ((initTable == true))
        {
            if ((this.tableParcel != null))
            {
                this.tableParcel.InitVars();
            }
        }
        this.tablePerson = ((PersonDataTable)(base.Tables["Person"]));
        if ((initTable == true))
        {
            if ((this.tablePerson != null))
            {
                this.tablePerson.InitVars();
            }
        }
        this.tablePoints = ((PointsDataTable)(base.Tables["Points"]));
        if ((initTable == true))
        {
            if ((this.tablePoints != null))
            {
                this.tablePoints.InitVars();
            }
        }
        this.tableRegistration = ((RegistrationDataTable)(base.Tables["Registration"]));
        if ((initTable == true))
        {
            if ((this.tableRegistration != null))
            {
                this.tableRegistration.InitVars();
            }
        }
        this.tableRegistrationXEntity = ((RegistrationXEntityDataTable)(base.Tables["RegistrationXEntity"]));
        if ((initTable == true))
        {
            if ((this.tableRegistrationXEntity != null))
            {
                this.tableRegistrationXEntity.InitVars();
            }
        }
        this.tableContested = ((ContestedDataTable)(base.Tables["Contested"]));
        if ((initTable == true))
        {
            if ((this.tableContested != null))
            {
                this.tableContested.InitVars();
            }
        }
        this.tableContestedxEntity = ((ContestedxEntityDataTable)(base.Tables["ContestedxEntity"]));
        if ((initTable == true))
        {
            if ((this.tableContestedxEntity != null))
            {
                this.tableContestedxEntity.InitVars();
            }
        }
        this.relationFK_Building_IndividualUnit = this.Relations["FK_Building_IndividualUnit"];
        this.relationFK_Building_BuildingCommonParts = this.Relations["FK_Building_BuildingCommonParts"];
        this.relationFK_Immovable_Building = this.Relations["FK_Immovable_Building"];
        this.relationFK_FileDescription_Land = this.Relations["FK_FileDescription_Land"];
        this.relationFK_Address_Building = this.Relations["FK_Address_Building"];
        this.relationFK_Building_Points = this.Relations["FK_Building_Points"];
        this.relationFK_Immovable_Points = this.Relations["FK_Immovable_Points"];
        this.relationFK_Address_Immovable = this.Relations["FK_Address_Immovable"];
        this.relationFK_Immovable_Parcel = this.Relations["FK_Immovable_Parcel"];
        this.relationFK_Person_FileDescription = this.Relations["FK_Person_FileDescription"];
        this.relationFK_Address_Person = this.Relations["FK_Address_Person"];
        this.relationFK_Deed_FileDescription = this.Relations["FK_Deed_FileDescription"];
        this.relationFK_Land_RegistrationXEntity = this.Relations["FK_Land_RegistrationXEntity"];
        this.relationFK_Building_InscrierexEntitate = this.Relations["FK_Building_InscrierexEntitate"];
        this.relationFK_IU_RegistrationXEntity = this.Relations["FK_IU_RegistrationXEntity"];
        this.relationFK_Registration_RegistrationXEntity = this.Relations["FK_Registration_RegistrationXEntity"];
        this.relationFK_Deed_Registration = this.Relations["FK_Deed_Registration"];
        this.relationFK_Registration_Person = this.Relations["FK_Registration_Person"];
        this.relationContested_ContestedxEntity = this.Relations["Contested_ContestedxEntity"];
        this.relationIU_ContestedxEntity = this.Relations["IU_ContestedxEntity"];
        this.relationBuilding_ContestedxEntity = this.Relations["Building_ContestedxEntity"];
        this.relationLand_ContestedxEntity = this.Relations["Land_ContestedxEntity"];
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private void InitClass()
    {
        this.DataSetName = "CGXML";
        this.Prefix = "";
        this.EnforceConstraints = true;
        this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        this.tableAddress = new AddressDataTable();
        base.Tables.Add(this.tableAddress);
        this.tableBuilding = new BuildingDataTable();
        base.Tables.Add(this.tableBuilding);
        this.tableBuildingCommonParts = new BuildingCommonPartsDataTable();
        base.Tables.Add(this.tableBuildingCommonParts);
        this.tableDeed = new DeedDataTable();
        base.Tables.Add(this.tableDeed);
        this.tableFileDescription = new FileDescriptionDataTable();
        base.Tables.Add(this.tableFileDescription);
        this.tableLand = new LandDataTable();
        base.Tables.Add(this.tableLand);
        this.tableIU = new IUDataTable();
        base.Tables.Add(this.tableIU);
        this.tableParcel = new ParcelDataTable();
        base.Tables.Add(this.tableParcel);
        this.tablePerson = new PersonDataTable();
        base.Tables.Add(this.tablePerson);
        this.tablePoints = new PointsDataTable();
        base.Tables.Add(this.tablePoints);
        this.tableRegistration = new RegistrationDataTable();
        base.Tables.Add(this.tableRegistration);
        this.tableRegistrationXEntity = new RegistrationXEntityDataTable();
        base.Tables.Add(this.tableRegistrationXEntity);
        this.tableContested = new ContestedDataTable();
        base.Tables.Add(this.tableContested);
        this.tableContestedxEntity = new ContestedxEntityDataTable();
        base.Tables.Add(this.tableContestedxEntity);
        this.relationFK_Building_IndividualUnit = new global::System.Data.DataRelation("FK_Building_IndividualUnit", new global::System.Data.DataColumn[] {
                    this.tableBuilding.BUILDINGIDColumn}, new global::System.Data.DataColumn[] {
                    this.tableIU.BUILDINGIDColumn}, false);
        this.Relations.Add(this.relationFK_Building_IndividualUnit);
        this.relationFK_Building_BuildingCommonParts = new global::System.Data.DataRelation("FK_Building_BuildingCommonParts", new global::System.Data.DataColumn[] {
                    this.tableBuilding.BUILDINGIDColumn}, new global::System.Data.DataColumn[] {
                    this.tableBuildingCommonParts.BUILDINGIDColumn}, false);
        this.Relations.Add(this.relationFK_Building_BuildingCommonParts);
        this.relationFK_Immovable_Building = new global::System.Data.DataRelation("FK_Immovable_Building", new global::System.Data.DataColumn[] {
                    this.tableLand.LANDIDColumn}, new global::System.Data.DataColumn[] {
                    this.tableBuilding.LANDIDColumn}, false);
        this.Relations.Add(this.relationFK_Immovable_Building);
        this.relationFK_FileDescription_Land = new global::System.Data.DataRelation("FK_FileDescription_Land", new global::System.Data.DataColumn[] {
                    this.tableFileDescription.FILEIDColumn}, new global::System.Data.DataColumn[] {
                    this.tableLand.FILEIDColumn}, false);
        this.Relations.Add(this.relationFK_FileDescription_Land);
        this.relationFK_Address_Building = new global::System.Data.DataRelation("FK_Address_Building", new global::System.Data.DataColumn[] {
                    this.tableAddress.ADDRESSIDColumn}, new global::System.Data.DataColumn[] {
                    this.tableBuilding.ADDRESSIDColumn}, false);
        this.Relations.Add(this.relationFK_Address_Building);
        this.relationFK_Building_Points = new global::System.Data.DataRelation("FK_Building_Points", new global::System.Data.DataColumn[] {
                    this.tableBuilding.BUILDINGIDColumn}, new global::System.Data.DataColumn[] {
                    this.tablePoints.BUILDINGIDColumn}, false);
        this.Relations.Add(this.relationFK_Building_Points);
        this.relationFK_Immovable_Points = new global::System.Data.DataRelation("FK_Immovable_Points", new global::System.Data.DataColumn[] {
                    this.tableLand.LANDIDColumn}, new global::System.Data.DataColumn[] {
                    this.tablePoints.IMMOVABLEIDColumn}, false);
        this.Relations.Add(this.relationFK_Immovable_Points);
        this.relationFK_Address_Immovable = new global::System.Data.DataRelation("FK_Address_Immovable", new global::System.Data.DataColumn[] {
                    this.tableAddress.ADDRESSIDColumn}, new global::System.Data.DataColumn[] {
                    this.tableLand.ADDRESSIDColumn}, false);
        this.Relations.Add(this.relationFK_Address_Immovable);
        this.relationFK_Immovable_Parcel = new global::System.Data.DataRelation("FK_Immovable_Parcel", new global::System.Data.DataColumn[] {
                    this.tableLand.LANDIDColumn}, new global::System.Data.DataColumn[] {
                    this.tableParcel.LANDIDColumn}, false);
        this.Relations.Add(this.relationFK_Immovable_Parcel);
        this.relationFK_Person_FileDescription = new global::System.Data.DataRelation("FK_Person_FileDescription", new global::System.Data.DataColumn[] {
                    this.tableFileDescription.FILEIDColumn}, new global::System.Data.DataColumn[] {
                    this.tablePerson.FILEIDColumn}, false);
        this.Relations.Add(this.relationFK_Person_FileDescription);
        this.relationFK_Address_Person = new global::System.Data.DataRelation("FK_Address_Person", new global::System.Data.DataColumn[] {
                    this.tableAddress.ADDRESSIDColumn}, new global::System.Data.DataColumn[] {
                    this.tablePerson.ADDRESSIDColumn}, false);
        this.Relations.Add(this.relationFK_Address_Person);
        this.relationFK_Deed_FileDescription = new global::System.Data.DataRelation("FK_Deed_FileDescription", new global::System.Data.DataColumn[] {
                    this.tableFileDescription.FILEIDColumn}, new global::System.Data.DataColumn[] {
                    this.tableDeed.FILEIDColumn}, false);
        this.Relations.Add(this.relationFK_Deed_FileDescription);
        this.relationFK_Land_RegistrationXEntity = new global::System.Data.DataRelation("FK_Land_RegistrationXEntity", new global::System.Data.DataColumn[] {
                    this.tableLand.LANDIDColumn}, new global::System.Data.DataColumn[] {
                    this.tableRegistrationXEntity.LANDIDColumn}, false);
        this.Relations.Add(this.relationFK_Land_RegistrationXEntity);
        this.relationFK_Building_InscrierexEntitate = new global::System.Data.DataRelation("FK_Building_InscrierexEntitate", new global::System.Data.DataColumn[] {
                    this.tableBuilding.BUILDINGIDColumn}, new global::System.Data.DataColumn[] {
                    this.tableRegistrationXEntity.BUILDINGIDColumn}, false);
        this.Relations.Add(this.relationFK_Building_InscrierexEntitate);
        this.relationFK_IU_RegistrationXEntity = new global::System.Data.DataRelation("FK_IU_RegistrationXEntity", new global::System.Data.DataColumn[] {
                    this.tableIU.IUIDColumn}, new global::System.Data.DataColumn[] {
                    this.tableRegistrationXEntity.IUIDColumn}, false);
        this.Relations.Add(this.relationFK_IU_RegistrationXEntity);
        this.relationFK_Registration_RegistrationXEntity = new global::System.Data.DataRelation("FK_Registration_RegistrationXEntity", new global::System.Data.DataColumn[] {
                    this.tableRegistration.REGISTRATIONIDColumn}, new global::System.Data.DataColumn[] {
                    this.tableRegistrationXEntity.REGISTRATIONIDColumn}, false);
        this.Relations.Add(this.relationFK_Registration_RegistrationXEntity);
        this.relationFK_Deed_Registration = new global::System.Data.DataRelation("FK_Deed_Registration", new global::System.Data.DataColumn[] {
                    this.tableDeed.DEEDIDColumn}, new global::System.Data.DataColumn[] {
                    this.tableRegistration.DEEDIDColumn}, false);
        this.Relations.Add(this.relationFK_Deed_Registration);
        this.relationFK_Registration_Person = new global::System.Data.DataRelation("FK_Registration_Person", new global::System.Data.DataColumn[] {
                    this.tableRegistration.REGISTRATIONIDColumn}, new global::System.Data.DataColumn[] {
                    this.tablePerson.REGISTRATIONIDColumn}, false);
        this.Relations.Add(this.relationFK_Registration_Person);
        this.relationContested_ContestedxEntity = new global::System.Data.DataRelation("Contested_ContestedxEntity", new global::System.Data.DataColumn[] {
                    this.tableContested.CONTESTEDIDColumn}, new global::System.Data.DataColumn[] {
                    this.tableContestedxEntity.CONTESTEDIDColumn}, false);
        this.Relations.Add(this.relationContested_ContestedxEntity);
        this.relationIU_ContestedxEntity = new global::System.Data.DataRelation("IU_ContestedxEntity", new global::System.Data.DataColumn[] {
                    this.tableIU.IUIDColumn}, new global::System.Data.DataColumn[] {
                    this.tableContestedxEntity.IUIDColumn}, false);
        this.Relations.Add(this.relationIU_ContestedxEntity);
        this.relationBuilding_ContestedxEntity = new global::System.Data.DataRelation("Building_ContestedxEntity", new global::System.Data.DataColumn[] {
                    this.tableBuilding.BUILDINGIDColumn}, new global::System.Data.DataColumn[] {
                    this.tableContestedxEntity.BUILDINGIDColumn}, false);
        this.Relations.Add(this.relationBuilding_ContestedxEntity);
        this.relationLand_ContestedxEntity = new global::System.Data.DataRelation("Land_ContestedxEntity", new global::System.Data.DataColumn[] {
                    this.tableLand.LANDIDColumn}, new global::System.Data.DataColumn[] {
                    this.tableContestedxEntity.LANDIDColumn}, false);
        this.Relations.Add(this.relationLand_ContestedxEntity);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializeAddress()
    {
        return false;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializeBuilding()
    {
        return false;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializeBuildingCommonParts()
    {
        return false;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializeDeed()
    {
        return false;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializeFileDescription()
    {
        return false;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializeLand()
    {
        return false;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializeIU()
    {
        return false;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializeParcel()
    {
        return false;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializePerson()
    {
        return false;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializePoints()
    {
        return false;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializeRegistration()
    {
        return false;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializeRegistrationXEntity()
    {
        return false;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializeContested()
    {
        return false;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializeContestedxEntity()
    {
        return false;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e)
    {
        if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove))
        {
            this.InitVars();
        }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs)
    {
        CGXML ds = new CGXML();
        global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
        global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
        global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
        any.Namespace = ds.Namespace;
        sequence.Items.Add(any);
        type.Particle = sequence;
        global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
        if (xs.Contains(dsSchema.TargetNamespace))
        {
            global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
            global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
            try
            {
                global::System.Xml.Schema.XmlSchema schema = null;
                dsSchema.Write(s1);
                for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
                {
                    schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                    s2.SetLength(0);
                    schema.Write(s2);
                    if ((s1.Length == s2.Length))
                    {
                        s1.Position = 0;
                        s2.Position = 0;
                        for (; ((s1.Position != s1.Length)
                                    && (s1.ReadByte() == s2.ReadByte()));)
                        {
                            ;
                        }
                        if ((s1.Position == s1.Length))
                        {
                            return type;
                        }
                    }
                }
            }
            finally
            {
                if ((s1 != null))
                {
                    s1.Close();
                }
                if ((s2 != null))
                {
                    s2.Close();
                }
            }
        }
        xs.Add(dsSchema);
        return type;
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void AddressRowChangeEventHandler(object sender, AddressRowChangeEvent e);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void BuildingRowChangeEventHandler(object sender, BuildingRowChangeEvent e);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void BuildingCommonPartsRowChangeEventHandler(object sender, BuildingCommonPartsRowChangeEvent e);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void DeedRowChangeEventHandler(object sender, DeedRowChangeEvent e);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void FileDescriptionRowChangeEventHandler(object sender, FileDescriptionRowChangeEvent e);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void LandRowChangeEventHandler(object sender, LandRowChangeEvent e);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void IURowChangeEventHandler(object sender, IURowChangeEvent e);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void ParcelRowChangeEventHandler(object sender, ParcelRowChangeEvent e);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void PersonRowChangeEventHandler(object sender, PersonRowChangeEvent e);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void PointsRowChangeEventHandler(object sender, PointsRowChangeEvent e);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void RegistrationRowChangeEventHandler(object sender, RegistrationRowChangeEvent e);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void RegistrationXEntityRowChangeEventHandler(object sender, RegistrationXEntityRowChangeEvent e);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void ContestedRowChangeEventHandler(object sender, ContestedRowChangeEvent e);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void ContestedxEntityRowChangeEventHandler(object sender, ContestedxEntityRowChangeEvent e);

    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class AddressDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
    {

        private global::System.Data.DataColumn columnADDRESSID;

        private global::System.Data.DataColumn columnSIRSUP;

        private global::System.Data.DataColumn columnSIRUTA;

        private global::System.Data.DataColumn columnINTRAVILAN;

        private global::System.Data.DataColumn columnDISTRICTTYPE;

        private global::System.Data.DataColumn columnDISTRICTNAME;

        private global::System.Data.DataColumn columnSTREETTYPE;

        private global::System.Data.DataColumn columnSTREETNAME;

        private global::System.Data.DataColumn columnPOSTALNUMBER;

        private global::System.Data.DataColumn columnBLOCK;

        private global::System.Data.DataColumn columnENTRY;

        private global::System.Data.DataColumn columnFLOOR;

        private global::System.Data.DataColumn columnAPNO;

        private global::System.Data.DataColumn columnZIPCODE;

        private global::System.Data.DataColumn columnDESCRIPTION;

        private global::System.Data.DataColumn columnSECTION;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AddressDataTable()
        {
            this.TableName = "Address";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal AddressDataTable(global::System.Data.DataTable table)
        {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive))
            {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
            {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace))
            {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected AddressDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                base(info, context)
        {
            this.InitVars();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn ADDRESSIDColumn
        {
            get
            {
                return this.columnADDRESSID;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn SIRSUPColumn
        {
            get
            {
                return this.columnSIRSUP;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn SIRUTAColumn
        {
            get
            {
                return this.columnSIRUTA;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn INTRAVILANColumn
        {
            get
            {
                return this.columnINTRAVILAN;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn DISTRICTTYPEColumn
        {
            get
            {
                return this.columnDISTRICTTYPE;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn DISTRICTNAMEColumn
        {
            get
            {
                return this.columnDISTRICTNAME;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn STREETTYPEColumn
        {
            get
            {
                return this.columnSTREETTYPE;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn STREETNAMEColumn
        {
            get
            {
                return this.columnSTREETNAME;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn POSTALNUMBERColumn
        {
            get
            {
                return this.columnPOSTALNUMBER;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn BLOCKColumn
        {
            get
            {
                return this.columnBLOCK;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn ENTRYColumn
        {
            get
            {
                return this.columnENTRY;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn FLOORColumn
        {
            get
            {
                return this.columnFLOOR;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn APNOColumn
        {
            get
            {
                return this.columnAPNO;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn ZIPCODEColumn
        {
            get
            {
                return this.columnZIPCODE;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn DESCRIPTIONColumn
        {
            get
            {
                return this.columnDESCRIPTION;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn SECTIONColumn
        {
            get
            {
                return this.columnSECTION;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count
        {
            get
            {
                return this.Rows.Count;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AddressRow this[int index]
        {
            get
            {
                return ((AddressRow)(this.Rows[index]));
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event AddressRowChangeEventHandler AddressRowChanging;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event AddressRowChangeEventHandler AddressRowChanged;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event AddressRowChangeEventHandler AddressRowDeleting;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event AddressRowChangeEventHandler AddressRowDeleted;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddAddressRow(AddressRow row)
        {
            this.Rows.Add(row);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AddressRow AddAddressRow(string SIRSUP, string SIRUTA, bool INTRAVILAN, string DISTRICTTYPE, string DISTRICTNAME, string STREETTYPE, string STREETNAME, string POSTALNUMBER, string BLOCK, string ENTRY, string FLOOR, string APNO, string ZIPCODE, string DESCRIPTION, string SECTION)
        {
            AddressRow rowAddressRow = ((AddressRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    null,
                    SIRSUP,
                    SIRUTA,
                    INTRAVILAN,
                    DISTRICTTYPE,
                    DISTRICTNAME,
                    STREETTYPE,
                    STREETNAME,
                    POSTALNUMBER,
                    BLOCK,
                    ENTRY,
                    FLOOR,
                    APNO,
                    ZIPCODE,
                    DESCRIPTION,
                    SECTION};
            rowAddressRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowAddressRow);
            return rowAddressRow;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AddressRow FindByADDRESSID(int ADDRESSID)
        {
            return ((AddressRow)(this.Rows.Find(new object[] {
                        ADDRESSID})));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual global::System.Collections.IEnumerator GetEnumerator()
        {
            return this.Rows.GetEnumerator();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone()
        {
            AddressDataTable cln = ((AddressDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance()
        {
            return new AddressDataTable();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars()
        {
            this.columnADDRESSID = base.Columns["ADDRESSID"];
            this.columnSIRSUP = base.Columns["SIRSUP"];
            this.columnSIRUTA = base.Columns["SIRUTA"];
            this.columnINTRAVILAN = base.Columns["INTRAVILAN"];
            this.columnDISTRICTTYPE = base.Columns["DISTRICTTYPE"];
            this.columnDISTRICTNAME = base.Columns["DISTRICTNAME"];
            this.columnSTREETTYPE = base.Columns["STREETTYPE"];
            this.columnSTREETNAME = base.Columns["STREETNAME"];
            this.columnPOSTALNUMBER = base.Columns["POSTALNUMBER"];
            this.columnBLOCK = base.Columns["BLOCK"];
            this.columnENTRY = base.Columns["ENTRY"];
            this.columnFLOOR = base.Columns["FLOOR"];
            this.columnAPNO = base.Columns["APNO"];
            this.columnZIPCODE = base.Columns["ZIPCODE"];
            this.columnDESCRIPTION = base.Columns["DESCRIPTION"];
            this.columnSECTION = base.Columns["SECTION"];
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass()
        {
            this.columnADDRESSID = new global::System.Data.DataColumn("ADDRESSID", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnADDRESSID);
            this.columnSIRSUP = new global::System.Data.DataColumn("SIRSUP", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnSIRSUP);
            this.columnSIRUTA = new global::System.Data.DataColumn("SIRUTA", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnSIRUTA);
            this.columnINTRAVILAN = new global::System.Data.DataColumn("INTRAVILAN", typeof(bool), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnINTRAVILAN);
            this.columnDISTRICTTYPE = new global::System.Data.DataColumn("DISTRICTTYPE", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnDISTRICTTYPE);
            this.columnDISTRICTNAME = new global::System.Data.DataColumn("DISTRICTNAME", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnDISTRICTNAME);
            this.columnSTREETTYPE = new global::System.Data.DataColumn("STREETTYPE", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnSTREETTYPE);
            this.columnSTREETNAME = new global::System.Data.DataColumn("STREETNAME", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnSTREETNAME);
            this.columnPOSTALNUMBER = new global::System.Data.DataColumn("POSTALNUMBER", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnPOSTALNUMBER);
            this.columnBLOCK = new global::System.Data.DataColumn("BLOCK", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnBLOCK);
            this.columnENTRY = new global::System.Data.DataColumn("ENTRY", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnENTRY);
            this.columnFLOOR = new global::System.Data.DataColumn("FLOOR", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnFLOOR);
            this.columnAPNO = new global::System.Data.DataColumn("APNO", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnAPNO);
            this.columnZIPCODE = new global::System.Data.DataColumn("ZIPCODE", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnZIPCODE);
            this.columnDESCRIPTION = new global::System.Data.DataColumn("DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnDESCRIPTION);
            this.columnSECTION = new global::System.Data.DataColumn("SECTION", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnSECTION);
            this.Constraints.Add(new global::System.Data.UniqueConstraint("Address_UQConstraint", new global::System.Data.DataColumn[] {
                            this.columnADDRESSID}, true));
            this.columnADDRESSID.AutoIncrement = true;
            this.columnADDRESSID.AutoIncrementSeed = 1;
            this.columnADDRESSID.AllowDBNull = false;
            this.columnADDRESSID.Unique = true;
            this.columnADDRESSID.Caption = "ID-ul unic al adresei";
            this.columnSIRSUP.Caption = "Siruta superioara reprezentand UAT-ul";
            this.columnSIRSUP.MaxLength = 50;
            this.columnSIRUTA.Caption = "Siruta reprezentand localitatea";
            this.columnSIRUTA.MaxLength = 50;
            this.columnINTRAVILAN.Caption = "Valoare booleana Intravilan";
            this.columnINTRAVILAN.DefaultValue = ((bool)(false));
            this.columnDISTRICTTYPE.Caption = "Tip Subunitate Administrativa (Dictionar)";
            this.columnDISTRICTTYPE.MaxLength = 50;
            this.columnDISTRICTNAME.Caption = "Denumire Subunitate Administrativa ";
            this.columnDISTRICTNAME.MaxLength = 50;
            this.columnSTREETTYPE.Caption = "Tip Strada (Dictionar)";
            this.columnSTREETTYPE.MaxLength = 50;
            this.columnSTREETNAME.Caption = "Denumire Strada ";
            this.columnSTREETNAME.MaxLength = 50;
            this.columnPOSTALNUMBER.Caption = "Numar Postal ";
            this.columnPOSTALNUMBER.MaxLength = 50;
            this.columnBLOCK.Caption = "Bloc ";
            this.columnBLOCK.MaxLength = 50;
            this.columnENTRY.Caption = "Scara ";
            this.columnENTRY.MaxLength = 50;
            this.columnFLOOR.Caption = "Etaj ";
            this.columnFLOOR.MaxLength = 50;
            this.columnAPNO.Caption = "Numar apartament ";
            this.columnAPNO.MaxLength = 50;
            this.columnZIPCODE.Caption = "Cod Postal ";
            this.columnZIPCODE.MaxLength = 50;
            this.columnDESCRIPTION.Caption = "Descriere suplimentara ";
            this.columnDESCRIPTION.MaxLength = 4000;
            this.columnSECTION.Caption = "Tronson ";
            this.columnSECTION.MaxLength = 100;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AddressRow NewAddressRow()
        {
            return ((AddressRow)(this.NewRow()));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
        {
            return new AddressRow(builder);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType()
        {
            return typeof(AddressRow);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanged(e);
            if ((this.AddressRowChanged != null))
            {
                this.AddressRowChanged(this, new AddressRowChangeEvent(((AddressRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanging(e);
            if ((this.AddressRowChanging != null))
            {
                this.AddressRowChanging(this, new AddressRowChangeEvent(((AddressRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleted(e);
            if ((this.AddressRowDeleted != null))
            {
                this.AddressRowDeleted(this, new AddressRowChangeEvent(((AddressRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleting(e);
            if ((this.AddressRowDeleting != null))
            {
                this.AddressRowDeleting(this, new AddressRowChangeEvent(((AddressRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemoveAddressRow(AddressRow row)
        {
            this.Rows.Remove(row);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
        {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            CGXML ds = new CGXML();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "AddressDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace))
            {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try
                {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
                    {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length))
                        {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length)
                                        && (s1.ReadByte() == s2.ReadByte()));)
                            {
                                ;
                            }
                            if ((s1.Position == s1.Length))
                            {
                                return type;
                            }
                        }
                    }
                }
                finally
                {
                    if ((s1 != null))
                    {
                        s1.Close();
                    }
                    if ((s2 != null))
                    {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }

    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class BuildingDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
    {

        private global::System.Data.DataColumn columnBUILDINGID;

        private global::System.Data.DataColumn columnLANDID;

        private global::System.Data.DataColumn columnADDRESSID;

        private global::System.Data.DataColumn columnBUILDNO;

        private global::System.Data.DataColumn columnMEASUREDAREA;

        private global::System.Data.DataColumn columnTOTALAREA;

        private global::System.Data.DataColumn columnBUILDINGDESTINATION;

        private global::System.Data.DataColumn columnLEVELSNO;

        private global::System.Data.DataColumn columnIUNO;

        private global::System.Data.DataColumn columnTAXVALUE;

        private global::System.Data.DataColumn columnNOTES;

        private global::System.Data.DataColumn columnISLEGAL;

        private global::System.Data.DataColumn columnLEGALAREA;

        private global::System.Data.DataColumn columnE2IDENTIFIER;

        private global::System.Data.DataColumn columnPAPERCADNO;

        private global::System.Data.DataColumn columnPAPERLBNO;

        private global::System.Data.DataColumn columnTOPONO;

        private global::System.Data.DataColumn columnCADGENNO;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public BuildingDataTable()
        {
            this.TableName = "Building";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal BuildingDataTable(global::System.Data.DataTable table)
        {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive))
            {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
            {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace))
            {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected BuildingDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                base(info, context)
        {
            this.InitVars();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn BUILDINGIDColumn
        {
            get
            {
                return this.columnBUILDINGID;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn LANDIDColumn
        {
            get
            {
                return this.columnLANDID;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn ADDRESSIDColumn
        {
            get
            {
                return this.columnADDRESSID;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn BUILDNOColumn
        {
            get
            {
                return this.columnBUILDNO;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn MEASUREDAREAColumn
        {
            get
            {
                return this.columnMEASUREDAREA;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn TOTALAREAColumn
        {
            get
            {
                return this.columnTOTALAREA;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn BUILDINGDESTINATIONColumn
        {
            get
            {
                return this.columnBUILDINGDESTINATION;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn LEVELSNOColumn
        {
            get
            {
                return this.columnLEVELSNO;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn IUNOColumn
        {
            get
            {
                return this.columnIUNO;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn TAXVALUEColumn
        {
            get
            {
                return this.columnTAXVALUE;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn NOTESColumn
        {
            get
            {
                return this.columnNOTES;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn ISLEGALColumn
        {
            get
            {
                return this.columnISLEGAL;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn LEGALAREAColumn
        {
            get
            {
                return this.columnLEGALAREA;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn E2IDENTIFIERColumn
        {
            get
            {
                return this.columnE2IDENTIFIER;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn PAPERCADNOColumn
        {
            get
            {
                return this.columnPAPERCADNO;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn PAPERLBNOColumn
        {
            get
            {
                return this.columnPAPERLBNO;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn TOPONOColumn
        {
            get
            {
                return this.columnTOPONO;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn CADGENNOColumn
        {
            get
            {
                return this.columnCADGENNO;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count
        {
            get
            {
                return this.Rows.Count;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public BuildingRow this[int index]
        {
            get
            {
                return ((BuildingRow)(this.Rows[index]));
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event BuildingRowChangeEventHandler BuildingRowChanging;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event BuildingRowChangeEventHandler BuildingRowChanged;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event BuildingRowChangeEventHandler BuildingRowDeleting;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event BuildingRowChangeEventHandler BuildingRowDeleted;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddBuildingRow(BuildingRow row)
        {
            this.Rows.Add(row);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public BuildingRow AddBuildingRow(
                    LandRow parentLandRowByFK_Immovable_Building,
                    AddressRow parentAddressRowByFK_Address_Building,
                    int BUILDNO,
                    double MEASUREDAREA,
                    double TOTALAREA,
                    string BUILDINGDESTINATION,
                    int LEVELSNO,
                    int IUNO,
                    double TAXVALUE,
                    string NOTES,
                    bool ISLEGAL,
                    double LEGALAREA,
                    string E2IDENTIFIER,
                    string PAPERCADNO,
                    string PAPERLBNO,
                    string TOPONO,
                    string CADGENNO)
        {
            BuildingRow rowBuildingRow = ((BuildingRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    null,
                    null,
                    null,
                    BUILDNO,
                    MEASUREDAREA,
                    TOTALAREA,
                    BUILDINGDESTINATION,
                    LEVELSNO,
                    IUNO,
                    TAXVALUE,
                    NOTES,
                    ISLEGAL,
                    LEGALAREA,
                    E2IDENTIFIER,
                    PAPERCADNO,
                    PAPERLBNO,
                    TOPONO,
                    CADGENNO};
            if ((parentLandRowByFK_Immovable_Building != null))
            {
                columnValuesArray[1] = parentLandRowByFK_Immovable_Building[0];
            }
            if ((parentAddressRowByFK_Address_Building != null))
            {
                columnValuesArray[2] = parentAddressRowByFK_Address_Building[0];
            }
            rowBuildingRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowBuildingRow);
            return rowBuildingRow;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public BuildingRow FindByBUILDINGID(int BUILDINGID)
        {
            return ((BuildingRow)(this.Rows.Find(new object[] {
                        BUILDINGID})));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual global::System.Collections.IEnumerator GetEnumerator()
        {
            return this.Rows.GetEnumerator();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone()
        {
            BuildingDataTable cln = ((BuildingDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance()
        {
            return new BuildingDataTable();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars()
        {
            this.columnBUILDINGID = base.Columns["BUILDINGID"];
            this.columnLANDID = base.Columns["LANDID"];
            this.columnADDRESSID = base.Columns["ADDRESSID"];
            this.columnBUILDNO = base.Columns["BUILDNO"];
            this.columnMEASUREDAREA = base.Columns["MEASUREDAREA"];
            this.columnTOTALAREA = base.Columns["TOTALAREA"];
            this.columnBUILDINGDESTINATION = base.Columns["BUILDINGDESTINATION"];
            this.columnLEVELSNO = base.Columns["LEVELSNO"];
            this.columnIUNO = base.Columns["IUNO"];
            this.columnTAXVALUE = base.Columns["TAXVALUE"];
            this.columnNOTES = base.Columns["NOTES"];
            this.columnISLEGAL = base.Columns["ISLEGAL"];
            this.columnLEGALAREA = base.Columns["LEGALAREA"];
            this.columnE2IDENTIFIER = base.Columns["E2IDENTIFIER"];
            this.columnPAPERCADNO = base.Columns["PAPERCADNO"];
            this.columnPAPERLBNO = base.Columns["PAPERLBNO"];
            this.columnTOPONO = base.Columns["TOPONO"];
            this.columnCADGENNO = base.Columns["CADGENNO"];
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass()
        {
            this.columnBUILDINGID = new global::System.Data.DataColumn("BUILDINGID", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnBUILDINGID);
            this.columnLANDID = new global::System.Data.DataColumn("LANDID", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnLANDID);
            this.columnADDRESSID = new global::System.Data.DataColumn("ADDRESSID", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnADDRESSID);
            this.columnBUILDNO = new global::System.Data.DataColumn("BUILDNO", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnBUILDNO);
            this.columnMEASUREDAREA = new global::System.Data.DataColumn("MEASUREDAREA", typeof(double), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnMEASUREDAREA);
            this.columnTOTALAREA = new global::System.Data.DataColumn("TOTALAREA", typeof(double), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnTOTALAREA);
            this.columnBUILDINGDESTINATION = new global::System.Data.DataColumn("BUILDINGDESTINATION", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnBUILDINGDESTINATION);
            this.columnLEVELSNO = new global::System.Data.DataColumn("LEVELSNO", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnLEVELSNO);
            this.columnIUNO = new global::System.Data.DataColumn("IUNO", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnIUNO);
            this.columnTAXVALUE = new global::System.Data.DataColumn("TAXVALUE", typeof(double), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnTAXVALUE);
            this.columnNOTES = new global::System.Data.DataColumn("NOTES", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnNOTES);
            this.columnISLEGAL = new global::System.Data.DataColumn("ISLEGAL", typeof(bool), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnISLEGAL);
            this.columnLEGALAREA = new global::System.Data.DataColumn("LEGALAREA", typeof(double), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnLEGALAREA);
            this.columnE2IDENTIFIER = new global::System.Data.DataColumn("E2IDENTIFIER", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnE2IDENTIFIER);
            this.columnPAPERCADNO = new global::System.Data.DataColumn("PAPERCADNO", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnPAPERCADNO);
            this.columnPAPERLBNO = new global::System.Data.DataColumn("PAPERLBNO", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnPAPERLBNO);
            this.columnTOPONO = new global::System.Data.DataColumn("TOPONO", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnTOPONO);
            this.columnCADGENNO = new global::System.Data.DataColumn("CADGENNO", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnCADGENNO);
            this.Constraints.Add(new global::System.Data.UniqueConstraint("Building_UQConstraint", new global::System.Data.DataColumn[] {
                            this.columnBUILDINGID}, true));
            this.columnBUILDINGID.AutoIncrement = true;
            this.columnBUILDINGID.AutoIncrementSeed = 1;
            this.columnBUILDINGID.AllowDBNull = false;
            this.columnBUILDINGID.Unique = true;
            this.columnBUILDINGID.Caption = "ID-ul unic al constructiei";
            this.columnLANDID.AllowDBNull = false;
            this.columnLANDID.Caption = "ID-ul terenului pe care se afla constructia ";
            this.columnADDRESSID.Caption = "ID-ul adresei constructiei ";
            this.columnBUILDNO.AllowDBNull = false;
            this.columnBUILDNO.Caption = "Numarul constructiei ";
            this.columnMEASUREDAREA.Caption = "Suprafata masurata a constructiei ";
            this.columnMEASUREDAREA.DefaultValue = ((double)(0D));
            this.columnTOTALAREA.Caption = "Suprafata desfasurata a constructiei ";
            this.columnTOTALAREA.DefaultValue = ((double)(0D));
            this.columnBUILDINGDESTINATION.Caption = "Cod grupa destinatie(Dictionar)";
            this.columnBUILDINGDESTINATION.MaxLength = 50;
            this.columnLEVELSNO.Caption = "Numar nivele constructie ";
            this.columnIUNO.Caption = "Numar unitati individuale ";
            this.columnIUNO.DefaultValue = ((int)(0));
            this.columnTAXVALUE.Caption = "Valoare de impozitare ";
            this.columnNOTES.Caption = "Comentarii/Mentiuni constructie ";
            this.columnNOTES.MaxLength = 2000;
            this.columnISLEGAL.AllowDBNull = false;
            this.columnISLEGAL.Caption = "Valoare booleana \'Are acte\'";
            this.columnISLEGAL.DefaultValue = ((bool)(true));
            this.columnLEGALAREA.Caption = "Suprafata din acte a constructiei ";
            this.columnE2IDENTIFIER.Caption = "Identificatorul electronic apartinand sistemului ETERRA";
            this.columnE2IDENTIFIER.MaxLength = 200;
            this.columnPAPERCADNO.Caption = "Numar cadastral hartie ";
            this.columnPAPERCADNO.MaxLength = 200;
            this.columnPAPERLBNO.Caption = "Numar carte funciara hartie";
            this.columnPAPERLBNO.MaxLength = 200;
            this.columnTOPONO.Caption = "Numar topografic";
            this.columnTOPONO.MaxLength = 200;
            this.columnCADGENNO.Caption = "Numar cadastru general ";
            this.columnCADGENNO.MaxLength = 200;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public BuildingRow NewBuildingRow()
        {
            return ((BuildingRow)(this.NewRow()));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
        {
            return new BuildingRow(builder);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType()
        {
            return typeof(BuildingRow);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanged(e);
            if ((this.BuildingRowChanged != null))
            {
                this.BuildingRowChanged(this, new BuildingRowChangeEvent(((BuildingRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanging(e);
            if ((this.BuildingRowChanging != null))
            {
                this.BuildingRowChanging(this, new BuildingRowChangeEvent(((BuildingRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleted(e);
            if ((this.BuildingRowDeleted != null))
            {
                this.BuildingRowDeleted(this, new BuildingRowChangeEvent(((BuildingRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleting(e);
            if ((this.BuildingRowDeleting != null))
            {
                this.BuildingRowDeleting(this, new BuildingRowChangeEvent(((BuildingRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemoveBuildingRow(BuildingRow row)
        {
            this.Rows.Remove(row);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
        {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            CGXML ds = new CGXML();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "BuildingDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace))
            {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try
                {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
                    {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length))
                        {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length)
                                        && (s1.ReadByte() == s2.ReadByte()));)
                            {
                                ;
                            }
                            if ((s1.Position == s1.Length))
                            {
                                return type;
                            }
                        }
                    }
                }
                finally
                {
                    if ((s1 != null))
                    {
                        s1.Close();
                    }
                    if ((s2 != null))
                    {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }

    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class BuildingCommonPartsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
    {

        private global::System.Data.DataColumn columnBUILDINGCOMMONPARTID;

        private global::System.Data.DataColumn columnBUILDINGID;

        private global::System.Data.DataColumn columnCOMMONPARTTYPE;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public BuildingCommonPartsDataTable()
        {
            this.TableName = "BuildingCommonParts";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal BuildingCommonPartsDataTable(global::System.Data.DataTable table)
        {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive))
            {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
            {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace))
            {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected BuildingCommonPartsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                base(info, context)
        {
            this.InitVars();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn BUILDINGCOMMONPARTIDColumn
        {
            get
            {
                return this.columnBUILDINGCOMMONPARTID;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn BUILDINGIDColumn
        {
            get
            {
                return this.columnBUILDINGID;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn COMMONPARTTYPEColumn
        {
            get
            {
                return this.columnCOMMONPARTTYPE;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count
        {
            get
            {
                return this.Rows.Count;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public BuildingCommonPartsRow this[int index]
        {
            get
            {
                return ((BuildingCommonPartsRow)(this.Rows[index]));
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event BuildingCommonPartsRowChangeEventHandler BuildingCommonPartsRowChanging;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event BuildingCommonPartsRowChangeEventHandler BuildingCommonPartsRowChanged;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event BuildingCommonPartsRowChangeEventHandler BuildingCommonPartsRowDeleting;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event BuildingCommonPartsRowChangeEventHandler BuildingCommonPartsRowDeleted;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddBuildingCommonPartsRow(BuildingCommonPartsRow row)
        {
            this.Rows.Add(row);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public BuildingCommonPartsRow AddBuildingCommonPartsRow(BuildingRow parentBuildingRowByFK_Building_BuildingCommonParts, string COMMONPARTTYPE)
        {
            BuildingCommonPartsRow rowBuildingCommonPartsRow = ((BuildingCommonPartsRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    null,
                    null,
                    COMMONPARTTYPE};
            if ((parentBuildingRowByFK_Building_BuildingCommonParts != null))
            {
                columnValuesArray[1] = parentBuildingRowByFK_Building_BuildingCommonParts[0];
            }
            rowBuildingCommonPartsRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowBuildingCommonPartsRow);
            return rowBuildingCommonPartsRow;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public BuildingCommonPartsRow FindByBUILDINGCOMMONPARTID(int BUILDINGCOMMONPARTID)
        {
            return ((BuildingCommonPartsRow)(this.Rows.Find(new object[] {
                        BUILDINGCOMMONPARTID})));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual global::System.Collections.IEnumerator GetEnumerator()
        {
            return this.Rows.GetEnumerator();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone()
        {
            BuildingCommonPartsDataTable cln = ((BuildingCommonPartsDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance()
        {
            return new BuildingCommonPartsDataTable();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars()
        {
            this.columnBUILDINGCOMMONPARTID = base.Columns["BUILDINGCOMMONPARTID"];
            this.columnBUILDINGID = base.Columns["BUILDINGID"];
            this.columnCOMMONPARTTYPE = base.Columns["COMMONPARTTYPE"];
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass()
        {
            this.columnBUILDINGCOMMONPARTID = new global::System.Data.DataColumn("BUILDINGCOMMONPARTID", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnBUILDINGCOMMONPARTID);
            this.columnBUILDINGID = new global::System.Data.DataColumn("BUILDINGID", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnBUILDINGID);
            this.columnCOMMONPARTTYPE = new global::System.Data.DataColumn("COMMONPARTTYPE", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnCOMMONPARTTYPE);
            this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnBUILDINGCOMMONPARTID}, true));
            this.columnBUILDINGCOMMONPARTID.AutoIncrement = true;
            this.columnBUILDINGCOMMONPARTID.AutoIncrementSeed = 1;
            this.columnBUILDINGCOMMONPARTID.AllowDBNull = false;
            this.columnBUILDINGCOMMONPARTID.Unique = true;
            this.columnBUILDINGCOMMONPARTID.Caption = "ID-ul unic al partii comune ";
            this.columnBUILDINGID.Caption = "ID-ul constructiei de care apartine partea comuna ";
            this.columnCOMMONPARTTYPE.Caption = "Tip parte comuna-Dictionar ";
            this.columnCOMMONPARTTYPE.MaxLength = 255;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public BuildingCommonPartsRow NewBuildingCommonPartsRow()
        {
            return ((BuildingCommonPartsRow)(this.NewRow()));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
        {
            return new BuildingCommonPartsRow(builder);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType()
        {
            return typeof(BuildingCommonPartsRow);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanged(e);
            if ((this.BuildingCommonPartsRowChanged != null))
            {
                this.BuildingCommonPartsRowChanged(this, new BuildingCommonPartsRowChangeEvent(((BuildingCommonPartsRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanging(e);
            if ((this.BuildingCommonPartsRowChanging != null))
            {
                this.BuildingCommonPartsRowChanging(this, new BuildingCommonPartsRowChangeEvent(((BuildingCommonPartsRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleted(e);
            if ((this.BuildingCommonPartsRowDeleted != null))
            {
                this.BuildingCommonPartsRowDeleted(this, new BuildingCommonPartsRowChangeEvent(((BuildingCommonPartsRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleting(e);
            if ((this.BuildingCommonPartsRowDeleting != null))
            {
                this.BuildingCommonPartsRowDeleting(this, new BuildingCommonPartsRowChangeEvent(((BuildingCommonPartsRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemoveBuildingCommonPartsRow(BuildingCommonPartsRow row)
        {
            this.Rows.Remove(row);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
        {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            CGXML ds = new CGXML();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "BuildingCommonPartsDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace))
            {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try
                {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
                    {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length))
                        {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length)
                                        && (s1.ReadByte() == s2.ReadByte()));)
                            {
                                ;
                            }
                            if ((s1.Position == s1.Length))
                            {
                                return type;
                            }
                        }
                    }
                }
                finally
                {
                    if ((s1 != null))
                    {
                        s1.Close();
                    }
                    if ((s2 != null))
                    {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }

    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class DeedDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
    {

        private global::System.Data.DataColumn columnDEEDID;

        private global::System.Data.DataColumn columnDEEDNUMBER;

        private global::System.Data.DataColumn columnDEEDDATE;

        private global::System.Data.DataColumn columnDEEDTYPE;

        private global::System.Data.DataColumn columnAUTHORITY;

        private global::System.Data.DataColumn columnNOTES;

        private global::System.Data.DataColumn columnFILEID;

        private global::System.Data.DataColumn columnVALUECURRENCY;

        private global::System.Data.DataColumn columnVALUEAMOUNT;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DeedDataTable()
        {
            this.TableName = "Deed";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal DeedDataTable(global::System.Data.DataTable table)
        {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive))
            {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
            {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace))
            {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected DeedDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                base(info, context)
        {
            this.InitVars();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn DEEDIDColumn
        {
            get
            {
                return this.columnDEEDID;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn DEEDNUMBERColumn
        {
            get
            {
                return this.columnDEEDNUMBER;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn DEEDDATEColumn
        {
            get
            {
                return this.columnDEEDDATE;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn DEEDTYPEColumn
        {
            get
            {
                return this.columnDEEDTYPE;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn AUTHORITYColumn
        {
            get
            {
                return this.columnAUTHORITY;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn NOTESColumn
        {
            get
            {
                return this.columnNOTES;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn FILEIDColumn
        {
            get
            {
                return this.columnFILEID;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn VALUECURRENCYColumn
        {
            get
            {
                return this.columnVALUECURRENCY;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn VALUEAMOUNTColumn
        {
            get
            {
                return this.columnVALUEAMOUNT;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count
        {
            get
            {
                return this.Rows.Count;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DeedRow this[int index]
        {
            get
            {
                return ((DeedRow)(this.Rows[index]));
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event DeedRowChangeEventHandler DeedRowChanging;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event DeedRowChangeEventHandler DeedRowChanged;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event DeedRowChangeEventHandler DeedRowDeleting;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event DeedRowChangeEventHandler DeedRowDeleted;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddDeedRow(DeedRow row)
        {
            this.Rows.Add(row);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DeedRow AddDeedRow(string DEEDNUMBER, System.DateTime DEEDDATE, string DEEDTYPE, string AUTHORITY, string NOTES, FileDescriptionRow parentFileDescriptionRowByFK_Deed_FileDescription, string VALUECURRENCY, string VALUEAMOUNT)
        {
            DeedRow rowDeedRow = ((DeedRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    null,
                    DEEDNUMBER,
                    DEEDDATE,
                    DEEDTYPE,
                    AUTHORITY,
                    NOTES,
                    null,
                    VALUECURRENCY,
                    VALUEAMOUNT};
            if ((parentFileDescriptionRowByFK_Deed_FileDescription != null))
            {
                columnValuesArray[6] = parentFileDescriptionRowByFK_Deed_FileDescription[6];
            }
            rowDeedRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowDeedRow);
            return rowDeedRow;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DeedRow FindByDEEDID(int DEEDID)
        {
            return ((DeedRow)(this.Rows.Find(new object[] {
                        DEEDID})));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual global::System.Collections.IEnumerator GetEnumerator()
        {
            return this.Rows.GetEnumerator();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone()
        {
            DeedDataTable cln = ((DeedDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance()
        {
            return new DeedDataTable();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars()
        {
            this.columnDEEDID = base.Columns["DEEDID"];
            this.columnDEEDNUMBER = base.Columns["DEEDNUMBER"];
            this.columnDEEDDATE = base.Columns["DEEDDATE"];
            this.columnDEEDTYPE = base.Columns["DEEDTYPE"];
            this.columnAUTHORITY = base.Columns["AUTHORITY"];
            this.columnNOTES = base.Columns["NOTES"];
            this.columnFILEID = base.Columns["FILEID"];
            this.columnVALUECURRENCY = base.Columns["VALUECURRENCY"];
            this.columnVALUEAMOUNT = base.Columns["VALUEAMOUNT"];
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass()
        {
            this.columnDEEDID = new global::System.Data.DataColumn("DEEDID", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnDEEDID);
            this.columnDEEDNUMBER = new global::System.Data.DataColumn("DEEDNUMBER", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnDEEDNUMBER);
            this.columnDEEDDATE = new global::System.Data.DataColumn("DEEDDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnDEEDDATE);
            this.columnDEEDTYPE = new global::System.Data.DataColumn("DEEDTYPE", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnDEEDTYPE);
            this.columnAUTHORITY = new global::System.Data.DataColumn("AUTHORITY", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnAUTHORITY);
            this.columnNOTES = new global::System.Data.DataColumn("NOTES", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnNOTES);
            this.columnFILEID = new global::System.Data.DataColumn("FILEID", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnFILEID);
            this.columnVALUECURRENCY = new global::System.Data.DataColumn("VALUECURRENCY", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnVALUECURRENCY);
            this.columnVALUEAMOUNT = new global::System.Data.DataColumn("VALUEAMOUNT", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnVALUEAMOUNT);
            this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnDEEDID}, true));
            this.columnDEEDID.AutoIncrement = true;
            this.columnDEEDID.AutoIncrementSeed = 1;
            this.columnDEEDID.AllowDBNull = false;
            this.columnDEEDID.Unique = true;
            this.columnDEEDID.Caption = "ID-ul unic al actului/documentului ";
            this.columnDEEDNUMBER.AllowDBNull = false;
            this.columnDEEDNUMBER.Caption = "Numarul actului/documentului ";
            this.columnDEEDNUMBER.MaxLength = 200;
            this.columnDEEDDATE.Caption = "Data actului/documentului ";
            this.columnDEEDTYPE.AllowDBNull = false;
            this.columnDEEDTYPE.Caption = "Tipul actului/documentului (Dictionar)";
            this.columnDEEDTYPE.MaxLength = 255;
            this.columnAUTHORITY.AllowDBNull = false;
            this.columnAUTHORITY.Caption = "Autoritatea emitenta ";
            this.columnAUTHORITY.MaxLength = 50;
            this.columnNOTES.Caption = "Descriere suplimentara act/document";
            this.columnNOTES.MaxLength = 4000;
            this.columnFILEID.AllowDBNull = false;
            this.columnFILEID.Caption = "ID-ul descrierii fisierului de care se leaga actul/documentul ";
            this.columnVALUECURRENCY.Caption = "Tip moneda valoare act/document ";
            this.columnVALUECURRENCY.MaxLength = 50;
            this.columnVALUEAMOUNT.Caption = "Valoare act/document";
            this.columnVALUEAMOUNT.MaxLength = 200;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DeedRow NewDeedRow()
        {
            return ((DeedRow)(this.NewRow()));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
        {
            return new DeedRow(builder);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType()
        {
            return typeof(DeedRow);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanged(e);
            if ((this.DeedRowChanged != null))
            {
                this.DeedRowChanged(this, new DeedRowChangeEvent(((DeedRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanging(e);
            if ((this.DeedRowChanging != null))
            {
                this.DeedRowChanging(this, new DeedRowChangeEvent(((DeedRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleted(e);
            if ((this.DeedRowDeleted != null))
            {
                this.DeedRowDeleted(this, new DeedRowChangeEvent(((DeedRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleting(e);
            if ((this.DeedRowDeleting != null))
            {
                this.DeedRowDeleting(this, new DeedRowChangeEvent(((DeedRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemoveDeedRow(DeedRow row)
        {
            this.Rows.Remove(row);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
        {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            CGXML ds = new CGXML();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "DeedDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace))
            {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try
                {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
                    {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length))
                        {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length)
                                        && (s1.ReadByte() == s2.ReadByte()));)
                            {
                                ;
                            }
                            if ((s1.Position == s1.Length))
                            {
                                return type;
                            }
                        }
                    }
                }
                finally
                {
                    if ((s1 != null))
                    {
                        s1.Close();
                    }
                    if ((s2 != null))
                    {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }

    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class FileDescriptionDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
    {

        private global::System.Data.DataColumn columnFILENAME;

        private global::System.Data.DataColumn columnEXPORTDATE;

        private global::System.Data.DataColumn columnFILEVERSION;

        private global::System.Data.DataColumn columnOPERATIONTYPE;

        private global::System.Data.DataColumn columnLICENSEDNAME;

        private global::System.Data.DataColumn columnLICENSENUMBER;

        private global::System.Data.DataColumn columnFILEID;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public FileDescriptionDataTable()
        {
            this.TableName = "FileDescription";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal FileDescriptionDataTable(global::System.Data.DataTable table)
        {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive))
            {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
            {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace))
            {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected FileDescriptionDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                base(info, context)
        {
            this.InitVars();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn FILENAMEColumn
        {
            get
            {
                return this.columnFILENAME;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn EXPORTDATEColumn
        {
            get
            {
                return this.columnEXPORTDATE;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn FILEVERSIONColumn
        {
            get
            {
                return this.columnFILEVERSION;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn OPERATIONTYPEColumn
        {
            get
            {
                return this.columnOPERATIONTYPE;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn LICENSEDNAMEColumn
        {
            get
            {
                return this.columnLICENSEDNAME;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn LICENSENUMBERColumn
        {
            get
            {
                return this.columnLICENSENUMBER;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn FILEIDColumn
        {
            get
            {
                return this.columnFILEID;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count
        {
            get
            {
                return this.Rows.Count;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public FileDescriptionRow this[int index]
        {
            get
            {
                return ((FileDescriptionRow)(this.Rows[index]));
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event FileDescriptionRowChangeEventHandler FileDescriptionRowChanging;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event FileDescriptionRowChangeEventHandler FileDescriptionRowChanged;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event FileDescriptionRowChangeEventHandler FileDescriptionRowDeleting;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event FileDescriptionRowChangeEventHandler FileDescriptionRowDeleted;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddFileDescriptionRow(FileDescriptionRow row)
        {
            this.Rows.Add(row);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public FileDescriptionRow AddFileDescriptionRow(string FILENAME, System.DateTime EXPORTDATE, string FILEVERSION, string OPERATIONTYPE, string LICENSEDNAME, string LICENSENUMBER)
        {
            FileDescriptionRow rowFileDescriptionRow = ((FileDescriptionRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    FILENAME,
                    EXPORTDATE,
                    FILEVERSION,
                    OPERATIONTYPE,
                    LICENSEDNAME,
                    LICENSENUMBER,
                    null};
            rowFileDescriptionRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowFileDescriptionRow);
            return rowFileDescriptionRow;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public FileDescriptionRow FindByFILEID(int FILEID)
        {
            return ((FileDescriptionRow)(this.Rows.Find(new object[] {
                        FILEID})));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual global::System.Collections.IEnumerator GetEnumerator()
        {
            return this.Rows.GetEnumerator();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone()
        {
            FileDescriptionDataTable cln = ((FileDescriptionDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance()
        {
            return new FileDescriptionDataTable();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars()
        {
            this.columnFILENAME = base.Columns["FILENAME"];
            this.columnEXPORTDATE = base.Columns["EXPORTDATE"];
            this.columnFILEVERSION = base.Columns["FILEVERSION"];
            this.columnOPERATIONTYPE = base.Columns["OPERATIONTYPE"];
            this.columnLICENSEDNAME = base.Columns["LICENSEDNAME"];
            this.columnLICENSENUMBER = base.Columns["LICENSENUMBER"];
            this.columnFILEID = base.Columns["FILEID"];
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass()
        {
            this.columnFILENAME = new global::System.Data.DataColumn("FILENAME", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnFILENAME);
            this.columnEXPORTDATE = new global::System.Data.DataColumn("EXPORTDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnEXPORTDATE);
            this.columnFILEVERSION = new global::System.Data.DataColumn("FILEVERSION", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnFILEVERSION);
            this.columnOPERATIONTYPE = new global::System.Data.DataColumn("OPERATIONTYPE", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnOPERATIONTYPE);
            this.columnLICENSEDNAME = new global::System.Data.DataColumn("LICENSEDNAME", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnLICENSEDNAME);
            this.columnLICENSENUMBER = new global::System.Data.DataColumn("LICENSENUMBER", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnLICENSENUMBER);
            this.columnFILEID = new global::System.Data.DataColumn("FILEID", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnFILEID);
            this.Constraints.Add(new global::System.Data.UniqueConstraint("FileDescription_UQConstraint", new global::System.Data.DataColumn[] {
                            this.columnFILEID}, true));
            this.columnFILENAME.AllowDBNull = false;
            this.columnFILENAME.Caption = "Denumirea fisierul CGXML ";
            this.columnFILENAME.MaxLength = 50;
            this.columnEXPORTDATE.Caption = "Data exportului fisierului din sistemul ETERRA";
            this.columnFILEVERSION.Caption = "Versiunea fisierului CP/aplicatiei Generare CP cu care a fost generat ";
            this.columnFILEVERSION.MaxLength = 50;
            this.columnOPERATIONTYPE.Caption = "Tip operatiune cadastrala-Dictionar ";
            this.columnOPERATIONTYPE.MaxLength = 50;
            this.columnLICENSEDNAME.Caption = "Denumire/Nume autorizat ";
            this.columnLICENSEDNAME.MaxLength = 255;
            this.columnLICENSENUMBER.Caption = "Serie licenta autorizat ";
            this.columnLICENSENUMBER.MaxLength = 50;
            this.columnFILEID.AutoIncrement = true;
            this.columnFILEID.AutoIncrementSeed = 1;
            this.columnFILEID.AllowDBNull = false;
            this.columnFILEID.Unique = true;
            this.columnFILEID.Caption = "ID-ul unic al descrierii fisierului ";
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public FileDescriptionRow NewFileDescriptionRow()
        {
            return ((FileDescriptionRow)(this.NewRow()));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
        {
            return new FileDescriptionRow(builder);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType()
        {
            return typeof(FileDescriptionRow);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanged(e);
            if ((this.FileDescriptionRowChanged != null))
            {
                this.FileDescriptionRowChanged(this, new FileDescriptionRowChangeEvent(((FileDescriptionRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanging(e);
            if ((this.FileDescriptionRowChanging != null))
            {
                this.FileDescriptionRowChanging(this, new FileDescriptionRowChangeEvent(((FileDescriptionRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleted(e);
            if ((this.FileDescriptionRowDeleted != null))
            {
                this.FileDescriptionRowDeleted(this, new FileDescriptionRowChangeEvent(((FileDescriptionRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleting(e);
            if ((this.FileDescriptionRowDeleting != null))
            {
                this.FileDescriptionRowDeleting(this, new FileDescriptionRowChangeEvent(((FileDescriptionRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemoveFileDescriptionRow(FileDescriptionRow row)
        {
            this.Rows.Remove(row);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
        {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            CGXML ds = new CGXML();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "FileDescriptionDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace))
            {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try
                {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
                    {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length))
                        {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length)
                                        && (s1.ReadByte() == s2.ReadByte()));)
                            {
                                ;
                            }
                            if ((s1.Position == s1.Length))
                            {
                                return type;
                            }
                        }
                    }
                }
                finally
                {
                    if ((s1 != null))
                    {
                        s1.Close();
                    }
                    if ((s2 != null))
                    {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }

    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class LandDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
    {

        private global::System.Data.DataColumn columnLANDID;

        private global::System.Data.DataColumn columnCADSECTOR;

        private global::System.Data.DataColumn columnADDRESSID;

        private global::System.Data.DataColumn columnMEASUREDAREA;

        private global::System.Data.DataColumn columnPARCELLEGALAREA;

        private global::System.Data.DataColumn columnISNEW;

        private global::System.Data.DataColumn columnFILEID;

        private global::System.Data.DataColumn columnBUILDINGLEGALAREA;

        private global::System.Data.DataColumn columnTAXVALUE;

        private global::System.Data.DataColumn columnNOTES;

        private global::System.Data.DataColumn columnENCLOSED;

        private global::System.Data.DataColumn columnCOAREA;

        private global::System.Data.DataColumn columnE2IDENTIFIER;

        private global::System.Data.DataColumn columnPAPERCADNO;

        private global::System.Data.DataColumn columnPAPERLBNO;

        private global::System.Data.DataColumn columnTOPONO;

        private global::System.Data.DataColumn columnCADGENNO;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public LandDataTable()
        {
            this.TableName = "Land";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal LandDataTable(global::System.Data.DataTable table)
        {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive))
            {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
            {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace))
            {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected LandDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                base(info, context)
        {
            this.InitVars();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn LANDIDColumn
        {
            get
            {
                return this.columnLANDID;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn CADSECTORColumn
        {
            get
            {
                return this.columnCADSECTOR;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn ADDRESSIDColumn
        {
            get
            {
                return this.columnADDRESSID;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn MEASUREDAREAColumn
        {
            get
            {
                return this.columnMEASUREDAREA;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn PARCELLEGALAREAColumn
        {
            get
            {
                return this.columnPARCELLEGALAREA;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn ISNEWColumn
        {
            get
            {
                return this.columnISNEW;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn FILEIDColumn
        {
            get
            {
                return this.columnFILEID;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn BUILDINGLEGALAREAColumn
        {
            get
            {
                return this.columnBUILDINGLEGALAREA;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn TAXVALUEColumn
        {
            get
            {
                return this.columnTAXVALUE;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn NOTESColumn
        {
            get
            {
                return this.columnNOTES;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn ENCLOSEDColumn
        {
            get
            {
                return this.columnENCLOSED;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn COAREAColumn
        {
            get
            {
                return this.columnCOAREA;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn E2IDENTIFIERColumn
        {
            get
            {
                return this.columnE2IDENTIFIER;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn PAPERCADNOColumn
        {
            get
            {
                return this.columnPAPERCADNO;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn PAPERLBNOColumn
        {
            get
            {
                return this.columnPAPERLBNO;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn TOPONOColumn
        {
            get
            {
                return this.columnTOPONO;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn CADGENNOColumn
        {
            get
            {
                return this.columnCADGENNO;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count
        {
            get
            {
                return this.Rows.Count;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public LandRow this[int index]
        {
            get
            {
                return ((LandRow)(this.Rows[index]));
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event LandRowChangeEventHandler LandRowChanging;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event LandRowChangeEventHandler LandRowChanged;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event LandRowChangeEventHandler LandRowDeleting;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event LandRowChangeEventHandler LandRowDeleted;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddLandRow(LandRow row)
        {
            this.Rows.Add(row);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public LandRow AddLandRow(
                    string CADSECTOR,
                    AddressRow parentAddressRowByFK_Address_Immovable,
                    double MEASUREDAREA,
                    double PARCELLEGALAREA,
                    bool ISNEW,
                    FileDescriptionRow parentFileDescriptionRowByFK_FileDescription_Land,
                    double BUILDINGLEGALAREA,
                    double TAXVALUE,
                    string NOTES,
                    bool ENCLOSED,
                    bool COAREA,
                    string E2IDENTIFIER,
                    string PAPERCADNO,
                    string PAPERLBNO,
                    string TOPONO,
                    string CADGENNO)
        {
            LandRow rowLandRow = ((LandRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    null,
                    CADSECTOR,
                    null,
                    MEASUREDAREA,
                    PARCELLEGALAREA,
                    ISNEW,
                    null,
                    BUILDINGLEGALAREA,
                    TAXVALUE,
                    NOTES,
                    ENCLOSED,
                    COAREA,
                    E2IDENTIFIER,
                    PAPERCADNO,
                    PAPERLBNO,
                    TOPONO,
                    CADGENNO};
            if ((parentAddressRowByFK_Address_Immovable != null))
            {
                columnValuesArray[2] = parentAddressRowByFK_Address_Immovable[0];
            }
            if ((parentFileDescriptionRowByFK_FileDescription_Land != null))
            {
                columnValuesArray[6] = parentFileDescriptionRowByFK_FileDescription_Land[6];
            }
            rowLandRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowLandRow);
            return rowLandRow;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public LandRow FindByLANDID(int LANDID)
        {
            return ((LandRow)(this.Rows.Find(new object[] {
                        LANDID})));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual global::System.Collections.IEnumerator GetEnumerator()
        {
            return this.Rows.GetEnumerator();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone()
        {
            LandDataTable cln = ((LandDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance()
        {
            return new LandDataTable();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars()
        {
            this.columnLANDID = base.Columns["LANDID"];
            this.columnCADSECTOR = base.Columns["CADSECTOR"];
            this.columnADDRESSID = base.Columns["ADDRESSID"];
            this.columnMEASUREDAREA = base.Columns["MEASUREDAREA"];
            this.columnPARCELLEGALAREA = base.Columns["PARCELLEGALAREA"];
            this.columnISNEW = base.Columns["ISNEW"];
            this.columnFILEID = base.Columns["FILEID"];
            this.columnBUILDINGLEGALAREA = base.Columns["BUILDINGLEGALAREA"];
            this.columnTAXVALUE = base.Columns["TAXVALUE"];
            this.columnNOTES = base.Columns["NOTES"];
            this.columnENCLOSED = base.Columns["ENCLOSED"];
            this.columnCOAREA = base.Columns["COAREA"];
            this.columnE2IDENTIFIER = base.Columns["E2IDENTIFIER"];
            this.columnPAPERCADNO = base.Columns["PAPERCADNO"];
            this.columnPAPERLBNO = base.Columns["PAPERLBNO"];
            this.columnTOPONO = base.Columns["TOPONO"];
            this.columnCADGENNO = base.Columns["CADGENNO"];
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass()
        {
            this.columnLANDID = new global::System.Data.DataColumn("LANDID", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnLANDID);
            this.columnCADSECTOR = new global::System.Data.DataColumn("CADSECTOR", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnCADSECTOR);
            this.columnADDRESSID = new global::System.Data.DataColumn("ADDRESSID", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnADDRESSID);
            this.columnMEASUREDAREA = new global::System.Data.DataColumn("MEASUREDAREA", typeof(double), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnMEASUREDAREA);
            this.columnPARCELLEGALAREA = new global::System.Data.DataColumn("PARCELLEGALAREA", typeof(double), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnPARCELLEGALAREA);
            this.columnISNEW = new global::System.Data.DataColumn("ISNEW", typeof(bool), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnISNEW);
            this.columnFILEID = new global::System.Data.DataColumn("FILEID", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnFILEID);
            this.columnBUILDINGLEGALAREA = new global::System.Data.DataColumn("BUILDINGLEGALAREA", typeof(double), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnBUILDINGLEGALAREA);
            this.columnTAXVALUE = new global::System.Data.DataColumn("TAXVALUE", typeof(double), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnTAXVALUE);
            this.columnNOTES = new global::System.Data.DataColumn("NOTES", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnNOTES);
            this.columnENCLOSED = new global::System.Data.DataColumn("ENCLOSED", typeof(bool), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnENCLOSED);
            this.columnCOAREA = new global::System.Data.DataColumn("COAREA", typeof(bool), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnCOAREA);
            this.columnE2IDENTIFIER = new global::System.Data.DataColumn("E2IDENTIFIER", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnE2IDENTIFIER);
            this.columnPAPERCADNO = new global::System.Data.DataColumn("PAPERCADNO", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnPAPERCADNO);
            this.columnPAPERLBNO = new global::System.Data.DataColumn("PAPERLBNO", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnPAPERLBNO);
            this.columnTOPONO = new global::System.Data.DataColumn("TOPONO", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnTOPONO);
            this.columnCADGENNO = new global::System.Data.DataColumn("CADGENNO", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnCADGENNO);
            this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnLANDID}, true));
            this.columnLANDID.AutoIncrement = true;
            this.columnLANDID.AutoIncrementSeed = 1;
            this.columnLANDID.AllowDBNull = false;
            this.columnLANDID.Unique = true;
            this.columnLANDID.Caption = "ID-ul unic al terenului ";
            this.columnCADSECTOR.Caption = "Sectorul cadastral in care se afla terenul";
            this.columnCADSECTOR.MaxLength = 200;
            this.columnADDRESSID.Caption = "ID-ul adresei terenului ";
            this.columnMEASUREDAREA.AllowDBNull = false;
            this.columnMEASUREDAREA.Caption = "Suprafata masurata teren ";
            this.columnMEASUREDAREA.DefaultValue = ((double)(0D));
            this.columnPARCELLEGALAREA.Caption = "Supratafata totala din acte teren";
            this.columnISNEW.Caption = "Valoare booleana tip teren nou";
            this.columnISNEW.DefaultValue = ((bool)(true));
            this.columnFILEID.Caption = "ID-ul descrierii fisierului CP de care se leaga terenul";
            this.columnBUILDINGLEGALAREA.Caption = "Suprafata totala din acte constructii ";
            this.columnTAXVALUE.Caption = "Valoare de impozitare ";
            this.columnNOTES.Caption = "Comentarii/Mentiuni teren";
            this.columnNOTES.MaxLength = 2000;
            this.columnE2IDENTIFIER.Caption = "Identificatorul electronic apartinand sistemului ETERRA";
            this.columnE2IDENTIFIER.MaxLength = 200;
            this.columnPAPERCADNO.Caption = "Numar cadastral hartie ";
            this.columnPAPERCADNO.MaxLength = 200;
            this.columnPAPERLBNO.Caption = "Numar carte funciara hartie";
            this.columnPAPERLBNO.MaxLength = 200;
            this.columnTOPONO.Caption = "Numar topografic";
            this.columnTOPONO.MaxLength = 200;
            this.columnCADGENNO.Caption = "Numar cadastru general ";
            this.columnCADGENNO.MaxLength = 200;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public LandRow NewLandRow()
        {
            return ((LandRow)(this.NewRow()));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
        {
            return new LandRow(builder);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType()
        {
            return typeof(LandRow);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanged(e);
            if ((this.LandRowChanged != null))
            {
                this.LandRowChanged(this, new LandRowChangeEvent(((LandRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanging(e);
            if ((this.LandRowChanging != null))
            {
                this.LandRowChanging(this, new LandRowChangeEvent(((LandRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleted(e);
            if ((this.LandRowDeleted != null))
            {
                this.LandRowDeleted(this, new LandRowChangeEvent(((LandRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleting(e);
            if ((this.LandRowDeleting != null))
            {
                this.LandRowDeleting(this, new LandRowChangeEvent(((LandRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemoveLandRow(LandRow row)
        {
            this.Rows.Remove(row);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
        {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            CGXML ds = new CGXML();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "LandDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace))
            {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try
                {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
                    {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length))
                        {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length)
                                        && (s1.ReadByte() == s2.ReadByte()));)
                            {
                                ;
                            }
                            if ((s1.Position == s1.Length))
                            {
                                return type;
                            }
                        }
                    }
                }
                finally
                {
                    if ((s1 != null))
                    {
                        s1.Close();
                    }
                    if ((s2 != null))
                    {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }

    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class IUDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
    {

        private global::System.Data.DataColumn columnIUID;

        private global::System.Data.DataColumn columnBUILDINGID;

        private global::System.Data.DataColumn columnIDENTIFIER;

        private global::System.Data.DataColumn columnSECTION;

        private global::System.Data.DataColumn columnAPNO;

        private global::System.Data.DataColumn columnENTRY;

        private global::System.Data.DataColumn columnMEASUREDAREA;

        private global::System.Data.DataColumn columnTOTALAREA;

        private global::System.Data.DataColumn columnLANDINDIVISIONAREA;

        private global::System.Data.DataColumn columnCOMMONPARTSAREA;

        private global::System.Data.DataColumn columnNOTES;

        private global::System.Data.DataColumn columnFLOOR;

        private global::System.Data.DataColumn columnLANDDIVISIONTYPE;

        private global::System.Data.DataColumn columnCOMMONPARTSTYPE;

        private global::System.Data.DataColumn columnROOMNO;

        private global::System.Data.DataColumn columnE2IDENTIFIER;

        private global::System.Data.DataColumn columnPAPERCADNO;

        private global::System.Data.DataColumn columnPAPERLBNO;

        private global::System.Data.DataColumn columnTOPONO;

        private global::System.Data.DataColumn columnCADGENNO;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public IUDataTable()
        {
            this.TableName = "IU";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal IUDataTable(global::System.Data.DataTable table)
        {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive))
            {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
            {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace))
            {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected IUDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                base(info, context)
        {
            this.InitVars();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn IUIDColumn
        {
            get
            {
                return this.columnIUID;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn BUILDINGIDColumn
        {
            get
            {
                return this.columnBUILDINGID;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn IDENTIFIERColumn
        {
            get
            {
                return this.columnIDENTIFIER;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn SECTIONColumn
        {
            get
            {
                return this.columnSECTION;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn APNOColumn
        {
            get
            {
                return this.columnAPNO;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn ENTRYColumn
        {
            get
            {
                return this.columnENTRY;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn MEASUREDAREAColumn
        {
            get
            {
                return this.columnMEASUREDAREA;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn TOTALAREAColumn
        {
            get
            {
                return this.columnTOTALAREA;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn LANDINDIVISIONAREAColumn
        {
            get
            {
                return this.columnLANDINDIVISIONAREA;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn COMMONPARTSAREAColumn
        {
            get
            {
                return this.columnCOMMONPARTSAREA;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn NOTESColumn
        {
            get
            {
                return this.columnNOTES;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn FLOORColumn
        {
            get
            {
                return this.columnFLOOR;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn LANDDIVISIONTYPEColumn
        {
            get
            {
                return this.columnLANDDIVISIONTYPE;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn COMMONPARTSTYPEColumn
        {
            get
            {
                return this.columnCOMMONPARTSTYPE;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn ROOMNOColumn
        {
            get
            {
                return this.columnROOMNO;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn E2IDENTIFIERColumn
        {
            get
            {
                return this.columnE2IDENTIFIER;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn PAPERCADNOColumn
        {
            get
            {
                return this.columnPAPERCADNO;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn PAPERLBNOColumn
        {
            get
            {
                return this.columnPAPERLBNO;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn TOPONOColumn
        {
            get
            {
                return this.columnTOPONO;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn CADGENNOColumn
        {
            get
            {
                return this.columnCADGENNO;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count
        {
            get
            {
                return this.Rows.Count;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public IURow this[int index]
        {
            get
            {
                return ((IURow)(this.Rows[index]));
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event IURowChangeEventHandler IURowChanging;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event IURowChangeEventHandler IURowChanged;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event IURowChangeEventHandler IURowDeleting;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event IURowChangeEventHandler IURowDeleted;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddIURow(IURow row)
        {
            this.Rows.Add(row);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public IURow AddIURow(
                    BuildingRow parentBuildingRowByFK_Building_IndividualUnit,
                    string IDENTIFIER,
                    string SECTION,
                    string APNO,
                    string ENTRY,
                    double MEASUREDAREA,
                    double TOTALAREA,
                    string LANDINDIVISIONAREA,
                    string COMMONPARTSAREA,
                    string NOTES,
                    string FLOOR,
                    string LANDDIVISIONTYPE,
                    string COMMONPARTSTYPE,
                    short ROOMNO,
                    string E2IDENTIFIER,
                    string PAPERCADNO,
                    string PAPERLBNO,
                    string TOPONO,
                    string CADGENNO)
        {
            IURow rowIURow = ((IURow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    null,
                    null,
                    IDENTIFIER,
                    SECTION,
                    APNO,
                    ENTRY,
                    MEASUREDAREA,
                    TOTALAREA,
                    LANDINDIVISIONAREA,
                    COMMONPARTSAREA,
                    NOTES,
                    FLOOR,
                    LANDDIVISIONTYPE,
                    COMMONPARTSTYPE,
                    ROOMNO,
                    E2IDENTIFIER,
                    PAPERCADNO,
                    PAPERLBNO,
                    TOPONO,
                    CADGENNO};
            if ((parentBuildingRowByFK_Building_IndividualUnit != null))
            {
                columnValuesArray[1] = parentBuildingRowByFK_Building_IndividualUnit[0];
            }
            rowIURow.ItemArray = columnValuesArray;
            this.Rows.Add(rowIURow);
            return rowIURow;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public IURow FindByIUID(int IUID)
        {
            return ((IURow)(this.Rows.Find(new object[] {
                        IUID})));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual global::System.Collections.IEnumerator GetEnumerator()
        {
            return this.Rows.GetEnumerator();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone()
        {
            IUDataTable cln = ((IUDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance()
        {
            return new IUDataTable();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars()
        {
            this.columnIUID = base.Columns["IUID"];
            this.columnBUILDINGID = base.Columns["BUILDINGID"];
            this.columnIDENTIFIER = base.Columns["IDENTIFIER"];
            this.columnSECTION = base.Columns["SECTION"];
            this.columnAPNO = base.Columns["APNO"];
            this.columnENTRY = base.Columns["ENTRY"];
            this.columnMEASUREDAREA = base.Columns["MEASUREDAREA"];
            this.columnTOTALAREA = base.Columns["TOTALAREA"];
            this.columnLANDINDIVISIONAREA = base.Columns["LANDINDIVISIONAREA"];
            this.columnCOMMONPARTSAREA = base.Columns["COMMONPARTSAREA"];
            this.columnNOTES = base.Columns["NOTES"];
            this.columnFLOOR = base.Columns["FLOOR"];
            this.columnLANDDIVISIONTYPE = base.Columns["LANDDIVISIONTYPE"];
            this.columnCOMMONPARTSTYPE = base.Columns["COMMONPARTSTYPE"];
            this.columnROOMNO = base.Columns["ROOMNO"];
            this.columnE2IDENTIFIER = base.Columns["E2IDENTIFIER"];
            this.columnPAPERCADNO = base.Columns["PAPERCADNO"];
            this.columnPAPERLBNO = base.Columns["PAPERLBNO"];
            this.columnTOPONO = base.Columns["TOPONO"];
            this.columnCADGENNO = base.Columns["CADGENNO"];
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass()
        {
            this.columnIUID = new global::System.Data.DataColumn("IUID", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnIUID);
            this.columnBUILDINGID = new global::System.Data.DataColumn("BUILDINGID", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnBUILDINGID);
            this.columnIDENTIFIER = new global::System.Data.DataColumn("IDENTIFIER", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnIDENTIFIER);
            this.columnSECTION = new global::System.Data.DataColumn("SECTION", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnSECTION);
            this.columnAPNO = new global::System.Data.DataColumn("APNO", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnAPNO);
            this.columnENTRY = new global::System.Data.DataColumn("ENTRY", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnENTRY);
            this.columnMEASUREDAREA = new global::System.Data.DataColumn("MEASUREDAREA", typeof(double), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnMEASUREDAREA);
            this.columnTOTALAREA = new global::System.Data.DataColumn("TOTALAREA", typeof(double), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnTOTALAREA);
            this.columnLANDINDIVISIONAREA = new global::System.Data.DataColumn("LANDINDIVISIONAREA", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnLANDINDIVISIONAREA);
            this.columnCOMMONPARTSAREA = new global::System.Data.DataColumn("COMMONPARTSAREA", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnCOMMONPARTSAREA);
            this.columnNOTES = new global::System.Data.DataColumn("NOTES", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnNOTES);
            this.columnFLOOR = new global::System.Data.DataColumn("FLOOR", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnFLOOR);
            this.columnLANDDIVISIONTYPE = new global::System.Data.DataColumn("LANDDIVISIONTYPE", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnLANDDIVISIONTYPE);
            this.columnCOMMONPARTSTYPE = new global::System.Data.DataColumn("COMMONPARTSTYPE", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnCOMMONPARTSTYPE);
            this.columnROOMNO = new global::System.Data.DataColumn("ROOMNO", typeof(short), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnROOMNO);
            this.columnE2IDENTIFIER = new global::System.Data.DataColumn("E2IDENTIFIER", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnE2IDENTIFIER);
            this.columnPAPERCADNO = new global::System.Data.DataColumn("PAPERCADNO", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnPAPERCADNO);
            this.columnPAPERLBNO = new global::System.Data.DataColumn("PAPERLBNO", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnPAPERLBNO);
            this.columnTOPONO = new global::System.Data.DataColumn("TOPONO", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnTOPONO);
            this.columnCADGENNO = new global::System.Data.DataColumn("CADGENNO", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnCADGENNO);
            this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnIUID}, true));
            this.columnIUID.AutoIncrement = true;
            this.columnIUID.AutoIncrementSeed = 1;
            this.columnIUID.AllowDBNull = false;
            this.columnIUID.Unique = true;
            this.columnIUID.Caption = "ID-ul unic al unitatii individuale ";
            this.columnBUILDINGID.Caption = "ID-ul constructiei de care apartine unitatea individuala ";
            this.columnIDENTIFIER.AllowDBNull = false;
            this.columnIDENTIFIER.Caption = "Identificator apartament ";
            this.columnIDENTIFIER.MaxLength = 50;
            this.columnSECTION.Caption = "Tronsonul blocului de care apartine unitatea individuala ";
            this.columnSECTION.MaxLength = 50;
            this.columnAPNO.Caption = "Numar apartament/denumire al unitatii individuale ";
            this.columnAPNO.MaxLength = 50;
            this.columnENTRY.Caption = "Scara blocului ";
            this.columnENTRY.MaxLength = 50;
            this.columnMEASUREDAREA.Caption = "Suprafata masurata ";
            this.columnTOTALAREA.Caption = "Suprafata utila ";
            this.columnLANDINDIVISIONAREA.Caption = "Valoare cota teren indiviza ";
            this.columnCOMMONPARTSAREA.Caption = "Valoare cota parti comune ";
            this.columnNOTES.Caption = "Comentarii/Mentiuni unitate individuala ";
            this.columnNOTES.MaxLength = 2000;
            this.columnFLOOR.Caption = "Etaj ";
            this.columnFLOOR.MaxLength = 50;
            this.columnLANDDIVISIONTYPE.Caption = "Tip cota teren indiviza (Dictionar)";
            this.columnCOMMONPARTSTYPE.Caption = "Tip cota parti comune (Dictionar)";
            this.columnROOMNO.Caption = "Numar Camere";
            this.columnE2IDENTIFIER.Caption = "Identificatorul electronic apartinand sistemului ETERRA";
            this.columnE2IDENTIFIER.MaxLength = 200;
            this.columnPAPERCADNO.Caption = "Numar cadastral hartie ";
            this.columnPAPERCADNO.MaxLength = 200;
            this.columnPAPERLBNO.Caption = "Numar carte funciara hartie";
            this.columnPAPERLBNO.MaxLength = 200;
            this.columnTOPONO.Caption = "Numar topografic";
            this.columnTOPONO.MaxLength = 200;
            this.columnCADGENNO.Caption = "Numar cadastru general ";
            this.columnCADGENNO.MaxLength = 200;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public IURow NewIURow()
        {
            return ((IURow)(this.NewRow()));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
        {
            return new IURow(builder);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType()
        {
            return typeof(IURow);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanged(e);
            if ((this.IURowChanged != null))
            {
                this.IURowChanged(this, new IURowChangeEvent(((IURow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanging(e);
            if ((this.IURowChanging != null))
            {
                this.IURowChanging(this, new IURowChangeEvent(((IURow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleted(e);
            if ((this.IURowDeleted != null))
            {
                this.IURowDeleted(this, new IURowChangeEvent(((IURow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleting(e);
            if ((this.IURowDeleting != null))
            {
                this.IURowDeleting(this, new IURowChangeEvent(((IURow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemoveIURow(IURow row)
        {
            this.Rows.Remove(row);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
        {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            CGXML ds = new CGXML();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "IUDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace))
            {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try
                {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
                    {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length))
                        {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length)
                                        && (s1.ReadByte() == s2.ReadByte()));)
                            {
                                ;
                            }
                            if ((s1.Position == s1.Length))
                            {
                                return type;
                            }
                        }
                    }
                }
                finally
                {
                    if ((s1 != null))
                    {
                        s1.Close();
                    }
                    if ((s2 != null))
                    {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }

    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class ParcelDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
    {

        private global::System.Data.DataColumn columnPARCELID;

        private global::System.Data.DataColumn columnLANDID;

        private global::System.Data.DataColumn columnNUMBER;

        private global::System.Data.DataColumn columnMEASUREDAREA;

        private global::System.Data.DataColumn columnUSECATEGORY;

        private global::System.Data.DataColumn columnINTRAVILAN;

        private global::System.Data.DataColumn columnTAXVALUE;

        private global::System.Data.DataColumn columnTITLENO;

        private global::System.Data.DataColumn columnLANDPLOTNO;

        private global::System.Data.DataColumn columnPARCELNO;

        private global::System.Data.DataColumn columnNOTES;

        private global::System.Data.DataColumn columnE2IDENTIFIER;

        private global::System.Data.DataColumn columnPAPERCADNO;

        private global::System.Data.DataColumn columnPAPERLBNO;

        private global::System.Data.DataColumn columnTOPONO;

        private global::System.Data.DataColumn columnCADGENNO;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ParcelDataTable()
        {
            this.TableName = "Parcel";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal ParcelDataTable(global::System.Data.DataTable table)
        {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive))
            {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
            {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace))
            {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected ParcelDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                base(info, context)
        {
            this.InitVars();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn PARCELIDColumn
        {
            get
            {
                return this.columnPARCELID;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn LANDIDColumn
        {
            get
            {
                return this.columnLANDID;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn NUMBERColumn
        {
            get
            {
                return this.columnNUMBER;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn MEASUREDAREAColumn
        {
            get
            {
                return this.columnMEASUREDAREA;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn USECATEGORYColumn
        {
            get
            {
                return this.columnUSECATEGORY;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn INTRAVILANColumn
        {
            get
            {
                return this.columnINTRAVILAN;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn TAXVALUEColumn
        {
            get
            {
                return this.columnTAXVALUE;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn TITLENOColumn
        {
            get
            {
                return this.columnTITLENO;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn LANDPLOTNOColumn
        {
            get
            {
                return this.columnLANDPLOTNO;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn PARCELNOColumn
        {
            get
            {
                return this.columnPARCELNO;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn NOTESColumn
        {
            get
            {
                return this.columnNOTES;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn E2IDENTIFIERColumn
        {
            get
            {
                return this.columnE2IDENTIFIER;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn PAPERCADNOColumn
        {
            get
            {
                return this.columnPAPERCADNO;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn PAPERLBNOColumn
        {
            get
            {
                return this.columnPAPERLBNO;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn TOPONOColumn
        {
            get
            {
                return this.columnTOPONO;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn CADGENNOColumn
        {
            get
            {
                return this.columnCADGENNO;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count
        {
            get
            {
                return this.Rows.Count;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ParcelRow this[int index]
        {
            get
            {
                return ((ParcelRow)(this.Rows[index]));
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event ParcelRowChangeEventHandler ParcelRowChanging;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event ParcelRowChangeEventHandler ParcelRowChanged;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event ParcelRowChangeEventHandler ParcelRowDeleting;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event ParcelRowChangeEventHandler ParcelRowDeleted;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddParcelRow(ParcelRow row)
        {
            this.Rows.Add(row);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ParcelRow AddParcelRow(LandRow parentLandRowByFK_Immovable_Parcel, int NUMBER, double MEASUREDAREA, string USECATEGORY, bool INTRAVILAN, double TAXVALUE, string TITLENO, string LANDPLOTNO, string PARCELNO, string NOTES, string E2IDENTIFIER, string PAPERCADNO, string PAPERLBNO, string TOPONO, string CADGENNO)
        {
            ParcelRow rowParcelRow = ((ParcelRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    null,
                    null,
                    NUMBER,
                    MEASUREDAREA,
                    USECATEGORY,
                    INTRAVILAN,
                    TAXVALUE,
                    TITLENO,
                    LANDPLOTNO,
                    PARCELNO,
                    NOTES,
                    E2IDENTIFIER,
                    PAPERCADNO,
                    PAPERLBNO,
                    TOPONO,
                    CADGENNO};
            if ((parentLandRowByFK_Immovable_Parcel != null))
            {
                columnValuesArray[1] = parentLandRowByFK_Immovable_Parcel[0];
            }
            rowParcelRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowParcelRow);
            return rowParcelRow;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ParcelRow FindByPARCELID(int PARCELID)
        {
            return ((ParcelRow)(this.Rows.Find(new object[] {
                        PARCELID})));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual global::System.Collections.IEnumerator GetEnumerator()
        {
            return this.Rows.GetEnumerator();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone()
        {
            ParcelDataTable cln = ((ParcelDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance()
        {
            return new ParcelDataTable();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars()
        {
            this.columnPARCELID = base.Columns["PARCELID"];
            this.columnLANDID = base.Columns["LANDID"];
            this.columnNUMBER = base.Columns["NUMBER"];
            this.columnMEASUREDAREA = base.Columns["MEASUREDAREA"];
            this.columnUSECATEGORY = base.Columns["USECATEGORY"];
            this.columnINTRAVILAN = base.Columns["INTRAVILAN"];
            this.columnTAXVALUE = base.Columns["TAXVALUE"];
            this.columnTITLENO = base.Columns["TITLENO"];
            this.columnLANDPLOTNO = base.Columns["LANDPLOTNO"];
            this.columnPARCELNO = base.Columns["PARCELNO"];
            this.columnNOTES = base.Columns["NOTES"];
            this.columnE2IDENTIFIER = base.Columns["E2IDENTIFIER"];
            this.columnPAPERCADNO = base.Columns["PAPERCADNO"];
            this.columnPAPERLBNO = base.Columns["PAPERLBNO"];
            this.columnTOPONO = base.Columns["TOPONO"];
            this.columnCADGENNO = base.Columns["CADGENNO"];
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass()
        {
            this.columnPARCELID = new global::System.Data.DataColumn("PARCELID", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnPARCELID);
            this.columnLANDID = new global::System.Data.DataColumn("LANDID", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnLANDID);
            this.columnNUMBER = new global::System.Data.DataColumn("NUMBER", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnNUMBER);
            this.columnMEASUREDAREA = new global::System.Data.DataColumn("MEASUREDAREA", typeof(double), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnMEASUREDAREA);
            this.columnUSECATEGORY = new global::System.Data.DataColumn("USECATEGORY", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnUSECATEGORY);
            this.columnINTRAVILAN = new global::System.Data.DataColumn("INTRAVILAN", typeof(bool), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnINTRAVILAN);
            this.columnTAXVALUE = new global::System.Data.DataColumn("TAXVALUE", typeof(double), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnTAXVALUE);
            this.columnTITLENO = new global::System.Data.DataColumn("TITLENO", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnTITLENO);
            this.columnLANDPLOTNO = new global::System.Data.DataColumn("LANDPLOTNO", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnLANDPLOTNO);
            this.columnPARCELNO = new global::System.Data.DataColumn("PARCELNO", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnPARCELNO);
            this.columnNOTES = new global::System.Data.DataColumn("NOTES", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnNOTES);
            this.columnE2IDENTIFIER = new global::System.Data.DataColumn("E2IDENTIFIER", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnE2IDENTIFIER);
            this.columnPAPERCADNO = new global::System.Data.DataColumn("PAPERCADNO", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnPAPERCADNO);
            this.columnPAPERLBNO = new global::System.Data.DataColumn("PAPERLBNO", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnPAPERLBNO);
            this.columnTOPONO = new global::System.Data.DataColumn("TOPONO", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnTOPONO);
            this.columnCADGENNO = new global::System.Data.DataColumn("CADGENNO", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnCADGENNO);
            this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnPARCELID}, true));
            this.columnPARCELID.AutoIncrement = true;
            this.columnPARCELID.AutoIncrementSeed = 1;
            this.columnPARCELID.AllowDBNull = false;
            this.columnPARCELID.Unique = true;
            this.columnPARCELID.Caption = "ID-ul unic al parcelei ";
            this.columnLANDID.Caption = "ID-ul terenului de care apartine parcela ";
            this.columnNUMBER.Caption = "Numar parcela ";
            this.columnMEASUREDAREA.Caption = "Suprafata masurata parcela ";
            this.columnUSECATEGORY.Caption = "Tip categorie folosinta (Dictionar)";
            this.columnUSECATEGORY.MaxLength = 50;
            this.columnINTRAVILAN.Caption = "Valoare booleana Intravilan";
            this.columnTAXVALUE.Caption = "Valoare taxa de impozitare ";
            this.columnTITLENO.Caption = "Numar titlu de proprietate ";
            this.columnTITLENO.MaxLength = 50;
            this.columnLANDPLOTNO.Caption = "Numar tarla ";
            this.columnLANDPLOTNO.MaxLength = 50;
            this.columnPARCELNO.Caption = "Numarul parcelei din tarla ";
            this.columnPARCELNO.MaxLength = 50;
            this.columnNOTES.Caption = "Comentarii/Mentiuni parcela ";
            this.columnNOTES.MaxLength = 2000;
            this.columnE2IDENTIFIER.Caption = "Identificatorul electronic apartinand sistemului ETERRA";
            this.columnE2IDENTIFIER.MaxLength = 200;
            this.columnPAPERCADNO.Caption = "Numar cadastral hartie";
            this.columnPAPERCADNO.MaxLength = 200;
            this.columnPAPERLBNO.Caption = "Numar carte funciara hartie";
            this.columnPAPERLBNO.MaxLength = 200;
            this.columnTOPONO.Caption = "Numar topografic parcela";
            this.columnTOPONO.MaxLength = 200;
            this.columnCADGENNO.Caption = "Numar cadastru general ";
            this.columnCADGENNO.MaxLength = 200;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ParcelRow NewParcelRow()
        {
            return ((ParcelRow)(this.NewRow()));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
        {
            return new ParcelRow(builder);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType()
        {
            return typeof(ParcelRow);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanged(e);
            if ((this.ParcelRowChanged != null))
            {
                this.ParcelRowChanged(this, new ParcelRowChangeEvent(((ParcelRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanging(e);
            if ((this.ParcelRowChanging != null))
            {
                this.ParcelRowChanging(this, new ParcelRowChangeEvent(((ParcelRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleted(e);
            if ((this.ParcelRowDeleted != null))
            {
                this.ParcelRowDeleted(this, new ParcelRowChangeEvent(((ParcelRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleting(e);
            if ((this.ParcelRowDeleting != null))
            {
                this.ParcelRowDeleting(this, new ParcelRowChangeEvent(((ParcelRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemoveParcelRow(ParcelRow row)
        {
            this.Rows.Remove(row);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
        {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            CGXML ds = new CGXML();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "ParcelDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace))
            {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try
                {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
                    {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length))
                        {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length)
                                        && (s1.ReadByte() == s2.ReadByte()));)
                            {
                                ;
                            }
                            if ((s1.Position == s1.Length))
                            {
                                return type;
                            }
                        }
                    }
                }
                finally
                {
                    if ((s1 != null))
                    {
                        s1.Close();
                    }
                    if ((s2 != null))
                    {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }

    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class PersonDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
    {

        private global::System.Data.DataColumn columnPERSONID;

        private global::System.Data.DataColumn columnADDRESSID;

        private global::System.Data.DataColumn columnFIRSTNAME;

        private global::System.Data.DataColumn columnISPHYSICAL;

        private global::System.Data.DataColumn columnLASTNAME;

        private global::System.Data.DataColumn columnDEFUNCT;

        private global::System.Data.DataColumn columnIDENTIFIED;

        private global::System.Data.DataColumn columnIDCODE;

        private global::System.Data.DataColumn columnPREVIOUSLASTNAME;

        private global::System.Data.DataColumn columnFATHERINITIAL;

        private global::System.Data.DataColumn columnCITIZENSHIPCOUNTRY;

        private global::System.Data.DataColumn columnIDCARDTYPE;

        private global::System.Data.DataColumn columnIDCARDSERIALNO;

        private global::System.Data.DataColumn columnIDCARDNUMBER;

        private global::System.Data.DataColumn columnNOTES;

        private global::System.Data.DataColumn columnPHONE;

        private global::System.Data.DataColumn columnEMAIL;

        private global::System.Data.DataColumn columnFILEID;

        private global::System.Data.DataColumn columnREGISTRATIONID;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PersonDataTable()
        {
            this.TableName = "Person";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal PersonDataTable(global::System.Data.DataTable table)
        {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive))
            {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
            {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace))
            {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected PersonDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                base(info, context)
        {
            this.InitVars();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn PERSONIDColumn
        {
            get
            {
                return this.columnPERSONID;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn ADDRESSIDColumn
        {
            get
            {
                return this.columnADDRESSID;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn FIRSTNAMEColumn
        {
            get
            {
                return this.columnFIRSTNAME;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn ISPHYSICALColumn
        {
            get
            {
                return this.columnISPHYSICAL;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn LASTNAMEColumn
        {
            get
            {
                return this.columnLASTNAME;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn DEFUNCTColumn
        {
            get
            {
                return this.columnDEFUNCT;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn IDENTIFIEDColumn
        {
            get
            {
                return this.columnIDENTIFIED;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn IDCODEColumn
        {
            get
            {
                return this.columnIDCODE;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn PREVIOUSLASTNAMEColumn
        {
            get
            {
                return this.columnPREVIOUSLASTNAME;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn FATHERINITIALColumn
        {
            get
            {
                return this.columnFATHERINITIAL;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn CITIZENSHIPCOUNTRYColumn
        {
            get
            {
                return this.columnCITIZENSHIPCOUNTRY;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn IDCARDTYPEColumn
        {
            get
            {
                return this.columnIDCARDTYPE;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn IDCARDSERIALNOColumn
        {
            get
            {
                return this.columnIDCARDSERIALNO;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn IDCARDNUMBERColumn
        {
            get
            {
                return this.columnIDCARDNUMBER;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn NOTESColumn
        {
            get
            {
                return this.columnNOTES;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn PHONEColumn
        {
            get
            {
                return this.columnPHONE;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn EMAILColumn
        {
            get
            {
                return this.columnEMAIL;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn FILEIDColumn
        {
            get
            {
                return this.columnFILEID;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn REGISTRATIONIDColumn
        {
            get
            {
                return this.columnREGISTRATIONID;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count
        {
            get
            {
                return this.Rows.Count;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PersonRow this[int index]
        {
            get
            {
                return ((PersonRow)(this.Rows[index]));
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event PersonRowChangeEventHandler PersonRowChanging;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event PersonRowChangeEventHandler PersonRowChanged;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event PersonRowChangeEventHandler PersonRowDeleting;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event PersonRowChangeEventHandler PersonRowDeleted;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddPersonRow(PersonRow row)
        {
            this.Rows.Add(row);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PersonRow AddPersonRow(
                    AddressRow parentAddressRowByFK_Address_Person,
                    string FIRSTNAME,
                    bool ISPHYSICAL,
                    string LASTNAME,
                    bool DEFUNCT,
                    bool IDENTIFIED,
                    string IDCODE,
                    string PREVIOUSLASTNAME,
                    string FATHERINITIAL,
                    string CITIZENSHIPCOUNTRY,
                    string IDCARDTYPE,
                    string IDCARDSERIALNO,
                    string IDCARDNUMBER,
                    string NOTES,
                    string PHONE,
                    string EMAIL,
                    FileDescriptionRow parentFileDescriptionRowByFK_Person_FileDescription,
                    RegistrationRow parentRegistrationRowByFK_Registration_Person)
        {
            PersonRow rowPersonRow = ((PersonRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    null,
                    null,
                    FIRSTNAME,
                    ISPHYSICAL,
                    LASTNAME,
                    DEFUNCT,
                    IDENTIFIED,
                    IDCODE,
                    PREVIOUSLASTNAME,
                    FATHERINITIAL,
                    CITIZENSHIPCOUNTRY,
                    IDCARDTYPE,
                    IDCARDSERIALNO,
                    IDCARDNUMBER,
                    NOTES,
                    PHONE,
                    EMAIL,
                    null,
                    null};
            if ((parentAddressRowByFK_Address_Person != null))
            {
                columnValuesArray[1] = parentAddressRowByFK_Address_Person[0];
            }
            if ((parentFileDescriptionRowByFK_Person_FileDescription != null))
            {
                columnValuesArray[17] = parentFileDescriptionRowByFK_Person_FileDescription[6];
            }
            if ((parentRegistrationRowByFK_Registration_Person != null))
            {
                columnValuesArray[18] = parentRegistrationRowByFK_Registration_Person[0];
            }
            rowPersonRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowPersonRow);
            return rowPersonRow;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PersonRow FindByPERSONID(int PERSONID)
        {
            return ((PersonRow)(this.Rows.Find(new object[] {
                        PERSONID})));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual global::System.Collections.IEnumerator GetEnumerator()
        {
            return this.Rows.GetEnumerator();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone()
        {
            PersonDataTable cln = ((PersonDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance()
        {
            return new PersonDataTable();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars()
        {
            this.columnPERSONID = base.Columns["PERSONID"];
            this.columnADDRESSID = base.Columns["ADDRESSID"];
            this.columnFIRSTNAME = base.Columns["FIRSTNAME"];
            this.columnISPHYSICAL = base.Columns["ISPHYSICAL"];
            this.columnLASTNAME = base.Columns["LASTNAME"];
            this.columnDEFUNCT = base.Columns["DEFUNCT"];
            this.columnIDENTIFIED = base.Columns["IDENTIFIED"];
            this.columnIDCODE = base.Columns["IDCODE"];
            this.columnPREVIOUSLASTNAME = base.Columns["PREVIOUSLASTNAME"];
            this.columnFATHERINITIAL = base.Columns["FATHERINITIAL"];
            this.columnCITIZENSHIPCOUNTRY = base.Columns["CITIZENSHIPCOUNTRY"];
            this.columnIDCARDTYPE = base.Columns["IDCARDTYPE"];
            this.columnIDCARDSERIALNO = base.Columns["IDCARDSERIALNO"];
            this.columnIDCARDNUMBER = base.Columns["IDCARDNUMBER"];
            this.columnNOTES = base.Columns["NOTES"];
            this.columnPHONE = base.Columns["PHONE"];
            this.columnEMAIL = base.Columns["EMAIL"];
            this.columnFILEID = base.Columns["FILEID"];
            this.columnREGISTRATIONID = base.Columns["REGISTRATIONID"];
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass()
        {
            this.columnPERSONID = new global::System.Data.DataColumn("PERSONID", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnPERSONID);
            this.columnADDRESSID = new global::System.Data.DataColumn("ADDRESSID", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnADDRESSID);
            this.columnFIRSTNAME = new global::System.Data.DataColumn("FIRSTNAME", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnFIRSTNAME);
            this.columnISPHYSICAL = new global::System.Data.DataColumn("ISPHYSICAL", typeof(bool), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnISPHYSICAL);
            this.columnLASTNAME = new global::System.Data.DataColumn("LASTNAME", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnLASTNAME);
            this.columnDEFUNCT = new global::System.Data.DataColumn("DEFUNCT", typeof(bool), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnDEFUNCT);
            this.columnIDENTIFIED = new global::System.Data.DataColumn("IDENTIFIED", typeof(bool), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnIDENTIFIED);
            this.columnIDCODE = new global::System.Data.DataColumn("IDCODE", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnIDCODE);
            this.columnPREVIOUSLASTNAME = new global::System.Data.DataColumn("PREVIOUSLASTNAME", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnPREVIOUSLASTNAME);
            this.columnFATHERINITIAL = new global::System.Data.DataColumn("FATHERINITIAL", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnFATHERINITIAL);
            this.columnCITIZENSHIPCOUNTRY = new global::System.Data.DataColumn("CITIZENSHIPCOUNTRY", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnCITIZENSHIPCOUNTRY);
            this.columnIDCARDTYPE = new global::System.Data.DataColumn("IDCARDTYPE", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnIDCARDTYPE);
            this.columnIDCARDSERIALNO = new global::System.Data.DataColumn("IDCARDSERIALNO", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnIDCARDSERIALNO);
            this.columnIDCARDNUMBER = new global::System.Data.DataColumn("IDCARDNUMBER", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnIDCARDNUMBER);
            this.columnNOTES = new global::System.Data.DataColumn("NOTES", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnNOTES);
            this.columnPHONE = new global::System.Data.DataColumn("PHONE", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnPHONE);
            this.columnEMAIL = new global::System.Data.DataColumn("EMAIL", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnEMAIL);
            this.columnFILEID = new global::System.Data.DataColumn("FILEID", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnFILEID);
            this.columnREGISTRATIONID = new global::System.Data.DataColumn("REGISTRATIONID", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnREGISTRATIONID);
            this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnPERSONID}, true));
            this.columnPERSONID.AutoIncrement = true;
            this.columnPERSONID.AutoIncrementSeed = 1;
            this.columnPERSONID.AllowDBNull = false;
            this.columnPERSONID.Unique = true;
            this.columnPERSONID.Caption = "ID-ul unic al persoanei ";
            this.columnADDRESSID.Caption = "ID-ul adresei persoanei ";
            this.columnFIRSTNAME.AllowDBNull = false;
            this.columnFIRSTNAME.Caption = "Nume/Denumire persoana ";
            this.columnFIRSTNAME.MaxLength = 255;
            this.columnISPHYSICAL.Caption = "Valoare booleana Persoana fizica";
            this.columnISPHYSICAL.DefaultValue = ((bool)(true));
            this.columnLASTNAME.Caption = "Prenume persoana fizica ";
            this.columnLASTNAME.MaxLength = 255;
            this.columnIDCODE.Caption = "Cod CNP/CUI ";
            this.columnIDCODE.MaxLength = 50;
            this.columnPREVIOUSLASTNAME.Caption = "Nume anterior persoana ";
            this.columnPREVIOUSLASTNAME.MaxLength = 50;
            this.columnFATHERINITIAL.Caption = "Initiala tatalui ";
            this.columnFATHERINITIAL.MaxLength = 50;
            this.columnCITIZENSHIPCOUNTRY.Caption = "Cetatenie (Dictionar)";
            this.columnCITIZENSHIPCOUNTRY.MaxLength = 50;
            this.columnIDCARDTYPE.Caption = "Tip act de identitate (Dictionar)";
            this.columnIDCARDTYPE.MaxLength = 50;
            this.columnIDCARDSERIALNO.Caption = "Serie act de identitate";
            this.columnIDCARDSERIALNO.MaxLength = 50;
            this.columnIDCARDNUMBER.Caption = "Numar act de identitate ";
            this.columnNOTES.Caption = "Comentarii/Mentiuni ";
            this.columnNOTES.MaxLength = 2000;
            this.columnPHONE.Caption = "Telefon ";
            this.columnEMAIL.Caption = "Email ";
            this.columnFILEID.Caption = "ID-ul descrierii fisierului ";
            this.columnREGISTRATIONID.Caption = "ID-ul inregistrarii";
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PersonRow NewPersonRow()
        {
            return ((PersonRow)(this.NewRow()));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
        {
            return new PersonRow(builder);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType()
        {
            return typeof(PersonRow);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanged(e);
            if ((this.PersonRowChanged != null))
            {
                this.PersonRowChanged(this, new PersonRowChangeEvent(((PersonRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanging(e);
            if ((this.PersonRowChanging != null))
            {
                this.PersonRowChanging(this, new PersonRowChangeEvent(((PersonRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleted(e);
            if ((this.PersonRowDeleted != null))
            {
                this.PersonRowDeleted(this, new PersonRowChangeEvent(((PersonRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleting(e);
            if ((this.PersonRowDeleting != null))
            {
                this.PersonRowDeleting(this, new PersonRowChangeEvent(((PersonRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemovePersonRow(PersonRow row)
        {
            this.Rows.Remove(row);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
        {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            CGXML ds = new CGXML();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "PersonDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace))
            {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try
                {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
                    {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length))
                        {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length)
                                        && (s1.ReadByte() == s2.ReadByte()));)
                            {
                                ;
                            }
                            if ((s1.Position == s1.Length))
                            {
                                return type;
                            }
                        }
                    }
                }
                finally
                {
                    if ((s1 != null))
                    {
                        s1.Close();
                    }
                    if ((s2 != null))
                    {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }

    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class PointsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
    {

        private global::System.Data.DataColumn columnPOINTID;

        private global::System.Data.DataColumn columnIMMOVABLEID;

        private global::System.Data.DataColumn columnBUILDINGID;

        private global::System.Data.DataColumn columnNO;

        private global::System.Data.DataColumn columnX;

        private global::System.Data.DataColumn columnY;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PointsDataTable()
        {
            this.TableName = "Points";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal PointsDataTable(global::System.Data.DataTable table)
        {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive))
            {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
            {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace))
            {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected PointsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                base(info, context)
        {
            this.InitVars();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn POINTIDColumn
        {
            get
            {
                return this.columnPOINTID;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn IMMOVABLEIDColumn
        {
            get
            {
                return this.columnIMMOVABLEID;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn BUILDINGIDColumn
        {
            get
            {
                return this.columnBUILDINGID;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn NOColumn
        {
            get
            {
                return this.columnNO;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn XColumn
        {
            get
            {
                return this.columnX;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn YColumn
        {
            get
            {
                return this.columnY;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count
        {
            get
            {
                return this.Rows.Count;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PointsRow this[int index]
        {
            get
            {
                return ((PointsRow)(this.Rows[index]));
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event PointsRowChangeEventHandler PointsRowChanging;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event PointsRowChangeEventHandler PointsRowChanged;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event PointsRowChangeEventHandler PointsRowDeleting;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event PointsRowChangeEventHandler PointsRowDeleted;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddPointsRow(PointsRow row)
        {
            this.Rows.Add(row);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PointsRow AddPointsRow(LandRow parentLandRowByFK_Immovable_Points, BuildingRow parentBuildingRowByFK_Building_Points, string NO, double X, double Y)
        {
            PointsRow rowPointsRow = ((PointsRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    null,
                    null,
                    null,
                    NO,
                    X,
                    Y};
            if ((parentLandRowByFK_Immovable_Points != null))
            {
                columnValuesArray[1] = parentLandRowByFK_Immovable_Points[0];
            }
            if ((parentBuildingRowByFK_Building_Points != null))
            {
                columnValuesArray[2] = parentBuildingRowByFK_Building_Points[0];
            }
            rowPointsRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowPointsRow);
            return rowPointsRow;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PointsRow FindByPOINTID(int POINTID)
        {
            return ((PointsRow)(this.Rows.Find(new object[] {
                        POINTID})));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual global::System.Collections.IEnumerator GetEnumerator()
        {
            return this.Rows.GetEnumerator();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone()
        {
            PointsDataTable cln = ((PointsDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance()
        {
            return new PointsDataTable();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars()
        {
            this.columnPOINTID = base.Columns["POINTID"];
            this.columnIMMOVABLEID = base.Columns["IMMOVABLEID"];
            this.columnBUILDINGID = base.Columns["BUILDINGID"];
            this.columnNO = base.Columns["NO"];
            this.columnX = base.Columns["X"];
            this.columnY = base.Columns["Y"];
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass()
        {
            this.columnPOINTID = new global::System.Data.DataColumn("POINTID", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnPOINTID);
            this.columnIMMOVABLEID = new global::System.Data.DataColumn("IMMOVABLEID", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnIMMOVABLEID);
            this.columnBUILDINGID = new global::System.Data.DataColumn("BUILDINGID", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnBUILDINGID);
            this.columnNO = new global::System.Data.DataColumn("NO", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnNO);
            this.columnX = new global::System.Data.DataColumn("X", typeof(double), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnX);
            this.columnY = new global::System.Data.DataColumn("Y", typeof(double), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnY);
            this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnPOINTID}, true));
            this.columnPOINTID.AutoIncrement = true;
            this.columnPOINTID.AutoIncrementSeed = 1;
            this.columnPOINTID.AllowDBNull = false;
            this.columnPOINTID.Unique = true;
            this.columnPOINTID.Caption = "ID-ul unic al punctului ";
            this.columnIMMOVABLEID.Caption = "ID-ul terenului de care apartine punctul ";
            this.columnBUILDINGID.Caption = "ID-ul constructiei de care apartine punctul ";
            this.columnNO.Caption = "Numar punct ";
            this.columnNO.MaxLength = 50;
            this.columnX.Caption = "Coordonata X a punctului ";
            this.columnY.Caption = "Coordonata Y a punctului ";
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PointsRow NewPointsRow()
        {
            return ((PointsRow)(this.NewRow()));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
        {
            return new PointsRow(builder);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType()
        {
            return typeof(PointsRow);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanged(e);
            if ((this.PointsRowChanged != null))
            {
                this.PointsRowChanged(this, new PointsRowChangeEvent(((PointsRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanging(e);
            if ((this.PointsRowChanging != null))
            {
                this.PointsRowChanging(this, new PointsRowChangeEvent(((PointsRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleted(e);
            if ((this.PointsRowDeleted != null))
            {
                this.PointsRowDeleted(this, new PointsRowChangeEvent(((PointsRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleting(e);
            if ((this.PointsRowDeleting != null))
            {
                this.PointsRowDeleting(this, new PointsRowChangeEvent(((PointsRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemovePointsRow(PointsRow row)
        {
            this.Rows.Remove(row);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
        {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            CGXML ds = new CGXML();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "PointsDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace))
            {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try
                {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
                    {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length))
                        {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length)
                                        && (s1.ReadByte() == s2.ReadByte()));)
                            {
                                ;
                            }
                            if ((s1.Position == s1.Length))
                            {
                                return type;
                            }
                        }
                    }
                }
                finally
                {
                    if ((s1 != null))
                    {
                        s1.Close();
                    }
                    if ((s2 != null))
                    {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }

    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class RegistrationDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
    {

        private global::System.Data.DataColumn columnREGISTRATIONID;

        private global::System.Data.DataColumn columnREGISTRATIONTYPE;

        private global::System.Data.DataColumn columnRIGHTTYPE;

        private global::System.Data.DataColumn columnRIGHTCOMMENT;

        private global::System.Data.DataColumn columnNOTES;

        private global::System.Data.DataColumn columnDEEDID;

        private global::System.Data.DataColumn columnTITLE;

        private global::System.Data.DataColumn columnQUOTATYPE;

        private global::System.Data.DataColumn columnINITIALQUOTA;

        private global::System.Data.DataColumn columnACTUALQUOTA;

        private global::System.Data.DataColumn columnVALUECURRENCY;

        private global::System.Data.DataColumn columnVALUEAMOUNT;

        private global::System.Data.DataColumn columnCOMMENTS;

        private global::System.Data.DataColumn columnLBPARTNO;

        private global::System.Data.DataColumn columnPOSITION;

        private global::System.Data.DataColumn columnAPPNO;

        private global::System.Data.DataColumn columnAPPDATE;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RegistrationDataTable()
        {
            this.TableName = "Registration";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal RegistrationDataTable(global::System.Data.DataTable table)
        {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive))
            {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
            {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace))
            {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected RegistrationDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                base(info, context)
        {
            this.InitVars();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn REGISTRATIONIDColumn
        {
            get
            {
                return this.columnREGISTRATIONID;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn REGISTRATIONTYPEColumn
        {
            get
            {
                return this.columnREGISTRATIONTYPE;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn RIGHTTYPEColumn
        {
            get
            {
                return this.columnRIGHTTYPE;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn RIGHTCOMMENTColumn
        {
            get
            {
                return this.columnRIGHTCOMMENT;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn NOTESColumn
        {
            get
            {
                return this.columnNOTES;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn DEEDIDColumn
        {
            get
            {
                return this.columnDEEDID;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn TITLEColumn
        {
            get
            {
                return this.columnTITLE;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn QUOTATYPEColumn
        {
            get
            {
                return this.columnQUOTATYPE;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn INITIALQUOTAColumn
        {
            get
            {
                return this.columnINITIALQUOTA;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn ACTUALQUOTAColumn
        {
            get
            {
                return this.columnACTUALQUOTA;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn VALUECURRENCYColumn
        {
            get
            {
                return this.columnVALUECURRENCY;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn VALUEAMOUNTColumn
        {
            get
            {
                return this.columnVALUEAMOUNT;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn COMMENTSColumn
        {
            get
            {
                return this.columnCOMMENTS;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn LBPARTNOColumn
        {
            get
            {
                return this.columnLBPARTNO;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn POSITIONColumn
        {
            get
            {
                return this.columnPOSITION;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn APPNOColumn
        {
            get
            {
                return this.columnAPPNO;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn APPDATEColumn
        {
            get
            {
                return this.columnAPPDATE;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count
        {
            get
            {
                return this.Rows.Count;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RegistrationRow this[int index]
        {
            get
            {
                return ((RegistrationRow)(this.Rows[index]));
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event RegistrationRowChangeEventHandler RegistrationRowChanging;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event RegistrationRowChangeEventHandler RegistrationRowChanged;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event RegistrationRowChangeEventHandler RegistrationRowDeleting;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event RegistrationRowChangeEventHandler RegistrationRowDeleted;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddRegistrationRow(RegistrationRow row)
        {
            this.Rows.Add(row);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RegistrationRow AddRegistrationRow(
                    string REGISTRATIONTYPE,
                    string RIGHTTYPE,
                    string RIGHTCOMMENT,
                    string NOTES,
                    DeedRow parentDeedRowByFK_Deed_Registration,
                    string TITLE,
                    string QUOTATYPE,
                    string INITIALQUOTA,
                    string ACTUALQUOTA,
                    string VALUECURRENCY,
                    string VALUEAMOUNT,
                    string COMMENTS,
                    int LBPARTNO,
                    int POSITION,
                    int APPNO,
                    System.DateTime APPDATE)
        {
            RegistrationRow rowRegistrationRow = ((RegistrationRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    null,
                    REGISTRATIONTYPE,
                    RIGHTTYPE,
                    RIGHTCOMMENT,
                    NOTES,
                    null,
                    TITLE,
                    QUOTATYPE,
                    INITIALQUOTA,
                    ACTUALQUOTA,
                    VALUECURRENCY,
                    VALUEAMOUNT,
                    COMMENTS,
                    LBPARTNO,
                    POSITION,
                    APPNO,
                    APPDATE};
            if ((parentDeedRowByFK_Deed_Registration != null))
            {
                columnValuesArray[5] = parentDeedRowByFK_Deed_Registration[0];
            }
            rowRegistrationRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowRegistrationRow);
            return rowRegistrationRow;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RegistrationRow FindByREGISTRATIONID(int REGISTRATIONID)
        {
            return ((RegistrationRow)(this.Rows.Find(new object[] {
                        REGISTRATIONID})));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual global::System.Collections.IEnumerator GetEnumerator()
        {
            return this.Rows.GetEnumerator();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone()
        {
            RegistrationDataTable cln = ((RegistrationDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance()
        {
            return new RegistrationDataTable();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars()
        {
            this.columnREGISTRATIONID = base.Columns["REGISTRATIONID"];
            this.columnREGISTRATIONTYPE = base.Columns["REGISTRATIONTYPE"];
            this.columnRIGHTTYPE = base.Columns["RIGHTTYPE"];
            this.columnRIGHTCOMMENT = base.Columns["RIGHTCOMMENT"];
            this.columnNOTES = base.Columns["NOTES"];
            this.columnDEEDID = base.Columns["DEEDID"];
            this.columnTITLE = base.Columns["TITLE"];
            this.columnQUOTATYPE = base.Columns["QUOTATYPE"];
            this.columnINITIALQUOTA = base.Columns["INITIALQUOTA"];
            this.columnACTUALQUOTA = base.Columns["ACTUALQUOTA"];
            this.columnVALUECURRENCY = base.Columns["VALUECURRENCY"];
            this.columnVALUEAMOUNT = base.Columns["VALUEAMOUNT"];
            this.columnCOMMENTS = base.Columns["COMMENTS"];
            this.columnLBPARTNO = base.Columns["LBPARTNO"];
            this.columnPOSITION = base.Columns["POSITION"];
            this.columnAPPNO = base.Columns["APPNO"];
            this.columnAPPDATE = base.Columns["APPDATE"];
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass()
        {
            this.columnREGISTRATIONID = new global::System.Data.DataColumn("REGISTRATIONID", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnREGISTRATIONID);
            this.columnREGISTRATIONTYPE = new global::System.Data.DataColumn("REGISTRATIONTYPE", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnREGISTRATIONTYPE);
            this.columnRIGHTTYPE = new global::System.Data.DataColumn("RIGHTTYPE", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnRIGHTTYPE);
            this.columnRIGHTCOMMENT = new global::System.Data.DataColumn("RIGHTCOMMENT", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnRIGHTCOMMENT);
            this.columnNOTES = new global::System.Data.DataColumn("NOTES", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnNOTES);
            this.columnDEEDID = new global::System.Data.DataColumn("DEEDID", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnDEEDID);
            this.columnTITLE = new global::System.Data.DataColumn("TITLE", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnTITLE);
            this.columnQUOTATYPE = new global::System.Data.DataColumn("QUOTATYPE", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnQUOTATYPE);
            this.columnINITIALQUOTA = new global::System.Data.DataColumn("INITIALQUOTA", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnINITIALQUOTA);
            this.columnACTUALQUOTA = new global::System.Data.DataColumn("ACTUALQUOTA", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnACTUALQUOTA);
            this.columnVALUECURRENCY = new global::System.Data.DataColumn("VALUECURRENCY", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnVALUECURRENCY);
            this.columnVALUEAMOUNT = new global::System.Data.DataColumn("VALUEAMOUNT", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnVALUEAMOUNT);
            this.columnCOMMENTS = new global::System.Data.DataColumn("COMMENTS", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnCOMMENTS);
            this.columnLBPARTNO = new global::System.Data.DataColumn("LBPARTNO", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnLBPARTNO);
            this.columnPOSITION = new global::System.Data.DataColumn("POSITION", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnPOSITION);
            this.columnAPPNO = new global::System.Data.DataColumn("APPNO", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnAPPNO);
            this.columnAPPDATE = new global::System.Data.DataColumn("APPDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnAPPDATE);
            this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnREGISTRATIONID}, true));
            this.columnREGISTRATIONID.AutoIncrement = true;
            this.columnREGISTRATIONID.AutoIncrementSeed = 1;
            this.columnREGISTRATIONID.AllowDBNull = false;
            this.columnREGISTRATIONID.Unique = true;
            this.columnREGISTRATIONID.Caption = "ID-ul unic al inscrierii";
            this.columnREGISTRATIONTYPE.AllowDBNull = false;
            this.columnREGISTRATIONTYPE.Caption = "Tip Inscriere (Dictionar)";
            this.columnRIGHTTYPE.Caption = "Tip Drept (Dictionar)";
            this.columnRIGHTTYPE.MaxLength = 50;
            this.columnRIGHTCOMMENT.Caption = "Detalii suplimentare legate de inscrierea unui drept";
            this.columnRIGHTCOMMENT.MaxLength = 2000;
            this.columnNOTES.Caption = "Textul notei in cazul in care tipul inscrierii este nota.";
            this.columnNOTES.MaxLength = 4000;
            this.columnDEEDID.AllowDBNull = false;
            this.columnDEEDID.Caption = "ID-ul actului in baza caruia se face inscrierea";
            this.columnTITLE.Caption = "Mod Dobandire al dreptului (Dictionar)";
            this.columnTITLE.MaxLength = 50;
            this.columnQUOTATYPE.Caption = "Tip Cota";
            this.columnQUOTATYPE.MaxLength = 50;
            this.columnINITIALQUOTA.Caption = "Cota initiala ";
            this.columnINITIALQUOTA.MaxLength = 50;
            this.columnACTUALQUOTA.Caption = "Cota Actuala ";
            this.columnACTUALQUOTA.MaxLength = 50;
            this.columnVALUECURRENCY.Caption = "Tip moneda ";
            this.columnVALUECURRENCY.MaxLength = 50;
            this.columnVALUEAMOUNT.Caption = "Valoare in Moneda ";
            this.columnVALUEAMOUNT.MaxLength = 50;
            this.columnCOMMENTS.Caption = "Observatii ";
            this.columnCOMMENTS.MaxLength = 2000;
            this.columnLBPARTNO.Caption = "Partea cartii funciare in care se va face inscrierea (2 sau 3)";
            this.columnPOSITION.Caption = "Nr. pozitie din partea funciara in care se va face inscrierea";
            this.columnAPPNO.Caption = "Numarul cererii in baza careia s-a facut inscrierea";
            this.columnAPPDATE.Caption = "Data cererii in baza careia s-a facut inscrirea";
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RegistrationRow NewRegistrationRow()
        {
            return ((RegistrationRow)(this.NewRow()));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
        {
            return new RegistrationRow(builder);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType()
        {
            return typeof(RegistrationRow);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanged(e);
            if ((this.RegistrationRowChanged != null))
            {
                this.RegistrationRowChanged(this, new RegistrationRowChangeEvent(((RegistrationRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanging(e);
            if ((this.RegistrationRowChanging != null))
            {
                this.RegistrationRowChanging(this, new RegistrationRowChangeEvent(((RegistrationRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleted(e);
            if ((this.RegistrationRowDeleted != null))
            {
                this.RegistrationRowDeleted(this, new RegistrationRowChangeEvent(((RegistrationRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleting(e);
            if ((this.RegistrationRowDeleting != null))
            {
                this.RegistrationRowDeleting(this, new RegistrationRowChangeEvent(((RegistrationRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemoveRegistrationRow(RegistrationRow row)
        {
            this.Rows.Remove(row);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
        {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            CGXML ds = new CGXML();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "RegistrationDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace))
            {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try
                {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
                    {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length))
                        {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length)
                                        && (s1.ReadByte() == s2.ReadByte()));)
                            {
                                ;
                            }
                            if ((s1.Position == s1.Length))
                            {
                                return type;
                            }
                        }
                    }
                }
                finally
                {
                    if ((s1 != null))
                    {
                        s1.Close();
                    }
                    if ((s2 != null))
                    {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }

    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class RegistrationXEntityDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
    {

        private global::System.Data.DataColumn columnREGISTRATIONXENTITYID;

        private global::System.Data.DataColumn columnREGISTRATIONID;

        private global::System.Data.DataColumn columnLANDID;

        private global::System.Data.DataColumn columnBUILDINGID;

        private global::System.Data.DataColumn columnIUID;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RegistrationXEntityDataTable()
        {
            this.TableName = "RegistrationXEntity";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal RegistrationXEntityDataTable(global::System.Data.DataTable table)
        {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive))
            {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
            {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace))
            {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected RegistrationXEntityDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                base(info, context)
        {
            this.InitVars();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn REGISTRATIONXENTITYIDColumn
        {
            get
            {
                return this.columnREGISTRATIONXENTITYID;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn REGISTRATIONIDColumn
        {
            get
            {
                return this.columnREGISTRATIONID;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn LANDIDColumn
        {
            get
            {
                return this.columnLANDID;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn BUILDINGIDColumn
        {
            get
            {
                return this.columnBUILDINGID;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn IUIDColumn
        {
            get
            {
                return this.columnIUID;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count
        {
            get
            {
                return this.Rows.Count;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RegistrationXEntityRow this[int index]
        {
            get
            {
                return ((RegistrationXEntityRow)(this.Rows[index]));
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event RegistrationXEntityRowChangeEventHandler RegistrationXEntityRowChanging;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event RegistrationXEntityRowChangeEventHandler RegistrationXEntityRowChanged;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event RegistrationXEntityRowChangeEventHandler RegistrationXEntityRowDeleting;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event RegistrationXEntityRowChangeEventHandler RegistrationXEntityRowDeleted;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddRegistrationXEntityRow(RegistrationXEntityRow row)
        {
            this.Rows.Add(row);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RegistrationXEntityRow AddRegistrationXEntityRow(RegistrationRow parentRegistrationRowByFK_Registration_RegistrationXEntity, LandRow parentLandRowByFK_Land_RegistrationXEntity, BuildingRow parentBuildingRowByFK_Building_InscrierexEntitate, IURow parentIURowByFK_IU_RegistrationXEntity)
        {
            RegistrationXEntityRow rowRegistrationXEntityRow = ((RegistrationXEntityRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    null,
                    null,
                    null,
                    null,
                    null};
            if ((parentRegistrationRowByFK_Registration_RegistrationXEntity != null))
            {
                columnValuesArray[1] = parentRegistrationRowByFK_Registration_RegistrationXEntity[0];
            }
            if ((parentLandRowByFK_Land_RegistrationXEntity != null))
            {
                columnValuesArray[2] = parentLandRowByFK_Land_RegistrationXEntity[0];
            }
            if ((parentBuildingRowByFK_Building_InscrierexEntitate != null))
            {
                columnValuesArray[3] = parentBuildingRowByFK_Building_InscrierexEntitate[0];
            }
            if ((parentIURowByFK_IU_RegistrationXEntity != null))
            {
                columnValuesArray[4] = parentIURowByFK_IU_RegistrationXEntity[0];
            }
            rowRegistrationXEntityRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowRegistrationXEntityRow);
            return rowRegistrationXEntityRow;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RegistrationXEntityRow FindByREGISTRATIONXENTITYID(int REGISTRATIONXENTITYID)
        {
            return ((RegistrationXEntityRow)(this.Rows.Find(new object[] {
                        REGISTRATIONXENTITYID})));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual global::System.Collections.IEnumerator GetEnumerator()
        {
            return this.Rows.GetEnumerator();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone()
        {
            RegistrationXEntityDataTable cln = ((RegistrationXEntityDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance()
        {
            return new RegistrationXEntityDataTable();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars()
        {
            this.columnREGISTRATIONXENTITYID = base.Columns["REGISTRATIONXENTITYID"];
            this.columnREGISTRATIONID = base.Columns["REGISTRATIONID"];
            this.columnLANDID = base.Columns["LANDID"];
            this.columnBUILDINGID = base.Columns["BUILDINGID"];
            this.columnIUID = base.Columns["IUID"];
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass()
        {
            this.columnREGISTRATIONXENTITYID = new global::System.Data.DataColumn("REGISTRATIONXENTITYID", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnREGISTRATIONXENTITYID);
            this.columnREGISTRATIONID = new global::System.Data.DataColumn("REGISTRATIONID", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnREGISTRATIONID);
            this.columnLANDID = new global::System.Data.DataColumn("LANDID", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnLANDID);
            this.columnBUILDINGID = new global::System.Data.DataColumn("BUILDINGID", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnBUILDINGID);
            this.columnIUID = new global::System.Data.DataColumn("IUID", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnIUID);
            this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnREGISTRATIONXENTITYID}, true));
            this.columnREGISTRATIONXENTITYID.AutoIncrement = true;
            this.columnREGISTRATIONXENTITYID.AutoIncrementSeed = 1;
            this.columnREGISTRATIONXENTITYID.AllowDBNull = false;
            this.columnREGISTRATIONXENTITYID.Unique = true;
            this.columnREGISTRATIONXENTITYID.Caption = "ID-ul unic al legaturii dintre inregistrare si entitate";
            this.columnREGISTRATIONID.Caption = "ID-ul inregistrarii";
            this.columnLANDID.Caption = "ID-ul terenului la care se refera inregistrarea";
            this.columnBUILDINGID.Caption = "ID-ul constructiei la care se refera inregistrarea";
            this.columnIUID.Caption = "ID-ul unitatii individuale la care se refera inregistrarea";
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RegistrationXEntityRow NewRegistrationXEntityRow()
        {
            return ((RegistrationXEntityRow)(this.NewRow()));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
        {
            return new RegistrationXEntityRow(builder);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType()
        {
            return typeof(RegistrationXEntityRow);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanged(e);
            if ((this.RegistrationXEntityRowChanged != null))
            {
                this.RegistrationXEntityRowChanged(this, new RegistrationXEntityRowChangeEvent(((RegistrationXEntityRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanging(e);
            if ((this.RegistrationXEntityRowChanging != null))
            {
                this.RegistrationXEntityRowChanging(this, new RegistrationXEntityRowChangeEvent(((RegistrationXEntityRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleted(e);
            if ((this.RegistrationXEntityRowDeleted != null))
            {
                this.RegistrationXEntityRowDeleted(this, new RegistrationXEntityRowChangeEvent(((RegistrationXEntityRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleting(e);
            if ((this.RegistrationXEntityRowDeleting != null))
            {
                this.RegistrationXEntityRowDeleting(this, new RegistrationXEntityRowChangeEvent(((RegistrationXEntityRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemoveRegistrationXEntityRow(RegistrationXEntityRow row)
        {
            this.Rows.Remove(row);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
        {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            CGXML ds = new CGXML();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "RegistrationXEntityDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace))
            {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try
                {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
                    {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length))
                        {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length)
                                        && (s1.ReadByte() == s2.ReadByte()));)
                            {
                                ;
                            }
                            if ((s1.Position == s1.Length))
                            {
                                return type;
                            }
                        }
                    }
                }
                finally
                {
                    if ((s1 != null))
                    {
                        s1.Close();
                    }
                    if ((s2 != null))
                    {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }

    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class ContestedDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
    {

        private global::System.Data.DataColumn columnCONTESTEDID;

        private global::System.Data.DataColumn columnCONTESTEDNUMBER;

        private global::System.Data.DataColumn columnCONTESTEDDATE;

        private global::System.Data.DataColumn columnSOLUTIONNUMBER;

        private global::System.Data.DataColumn columnSOLUTIONDATE;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ContestedDataTable()
        {
            this.TableName = "Contested";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal ContestedDataTable(global::System.Data.DataTable table)
        {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive))
            {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
            {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace))
            {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected ContestedDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                base(info, context)
        {
            this.InitVars();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn CONTESTEDIDColumn
        {
            get
            {
                return this.columnCONTESTEDID;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn CONTESTEDNUMBERColumn
        {
            get
            {
                return this.columnCONTESTEDNUMBER;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn CONTESTEDDATEColumn
        {
            get
            {
                return this.columnCONTESTEDDATE;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn SOLUTIONNUMBERColumn
        {
            get
            {
                return this.columnSOLUTIONNUMBER;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn SOLUTIONDATEColumn
        {
            get
            {
                return this.columnSOLUTIONDATE;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count
        {
            get
            {
                return this.Rows.Count;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ContestedRow this[int index]
        {
            get
            {
                return ((ContestedRow)(this.Rows[index]));
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event ContestedRowChangeEventHandler ContestedRowChanging;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event ContestedRowChangeEventHandler ContestedRowChanged;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event ContestedRowChangeEventHandler ContestedRowDeleting;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event ContestedRowChangeEventHandler ContestedRowDeleted;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddContestedRow(ContestedRow row)
        {
            this.Rows.Add(row);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ContestedRow AddContestedRow(int CONTESTEDNUMBER, System.DateTime CONTESTEDDATE, int SOLUTIONNUMBER, System.DateTime SOLUTIONDATE)
        {
            ContestedRow rowContestedRow = ((ContestedRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    null,
                    CONTESTEDNUMBER,
                    CONTESTEDDATE,
                    SOLUTIONNUMBER,
                    SOLUTIONDATE};
            rowContestedRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowContestedRow);
            return rowContestedRow;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ContestedRow FindByCONTESTEDID(int CONTESTEDID)
        {
            return ((ContestedRow)(this.Rows.Find(new object[] {
                        CONTESTEDID})));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual global::System.Collections.IEnumerator GetEnumerator()
        {
            return this.Rows.GetEnumerator();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone()
        {
            ContestedDataTable cln = ((ContestedDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance()
        {
            return new ContestedDataTable();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars()
        {
            this.columnCONTESTEDID = base.Columns["CONTESTEDID"];
            this.columnCONTESTEDNUMBER = base.Columns["CONTESTEDNUMBER"];
            this.columnCONTESTEDDATE = base.Columns["CONTESTEDDATE"];
            this.columnSOLUTIONNUMBER = base.Columns["SOLUTIONNUMBER"];
            this.columnSOLUTIONDATE = base.Columns["SOLUTIONDATE"];
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass()
        {
            this.columnCONTESTEDID = new global::System.Data.DataColumn("CONTESTEDID", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnCONTESTEDID);
            this.columnCONTESTEDNUMBER = new global::System.Data.DataColumn("CONTESTEDNUMBER", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnCONTESTEDNUMBER);
            this.columnCONTESTEDDATE = new global::System.Data.DataColumn("CONTESTEDDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnCONTESTEDDATE);
            this.columnSOLUTIONNUMBER = new global::System.Data.DataColumn("SOLUTIONNUMBER", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnSOLUTIONNUMBER);
            this.columnSOLUTIONDATE = new global::System.Data.DataColumn("SOLUTIONDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnSOLUTIONDATE);
            this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnCONTESTEDID}, true));
            this.columnCONTESTEDID.AutoIncrement = true;
            this.columnCONTESTEDID.AutoIncrementSeed = 1;
            this.columnCONTESTEDID.AllowDBNull = false;
            this.columnCONTESTEDID.Unique = true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ContestedRow NewContestedRow()
        {
            return ((ContestedRow)(this.NewRow()));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
        {
            return new ContestedRow(builder);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType()
        {
            return typeof(ContestedRow);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanged(e);
            if ((this.ContestedRowChanged != null))
            {
                this.ContestedRowChanged(this, new ContestedRowChangeEvent(((ContestedRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanging(e);
            if ((this.ContestedRowChanging != null))
            {
                this.ContestedRowChanging(this, new ContestedRowChangeEvent(((ContestedRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleted(e);
            if ((this.ContestedRowDeleted != null))
            {
                this.ContestedRowDeleted(this, new ContestedRowChangeEvent(((ContestedRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleting(e);
            if ((this.ContestedRowDeleting != null))
            {
                this.ContestedRowDeleting(this, new ContestedRowChangeEvent(((ContestedRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemoveContestedRow(ContestedRow row)
        {
            this.Rows.Remove(row);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
        {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            CGXML ds = new CGXML();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "ContestedDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace))
            {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try
                {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
                    {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length))
                        {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length)
                                        && (s1.ReadByte() == s2.ReadByte()));)
                            {
                                ;
                            }
                            if ((s1.Position == s1.Length))
                            {
                                return type;
                            }
                        }
                    }
                }
                finally
                {
                    if ((s1 != null))
                    {
                        s1.Close();
                    }
                    if ((s2 != null))
                    {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }

    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class ContestedxEntityDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
    {

        private global::System.Data.DataColumn columnCONTESTEDXENTITYID;

        private global::System.Data.DataColumn columnCONTESTEDID;

        private global::System.Data.DataColumn columnLANDID;

        private global::System.Data.DataColumn columnBUILDINGID;

        private global::System.Data.DataColumn columnIUID;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ContestedxEntityDataTable()
        {
            this.TableName = "ContestedxEntity";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal ContestedxEntityDataTable(global::System.Data.DataTable table)
        {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive))
            {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
            {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace))
            {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected ContestedxEntityDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                base(info, context)
        {
            this.InitVars();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn CONTESTEDXENTITYIDColumn
        {
            get
            {
                return this.columnCONTESTEDXENTITYID;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn CONTESTEDIDColumn
        {
            get
            {
                return this.columnCONTESTEDID;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn LANDIDColumn
        {
            get
            {
                return this.columnLANDID;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn BUILDINGIDColumn
        {
            get
            {
                return this.columnBUILDINGID;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn IUIDColumn
        {
            get
            {
                return this.columnIUID;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count
        {
            get
            {
                return this.Rows.Count;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ContestedxEntityRow this[int index]
        {
            get
            {
                return ((ContestedxEntityRow)(this.Rows[index]));
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event ContestedxEntityRowChangeEventHandler ContestedxEntityRowChanging;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event ContestedxEntityRowChangeEventHandler ContestedxEntityRowChanged;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event ContestedxEntityRowChangeEventHandler ContestedxEntityRowDeleting;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event ContestedxEntityRowChangeEventHandler ContestedxEntityRowDeleted;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddContestedxEntityRow(ContestedxEntityRow row)
        {
            this.Rows.Add(row);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ContestedxEntityRow AddContestedxEntityRow(ContestedRow parentContestedRowByContested_ContestedxEntity, LandRow parentLandRowByLand_ContestedxEntity, BuildingRow parentBuildingRowByBuilding_ContestedxEntity, IURow parentIURowByIU_ContestedxEntity)
        {
            ContestedxEntityRow rowContestedxEntityRow = ((ContestedxEntityRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    null,
                    null,
                    null,
                    null,
                    null};
            if ((parentContestedRowByContested_ContestedxEntity != null))
            {
                columnValuesArray[1] = parentContestedRowByContested_ContestedxEntity[0];
            }
            if ((parentLandRowByLand_ContestedxEntity != null))
            {
                columnValuesArray[2] = parentLandRowByLand_ContestedxEntity[0];
            }
            if ((parentBuildingRowByBuilding_ContestedxEntity != null))
            {
                columnValuesArray[3] = parentBuildingRowByBuilding_ContestedxEntity[0];
            }
            if ((parentIURowByIU_ContestedxEntity != null))
            {
                columnValuesArray[4] = parentIURowByIU_ContestedxEntity[0];
            }
            rowContestedxEntityRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowContestedxEntityRow);
            return rowContestedxEntityRow;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ContestedxEntityRow FindByCONTESTEDXENTITYID(int CONTESTEDXENTITYID)
        {
            return ((ContestedxEntityRow)(this.Rows.Find(new object[] {
                        CONTESTEDXENTITYID})));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual global::System.Collections.IEnumerator GetEnumerator()
        {
            return this.Rows.GetEnumerator();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone()
        {
            ContestedxEntityDataTable cln = ((ContestedxEntityDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance()
        {
            return new ContestedxEntityDataTable();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars()
        {
            this.columnCONTESTEDXENTITYID = base.Columns["CONTESTEDXENTITYID"];
            this.columnCONTESTEDID = base.Columns["CONTESTEDID"];
            this.columnLANDID = base.Columns["LANDID"];
            this.columnBUILDINGID = base.Columns["BUILDINGID"];
            this.columnIUID = base.Columns["IUID"];
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass()
        {
            this.columnCONTESTEDXENTITYID = new global::System.Data.DataColumn("CONTESTEDXENTITYID", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnCONTESTEDXENTITYID);
            this.columnCONTESTEDID = new global::System.Data.DataColumn("CONTESTEDID", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnCONTESTEDID);
            this.columnLANDID = new global::System.Data.DataColumn("LANDID", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnLANDID);
            this.columnBUILDINGID = new global::System.Data.DataColumn("BUILDINGID", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnBUILDINGID);
            this.columnIUID = new global::System.Data.DataColumn("IUID", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnIUID);
            this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnCONTESTEDXENTITYID}, true));
            this.columnCONTESTEDXENTITYID.AutoIncrement = true;
            this.columnCONTESTEDXENTITYID.AutoIncrementSeed = -1;
            this.columnCONTESTEDXENTITYID.AutoIncrementStep = -1;
            this.columnCONTESTEDXENTITYID.AllowDBNull = false;
            this.columnCONTESTEDXENTITYID.Unique = true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ContestedxEntityRow NewContestedxEntityRow()
        {
            return ((ContestedxEntityRow)(this.NewRow()));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
        {
            return new ContestedxEntityRow(builder);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType()
        {
            return typeof(ContestedxEntityRow);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanged(e);
            if ((this.ContestedxEntityRowChanged != null))
            {
                this.ContestedxEntityRowChanged(this, new ContestedxEntityRowChangeEvent(((ContestedxEntityRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanging(e);
            if ((this.ContestedxEntityRowChanging != null))
            {
                this.ContestedxEntityRowChanging(this, new ContestedxEntityRowChangeEvent(((ContestedxEntityRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleted(e);
            if ((this.ContestedxEntityRowDeleted != null))
            {
                this.ContestedxEntityRowDeleted(this, new ContestedxEntityRowChangeEvent(((ContestedxEntityRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleting(e);
            if ((this.ContestedxEntityRowDeleting != null))
            {
                this.ContestedxEntityRowDeleting(this, new ContestedxEntityRowChangeEvent(((ContestedxEntityRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemoveContestedxEntityRow(ContestedxEntityRow row)
        {
            this.Rows.Remove(row);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
        {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            CGXML ds = new CGXML();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "ContestedxEntityDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace))
            {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try
                {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
                    {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length))
                        {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length)
                                        && (s1.ReadByte() == s2.ReadByte()));)
                            {
                                ;
                            }
                            if ((s1.Position == s1.Length))
                            {
                                return type;
                            }
                        }
                    }
                }
                finally
                {
                    if ((s1 != null))
                    {
                        s1.Close();
                    }
                    if ((s2 != null))
                    {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }

    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class AddressRow : global::System.Data.DataRow
    {

        private AddressDataTable tableAddress;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal AddressRow(global::System.Data.DataRowBuilder rb) :
                base(rb)
        {
            this.tableAddress = ((AddressDataTable)(this.Table));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int ADDRESSID
        {
            get
            {
                return ((int)(this[this.tableAddress.ADDRESSIDColumn]));
            }
            set
            {
                this[this.tableAddress.ADDRESSIDColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string SIRSUP
        {
            get
            {
                try
                {
                    return ((string)(this[this.tableAddress.SIRSUPColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'SIRSUP\' in table \'Address\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableAddress.SIRSUPColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string SIRUTA
        {
            get
            {
                try
                {
                    return ((string)(this[this.tableAddress.SIRUTAColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'SIRUTA\' in table \'Address\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableAddress.SIRUTAColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool INTRAVILAN
        {
            get
            {
                try
                {
                    return ((bool)(this[this.tableAddress.INTRAVILANColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'INTRAVILAN\' in table \'Address\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableAddress.INTRAVILANColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string DISTRICTTYPE
        {
            get
            {
                if (this.IsDISTRICTTYPENull())
                {
                    return string.Empty;
                }
                else
                {
                    return ((string)(this[this.tableAddress.DISTRICTTYPEColumn]));
                }
            }
            set
            {
                this[this.tableAddress.DISTRICTTYPEColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string DISTRICTNAME
        {
            get
            {
                if (this.IsDISTRICTNAMENull())
                {
                    return string.Empty;
                }
                else
                {
                    return ((string)(this[this.tableAddress.DISTRICTNAMEColumn]));
                }
            }
            set
            {
                this[this.tableAddress.DISTRICTNAMEColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string STREETTYPE
        {
            get
            {
                if (this.IsSTREETTYPENull())
                {
                    return string.Empty;
                }
                else
                {
                    return ((string)(this[this.tableAddress.STREETTYPEColumn]));
                }
            }
            set
            {
                this[this.tableAddress.STREETTYPEColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string STREETNAME
        {
            get
            {
                if (this.IsSTREETNAMENull())
                {
                    return string.Empty;
                }
                else
                {
                    return ((string)(this[this.tableAddress.STREETNAMEColumn]));
                }
            }
            set
            {
                this[this.tableAddress.STREETNAMEColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string POSTALNUMBER
        {
            get
            {
                if (this.IsPOSTALNUMBERNull())
                {
                    return string.Empty;
                }
                else
                {
                    return ((string)(this[this.tableAddress.POSTALNUMBERColumn]));
                }
            }
            set
            {
                this[this.tableAddress.POSTALNUMBERColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string BLOCK
        {
            get
            {
                if (this.IsBLOCKNull())
                {
                    return string.Empty;
                }
                else
                {
                    return ((string)(this[this.tableAddress.BLOCKColumn]));
                }
            }
            set
            {
                this[this.tableAddress.BLOCKColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string ENTRY
        {
            get
            {
                if (this.IsENTRYNull())
                {
                    return string.Empty;
                }
                else
                {
                    return ((string)(this[this.tableAddress.ENTRYColumn]));
                }
            }
            set
            {
                this[this.tableAddress.ENTRYColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string FLOOR
        {
            get
            {
                if (this.IsFLOORNull())
                {
                    return string.Empty;
                }
                else
                {
                    return ((string)(this[this.tableAddress.FLOORColumn]));
                }
            }
            set
            {
                this[this.tableAddress.FLOORColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string APNO
        {
            get
            {
                if (this.IsAPNONull())
                {
                    return string.Empty;
                }
                else
                {
                    return ((string)(this[this.tableAddress.APNOColumn]));
                }
            }
            set
            {
                this[this.tableAddress.APNOColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string ZIPCODE
        {
            get
            {
                if (this.IsZIPCODENull())
                {
                    return string.Empty;
                }
                else
                {
                    return ((string)(this[this.tableAddress.ZIPCODEColumn]));
                }
            }
            set
            {
                this[this.tableAddress.ZIPCODEColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string DESCRIPTION
        {
            get
            {
                if (this.IsDESCRIPTIONNull())
                {
                    return string.Empty;
                }
                else
                {
                    return ((string)(this[this.tableAddress.DESCRIPTIONColumn]));
                }
            }
            set
            {
                this[this.tableAddress.DESCRIPTIONColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string SECTION
        {
            get
            {
                try
                {
                    return ((string)(this[this.tableAddress.SECTIONColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'SECTION\' in table \'Address\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableAddress.SECTIONColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsSIRSUPNull()
        {
            return this.IsNull(this.tableAddress.SIRSUPColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetSIRSUPNull()
        {
            this[this.tableAddress.SIRSUPColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsSIRUTANull()
        {
            return this.IsNull(this.tableAddress.SIRUTAColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetSIRUTANull()
        {
            this[this.tableAddress.SIRUTAColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsINTRAVILANNull()
        {
            return this.IsNull(this.tableAddress.INTRAVILANColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetINTRAVILANNull()
        {
            this[this.tableAddress.INTRAVILANColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsDISTRICTTYPENull()
        {
            return this.IsNull(this.tableAddress.DISTRICTTYPEColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetDISTRICTTYPENull()
        {
            this[this.tableAddress.DISTRICTTYPEColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsDISTRICTNAMENull()
        {
            return this.IsNull(this.tableAddress.DISTRICTNAMEColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetDISTRICTNAMENull()
        {
            this[this.tableAddress.DISTRICTNAMEColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsSTREETTYPENull()
        {
            return this.IsNull(this.tableAddress.STREETTYPEColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetSTREETTYPENull()
        {
            this[this.tableAddress.STREETTYPEColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsSTREETNAMENull()
        {
            return this.IsNull(this.tableAddress.STREETNAMEColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetSTREETNAMENull()
        {
            this[this.tableAddress.STREETNAMEColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsPOSTALNUMBERNull()
        {
            return this.IsNull(this.tableAddress.POSTALNUMBERColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetPOSTALNUMBERNull()
        {
            this[this.tableAddress.POSTALNUMBERColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsBLOCKNull()
        {
            return this.IsNull(this.tableAddress.BLOCKColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetBLOCKNull()
        {
            this[this.tableAddress.BLOCKColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsENTRYNull()
        {
            return this.IsNull(this.tableAddress.ENTRYColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetENTRYNull()
        {
            this[this.tableAddress.ENTRYColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsFLOORNull()
        {
            return this.IsNull(this.tableAddress.FLOORColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetFLOORNull()
        {
            this[this.tableAddress.FLOORColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsAPNONull()
        {
            return this.IsNull(this.tableAddress.APNOColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetAPNONull()
        {
            this[this.tableAddress.APNOColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsZIPCODENull()
        {
            return this.IsNull(this.tableAddress.ZIPCODEColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetZIPCODENull()
        {
            this[this.tableAddress.ZIPCODEColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsDESCRIPTIONNull()
        {
            return this.IsNull(this.tableAddress.DESCRIPTIONColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetDESCRIPTIONNull()
        {
            this[this.tableAddress.DESCRIPTIONColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsSECTIONNull()
        {
            return this.IsNull(this.tableAddress.SECTIONColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetSECTIONNull()
        {
            this[this.tableAddress.SECTIONColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public BuildingRow[] GetBuildingRows()
        {
            if ((this.Table.ChildRelations["FK_Address_Building"] == null))
            {
                return new BuildingRow[0];
            }
            else
            {
                return ((BuildingRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Address_Building"])));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public LandRow[] GetLandRows()
        {
            if ((this.Table.ChildRelations["FK_Address_Immovable"] == null))
            {
                return new LandRow[0];
            }
            else
            {
                return ((LandRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Address_Immovable"])));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PersonRow[] GetPersonRows()
        {
            if ((this.Table.ChildRelations["FK_Address_Person"] == null))
            {
                return new PersonRow[0];
            }
            else
            {
                return ((PersonRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Address_Person"])));
            }
        }
    }

    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class BuildingRow : global::System.Data.DataRow
    {

        private BuildingDataTable tableBuilding;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal BuildingRow(global::System.Data.DataRowBuilder rb) :
                base(rb)
        {
            this.tableBuilding = ((BuildingDataTable)(this.Table));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int BUILDINGID
        {
            get
            {
                return ((int)(this[this.tableBuilding.BUILDINGIDColumn]));
            }
            set
            {
                this[this.tableBuilding.BUILDINGIDColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int LANDID
        {
            get
            {
                return ((int)(this[this.tableBuilding.LANDIDColumn]));
            }
            set
            {
                this[this.tableBuilding.LANDIDColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int ADDRESSID
        {
            get
            {
                try
                {
                    return ((int)(this[this.tableBuilding.ADDRESSIDColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'ADDRESSID\' in table \'Building\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableBuilding.ADDRESSIDColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int BUILDNO
        {
            get
            {
                return ((int)(this[this.tableBuilding.BUILDNOColumn]));
            }
            set
            {
                this[this.tableBuilding.BUILDNOColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public double MEASUREDAREA
        {
            get
            {
                try
                {
                    return ((double)(this[this.tableBuilding.MEASUREDAREAColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'MEASUREDAREA\' in table \'Building\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableBuilding.MEASUREDAREAColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public double TOTALAREA
        {
            get
            {
                try
                {
                    return ((double)(this[this.tableBuilding.TOTALAREAColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'TOTALAREA\' in table \'Building\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableBuilding.TOTALAREAColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string BUILDINGDESTINATION
        {
            get
            {
                if (this.IsBUILDINGDESTINATIONNull())
                {
                    return string.Empty;
                }
                else
                {
                    return ((string)(this[this.tableBuilding.BUILDINGDESTINATIONColumn]));
                }
            }
            set
            {
                this[this.tableBuilding.BUILDINGDESTINATIONColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int LEVELSNO
        {
            get
            {
                try
                {
                    return ((int)(this[this.tableBuilding.LEVELSNOColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'LEVELSNO\' in table \'Building\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableBuilding.LEVELSNOColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int IUNO
        {
            get
            {
                try
                {
                    return ((int)(this[this.tableBuilding.IUNOColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'IUNO\' in table \'Building\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableBuilding.IUNOColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public double TAXVALUE
        {
            get
            {
                try
                {
                    return ((double)(this[this.tableBuilding.TAXVALUEColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'TAXVALUE\' in table \'Building\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableBuilding.TAXVALUEColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string NOTES
        {
            get
            {
                try
                {
                    return ((string)(this[this.tableBuilding.NOTESColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'NOTES\' in table \'Building\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableBuilding.NOTESColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ISLEGAL
        {
            get
            {
                return ((bool)(this[this.tableBuilding.ISLEGALColumn]));
            }
            set
            {
                this[this.tableBuilding.ISLEGALColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public double LEGALAREA
        {
            get
            {
                try
                {
                    return ((double)(this[this.tableBuilding.LEGALAREAColumn]));
                }
                catch (global::System.InvalidCastException)
                {
                    return ((double)(9898989));
                }
            }
            set
            {
                this[this.tableBuilding.LEGALAREAColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string E2IDENTIFIER
        {
            get
            {
                try
                {
                    return ((string)(this[this.tableBuilding.E2IDENTIFIERColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'E2IDENTIFIER\' in table \'Building\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableBuilding.E2IDENTIFIERColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string PAPERCADNO
        {
            get
            {
                try
                {
                    return ((string)(this[this.tableBuilding.PAPERCADNOColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'PAPERCADNO\' in table \'Building\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableBuilding.PAPERCADNOColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string PAPERLBNO
        {
            get
            {
                try
                {
                    return ((string)(this[this.tableBuilding.PAPERLBNOColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'PAPERLBNO\' in table \'Building\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableBuilding.PAPERLBNOColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string TOPONO
        {
            get
            {
                try
                {
                    return ((string)(this[this.tableBuilding.TOPONOColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'TOPONO\' in table \'Building\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableBuilding.TOPONOColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string CADGENNO
        {
            get
            {
                try
                {
                    return ((string)(this[this.tableBuilding.CADGENNOColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'CADGENNO\' in table \'Building\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableBuilding.CADGENNOColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public LandRow LandRow
        {
            get
            {
                return ((LandRow)(this.GetParentRow(this.Table.ParentRelations["FK_Immovable_Building"])));
            }
            set
            {
                this.SetParentRow(value, this.Table.ParentRelations["FK_Immovable_Building"]);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AddressRow AddressRow
        {
            get
            {
                return ((AddressRow)(this.GetParentRow(this.Table.ParentRelations["FK_Address_Building"])));
            }
            set
            {
                this.SetParentRow(value, this.Table.ParentRelations["FK_Address_Building"]);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsADDRESSIDNull()
        {
            return this.IsNull(this.tableBuilding.ADDRESSIDColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetADDRESSIDNull()
        {
            this[this.tableBuilding.ADDRESSIDColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsMEASUREDAREANull()
        {
            return this.IsNull(this.tableBuilding.MEASUREDAREAColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetMEASUREDAREANull()
        {
            this[this.tableBuilding.MEASUREDAREAColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsTOTALAREANull()
        {
            return this.IsNull(this.tableBuilding.TOTALAREAColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetTOTALAREANull()
        {
            this[this.tableBuilding.TOTALAREAColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsBUILDINGDESTINATIONNull()
        {
            return this.IsNull(this.tableBuilding.BUILDINGDESTINATIONColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetBUILDINGDESTINATIONNull()
        {
            this[this.tableBuilding.BUILDINGDESTINATIONColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsLEVELSNONull()
        {
            return this.IsNull(this.tableBuilding.LEVELSNOColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetLEVELSNONull()
        {
            this[this.tableBuilding.LEVELSNOColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsIUNONull()
        {
            return this.IsNull(this.tableBuilding.IUNOColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetIUNONull()
        {
            this[this.tableBuilding.IUNOColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsTAXVALUENull()
        {
            return this.IsNull(this.tableBuilding.TAXVALUEColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetTAXVALUENull()
        {
            this[this.tableBuilding.TAXVALUEColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsNOTESNull()
        {
            return this.IsNull(this.tableBuilding.NOTESColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetNOTESNull()
        {
            this[this.tableBuilding.NOTESColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsLEGALAREANull()
        {
            return this.IsNull(this.tableBuilding.LEGALAREAColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetLEGALAREANull()
        {
            this[this.tableBuilding.LEGALAREAColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsE2IDENTIFIERNull()
        {
            return this.IsNull(this.tableBuilding.E2IDENTIFIERColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetE2IDENTIFIERNull()
        {
            this[this.tableBuilding.E2IDENTIFIERColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsPAPERCADNONull()
        {
            return this.IsNull(this.tableBuilding.PAPERCADNOColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetPAPERCADNONull()
        {
            this[this.tableBuilding.PAPERCADNOColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsPAPERLBNONull()
        {
            return this.IsNull(this.tableBuilding.PAPERLBNOColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetPAPERLBNONull()
        {
            this[this.tableBuilding.PAPERLBNOColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsTOPONONull()
        {
            return this.IsNull(this.tableBuilding.TOPONOColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetTOPONONull()
        {
            this[this.tableBuilding.TOPONOColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsCADGENNONull()
        {
            return this.IsNull(this.tableBuilding.CADGENNOColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetCADGENNONull()
        {
            this[this.tableBuilding.CADGENNOColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public IURow[] GetIURows()
        {
            if ((this.Table.ChildRelations["FK_Building_IndividualUnit"] == null))
            {
                return new IURow[0];
            }
            else
            {
                return ((IURow[])(base.GetChildRows(this.Table.ChildRelations["FK_Building_IndividualUnit"])));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public BuildingCommonPartsRow[] GetBuildingCommonPartsRows()
        {
            if ((this.Table.ChildRelations["FK_Building_BuildingCommonParts"] == null))
            {
                return new BuildingCommonPartsRow[0];
            }
            else
            {
                return ((BuildingCommonPartsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Building_BuildingCommonParts"])));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PointsRow[] GetPointsRows()
        {
            if ((this.Table.ChildRelations["FK_Building_Points"] == null))
            {
                return new PointsRow[0];
            }
            else
            {
                return ((PointsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Building_Points"])));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RegistrationXEntityRow[] GetRegistrationXEntityRows()
        {
            if ((this.Table.ChildRelations["FK_Building_InscrierexEntitate"] == null))
            {
                return new RegistrationXEntityRow[0];
            }
            else
            {
                return ((RegistrationXEntityRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Building_InscrierexEntitate"])));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ContestedxEntityRow[] GetContestedxEntityRows()
        {
            if ((this.Table.ChildRelations["Building_ContestedxEntity"] == null))
            {
                return new ContestedxEntityRow[0];
            }
            else
            {
                return ((ContestedxEntityRow[])(base.GetChildRows(this.Table.ChildRelations["Building_ContestedxEntity"])));
            }
        }
    }

    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class BuildingCommonPartsRow : global::System.Data.DataRow
    {

        private BuildingCommonPartsDataTable tableBuildingCommonParts;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal BuildingCommonPartsRow(global::System.Data.DataRowBuilder rb) :
                base(rb)
        {
            this.tableBuildingCommonParts = ((BuildingCommonPartsDataTable)(this.Table));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int BUILDINGCOMMONPARTID
        {
            get
            {
                return ((int)(this[this.tableBuildingCommonParts.BUILDINGCOMMONPARTIDColumn]));
            }
            set
            {
                this[this.tableBuildingCommonParts.BUILDINGCOMMONPARTIDColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int BUILDINGID
        {
            get
            {
                try
                {
                    return ((int)(this[this.tableBuildingCommonParts.BUILDINGIDColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'BUILDINGID\' in table \'BuildingCommonParts\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableBuildingCommonParts.BUILDINGIDColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string COMMONPARTTYPE
        {
            get
            {
                try
                {
                    return ((string)(this[this.tableBuildingCommonParts.COMMONPARTTYPEColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'COMMONPARTTYPE\' in table \'BuildingCommonParts\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableBuildingCommonParts.COMMONPARTTYPEColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public BuildingRow BuildingRow
        {
            get
            {
                return ((BuildingRow)(this.GetParentRow(this.Table.ParentRelations["FK_Building_BuildingCommonParts"])));
            }
            set
            {
                this.SetParentRow(value, this.Table.ParentRelations["FK_Building_BuildingCommonParts"]);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsBUILDINGIDNull()
        {
            return this.IsNull(this.tableBuildingCommonParts.BUILDINGIDColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetBUILDINGIDNull()
        {
            this[this.tableBuildingCommonParts.BUILDINGIDColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsCOMMONPARTTYPENull()
        {
            return this.IsNull(this.tableBuildingCommonParts.COMMONPARTTYPEColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetCOMMONPARTTYPENull()
        {
            this[this.tableBuildingCommonParts.COMMONPARTTYPEColumn] = global::System.Convert.DBNull;
        }
    }

    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class DeedRow : global::System.Data.DataRow
    {

        private DeedDataTable tableDeed;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal DeedRow(global::System.Data.DataRowBuilder rb) :
                base(rb)
        {
            this.tableDeed = ((DeedDataTable)(this.Table));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int DEEDID
        {
            get
            {
                return ((int)(this[this.tableDeed.DEEDIDColumn]));
            }
            set
            {
                this[this.tableDeed.DEEDIDColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string DEEDNUMBER
        {
            get
            {
                return ((string)(this[this.tableDeed.DEEDNUMBERColumn]));
            }
            set
            {
                this[this.tableDeed.DEEDNUMBERColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public System.DateTime DEEDDATE
        {
            get
            {
                try
                {
                    return ((global::System.DateTime)(this[this.tableDeed.DEEDDATEColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'DEEDDATE\' in table \'Deed\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableDeed.DEEDDATEColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string DEEDTYPE
        {
            get
            {
                return ((string)(this[this.tableDeed.DEEDTYPEColumn]));
            }
            set
            {
                this[this.tableDeed.DEEDTYPEColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string AUTHORITY
        {
            get
            {
                return ((string)(this[this.tableDeed.AUTHORITYColumn]));
            }
            set
            {
                this[this.tableDeed.AUTHORITYColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string NOTES
        {
            get
            {
                if (this.IsNOTESNull())
                {
                    return string.Empty;
                }
                else
                {
                    return ((string)(this[this.tableDeed.NOTESColumn]));
                }
            }
            set
            {
                this[this.tableDeed.NOTESColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int FILEID
        {
            get
            {
                return ((int)(this[this.tableDeed.FILEIDColumn]));
            }
            set
            {
                this[this.tableDeed.FILEIDColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string VALUECURRENCY
        {
            get
            {
                if (this.IsVALUECURRENCYNull())
                {
                    return string.Empty;
                }
                else
                {
                    return ((string)(this[this.tableDeed.VALUECURRENCYColumn]));
                }
            }
            set
            {
                this[this.tableDeed.VALUECURRENCYColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string VALUEAMOUNT
        {
            get
            {
                if (this.IsVALUEAMOUNTNull())
                {
                    return string.Empty;
                }
                else
                {
                    return ((string)(this[this.tableDeed.VALUEAMOUNTColumn]));
                }
            }
            set
            {
                this[this.tableDeed.VALUEAMOUNTColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public FileDescriptionRow FileDescriptionRow
        {
            get
            {
                return ((FileDescriptionRow)(this.GetParentRow(this.Table.ParentRelations["FK_Deed_FileDescription"])));
            }
            set
            {
                this.SetParentRow(value, this.Table.ParentRelations["FK_Deed_FileDescription"]);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsDEEDDATENull()
        {
            return this.IsNull(this.tableDeed.DEEDDATEColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetDEEDDATENull()
        {
            this[this.tableDeed.DEEDDATEColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsNOTESNull()
        {
            return this.IsNull(this.tableDeed.NOTESColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetNOTESNull()
        {
            this[this.tableDeed.NOTESColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsVALUECURRENCYNull()
        {
            return this.IsNull(this.tableDeed.VALUECURRENCYColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetVALUECURRENCYNull()
        {
            this[this.tableDeed.VALUECURRENCYColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsVALUEAMOUNTNull()
        {
            return this.IsNull(this.tableDeed.VALUEAMOUNTColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetVALUEAMOUNTNull()
        {
            this[this.tableDeed.VALUEAMOUNTColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RegistrationRow[] GetRegistrationRows()
        {
            if ((this.Table.ChildRelations["FK_Deed_Registration"] == null))
            {
                return new RegistrationRow[0];
            }
            else
            {
                return ((RegistrationRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Deed_Registration"])));
            }
        }
    }

    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class FileDescriptionRow : global::System.Data.DataRow
    {

        private FileDescriptionDataTable tableFileDescription;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal FileDescriptionRow(global::System.Data.DataRowBuilder rb) :
                base(rb)
        {
            this.tableFileDescription = ((FileDescriptionDataTable)(this.Table));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string FILENAME
        {
            get
            {
                return ((string)(this[this.tableFileDescription.FILENAMEColumn]));
            }
            set
            {
                this[this.tableFileDescription.FILENAMEColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public System.DateTime EXPORTDATE
        {
            get
            {
                try
                {
                    return ((global::System.DateTime)(this[this.tableFileDescription.EXPORTDATEColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'EXPORTDATE\' in table \'FileDescription\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableFileDescription.EXPORTDATEColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string FILEVERSION
        {
            get
            {
                try
                {
                    return ((string)(this[this.tableFileDescription.FILEVERSIONColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'FILEVERSION\' in table \'FileDescription\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableFileDescription.FILEVERSIONColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string OPERATIONTYPE
        {
            get
            {
                try
                {
                    return ((string)(this[this.tableFileDescription.OPERATIONTYPEColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'OPERATIONTYPE\' in table \'FileDescription\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableFileDescription.OPERATIONTYPEColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string LICENSEDNAME
        {
            get
            {
                try
                {
                    return ((string)(this[this.tableFileDescription.LICENSEDNAMEColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'LICENSEDNAME\' in table \'FileDescription\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableFileDescription.LICENSEDNAMEColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string LICENSENUMBER
        {
            get
            {
                try
                {
                    return ((string)(this[this.tableFileDescription.LICENSENUMBERColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'LICENSENUMBER\' in table \'FileDescription\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableFileDescription.LICENSENUMBERColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int FILEID
        {
            get
            {
                return ((int)(this[this.tableFileDescription.FILEIDColumn]));
            }
            set
            {
                this[this.tableFileDescription.FILEIDColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsEXPORTDATENull()
        {
            return this.IsNull(this.tableFileDescription.EXPORTDATEColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetEXPORTDATENull()
        {
            this[this.tableFileDescription.EXPORTDATEColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsFILEVERSIONNull()
        {
            return this.IsNull(this.tableFileDescription.FILEVERSIONColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetFILEVERSIONNull()
        {
            this[this.tableFileDescription.FILEVERSIONColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsOPERATIONTYPENull()
        {
            return this.IsNull(this.tableFileDescription.OPERATIONTYPEColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetOPERATIONTYPENull()
        {
            this[this.tableFileDescription.OPERATIONTYPEColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsLICENSEDNAMENull()
        {
            return this.IsNull(this.tableFileDescription.LICENSEDNAMEColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetLICENSEDNAMENull()
        {
            this[this.tableFileDescription.LICENSEDNAMEColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsLICENSENUMBERNull()
        {
            return this.IsNull(this.tableFileDescription.LICENSENUMBERColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetLICENSENUMBERNull()
        {
            this[this.tableFileDescription.LICENSENUMBERColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public LandRow[] GetLandRows()
        {
            if ((this.Table.ChildRelations["FK_FileDescription_Land"] == null))
            {
                return new LandRow[0];
            }
            else
            {
                return ((LandRow[])(base.GetChildRows(this.Table.ChildRelations["FK_FileDescription_Land"])));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PersonRow[] GetPersonRows()
        {
            if ((this.Table.ChildRelations["FK_Person_FileDescription"] == null))
            {
                return new PersonRow[0];
            }
            else
            {
                return ((PersonRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Person_FileDescription"])));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DeedRow[] GetDeedRows()
        {
            if ((this.Table.ChildRelations["FK_Deed_FileDescription"] == null))
            {
                return new DeedRow[0];
            }
            else
            {
                return ((DeedRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Deed_FileDescription"])));
            }
        }
    }

    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class LandRow : global::System.Data.DataRow
    {

        private LandDataTable tableLand;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal LandRow(global::System.Data.DataRowBuilder rb) :
                base(rb)
        {
            this.tableLand = ((LandDataTable)(this.Table));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int LANDID
        {
            get
            {
                return ((int)(this[this.tableLand.LANDIDColumn]));
            }
            set
            {
                this[this.tableLand.LANDIDColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string CADSECTOR
        {
            get
            {
                try
                {
                    return ((string)(this[this.tableLand.CADSECTORColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'CADSECTOR\' in table \'Land\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableLand.CADSECTORColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int ADDRESSID
        {
            get
            {
                try
                {
                    return ((int)(this[this.tableLand.ADDRESSIDColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'ADDRESSID\' in table \'Land\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableLand.ADDRESSIDColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public double MEASUREDAREA
        {
            get
            {
                return ((double)(this[this.tableLand.MEASUREDAREAColumn]));
            }
            set
            {
                this[this.tableLand.MEASUREDAREAColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public double PARCELLEGALAREA
        {
            get
            {
                try
                {
                    return ((double)(this[this.tableLand.PARCELLEGALAREAColumn]));
                }
                catch (global::System.InvalidCastException)
                {
                    return ((double)(9898989));
                }
            }
            set
            {
                this[this.tableLand.PARCELLEGALAREAColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ISNEW
        {
            get
            {
                try
                {
                    return ((bool)(this[this.tableLand.ISNEWColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'ISNEW\' in table \'Land\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableLand.ISNEWColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int FILEID
        {
            get
            {
                try
                {
                    return ((int)(this[this.tableLand.FILEIDColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'FILEID\' in table \'Land\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableLand.FILEIDColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public double BUILDINGLEGALAREA
        {
            get
            {
                try
                {
                    return ((double)(this[this.tableLand.BUILDINGLEGALAREAColumn]));
                }
                catch (global::System.InvalidCastException)
                {
                    return ((double)(9898989));
                }
            }
            set
            {
                this[this.tableLand.BUILDINGLEGALAREAColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public double TAXVALUE
        {
            get
            {
                try
                {
                    return ((double)(this[this.tableLand.TAXVALUEColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'TAXVALUE\' in table \'Land\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableLand.TAXVALUEColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string NOTES
        {
            get
            {
                try
                {
                    return ((string)(this[this.tableLand.NOTESColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'NOTES\' in table \'Land\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableLand.NOTESColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ENCLOSED
        {
            get
            {
                try
                {
                    return ((bool)(this[this.tableLand.ENCLOSEDColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'ENCLOSED\' in table \'Land\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableLand.ENCLOSEDColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool COAREA
        {
            get
            {
                try
                {
                    return ((bool)(this[this.tableLand.COAREAColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'COAREA\' in table \'Land\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableLand.COAREAColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string E2IDENTIFIER
        {
            get
            {
                try
                {
                    return ((string)(this[this.tableLand.E2IDENTIFIERColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'E2IDENTIFIER\' in table \'Land\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableLand.E2IDENTIFIERColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string PAPERCADNO
        {
            get
            {
                try
                {
                    return ((string)(this[this.tableLand.PAPERCADNOColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'PAPERCADNO\' in table \'Land\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableLand.PAPERCADNOColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string PAPERLBNO
        {
            get
            {
                try
                {
                    return ((string)(this[this.tableLand.PAPERLBNOColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'PAPERLBNO\' in table \'Land\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableLand.PAPERLBNOColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string TOPONO
        {
            get
            {
                try
                {
                    return ((string)(this[this.tableLand.TOPONOColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'TOPONO\' in table \'Land\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableLand.TOPONOColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string CADGENNO
        {
            get
            {
                try
                {
                    return ((string)(this[this.tableLand.CADGENNOColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'CADGENNO\' in table \'Land\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableLand.CADGENNOColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public FileDescriptionRow FileDescriptionRow
        {
            get
            {
                return ((FileDescriptionRow)(this.GetParentRow(this.Table.ParentRelations["FK_FileDescription_Land"])));
            }
            set
            {
                this.SetParentRow(value, this.Table.ParentRelations["FK_FileDescription_Land"]);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AddressRow AddressRow
        {
            get
            {
                return ((AddressRow)(this.GetParentRow(this.Table.ParentRelations["FK_Address_Immovable"])));
            }
            set
            {
                this.SetParentRow(value, this.Table.ParentRelations["FK_Address_Immovable"]);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsCADSECTORNull()
        {
            return this.IsNull(this.tableLand.CADSECTORColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetCADSECTORNull()
        {
            this[this.tableLand.CADSECTORColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsADDRESSIDNull()
        {
            return this.IsNull(this.tableLand.ADDRESSIDColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetADDRESSIDNull()
        {
            this[this.tableLand.ADDRESSIDColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsPARCELLEGALAREANull()
        {
            return this.IsNull(this.tableLand.PARCELLEGALAREAColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetPARCELLEGALAREANull()
        {
            this[this.tableLand.PARCELLEGALAREAColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsISNEWNull()
        {
            return this.IsNull(this.tableLand.ISNEWColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetISNEWNull()
        {
            this[this.tableLand.ISNEWColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsFILEIDNull()
        {
            return this.IsNull(this.tableLand.FILEIDColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetFILEIDNull()
        {
            this[this.tableLand.FILEIDColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsBUILDINGLEGALAREANull()
        {
            return this.IsNull(this.tableLand.BUILDINGLEGALAREAColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetBUILDINGLEGALAREANull()
        {
            this[this.tableLand.BUILDINGLEGALAREAColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsTAXVALUENull()
        {
            return this.IsNull(this.tableLand.TAXVALUEColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetTAXVALUENull()
        {
            this[this.tableLand.TAXVALUEColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsNOTESNull()
        {
            return this.IsNull(this.tableLand.NOTESColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetNOTESNull()
        {
            this[this.tableLand.NOTESColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsENCLOSEDNull()
        {
            return this.IsNull(this.tableLand.ENCLOSEDColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetENCLOSEDNull()
        {
            this[this.tableLand.ENCLOSEDColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsCOAREANull()
        {
            return this.IsNull(this.tableLand.COAREAColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetCOAREANull()
        {
            this[this.tableLand.COAREAColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsE2IDENTIFIERNull()
        {
            return this.IsNull(this.tableLand.E2IDENTIFIERColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetE2IDENTIFIERNull()
        {
            this[this.tableLand.E2IDENTIFIERColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsPAPERCADNONull()
        {
            return this.IsNull(this.tableLand.PAPERCADNOColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetPAPERCADNONull()
        {
            this[this.tableLand.PAPERCADNOColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsPAPERLBNONull()
        {
            return this.IsNull(this.tableLand.PAPERLBNOColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetPAPERLBNONull()
        {
            this[this.tableLand.PAPERLBNOColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsTOPONONull()
        {
            return this.IsNull(this.tableLand.TOPONOColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetTOPONONull()
        {
            this[this.tableLand.TOPONOColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsCADGENNONull()
        {
            return this.IsNull(this.tableLand.CADGENNOColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetCADGENNONull()
        {
            this[this.tableLand.CADGENNOColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public BuildingRow[] GetBuildingRows()
        {
            if ((this.Table.ChildRelations["FK_Immovable_Building"] == null))
            {
                return new BuildingRow[0];
            }
            else
            {
                return ((BuildingRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Immovable_Building"])));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PointsRow[] GetPointsRows()
        {
            if ((this.Table.ChildRelations["FK_Immovable_Points"] == null))
            {
                return new PointsRow[0];
            }
            else
            {
                return ((PointsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Immovable_Points"])));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ParcelRow[] GetParcelRows()
        {
            if ((this.Table.ChildRelations["FK_Immovable_Parcel"] == null))
            {
                return new ParcelRow[0];
            }
            else
            {
                return ((ParcelRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Immovable_Parcel"])));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RegistrationXEntityRow[] GetRegistrationXEntityRows()
        {
            if ((this.Table.ChildRelations["FK_Land_RegistrationXEntity"] == null))
            {
                return new RegistrationXEntityRow[0];
            }
            else
            {
                return ((RegistrationXEntityRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Land_RegistrationXEntity"])));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ContestedxEntityRow[] GetContestedxEntityRows()
        {
            if ((this.Table.ChildRelations["Land_ContestedxEntity"] == null))
            {
                return new ContestedxEntityRow[0];
            }
            else
            {
                return ((ContestedxEntityRow[])(base.GetChildRows(this.Table.ChildRelations["Land_ContestedxEntity"])));
            }
        }
    }

    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class IURow : global::System.Data.DataRow
    {

        private IUDataTable tableIU;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal IURow(global::System.Data.DataRowBuilder rb) :
                base(rb)
        {
            this.tableIU = ((IUDataTable)(this.Table));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int IUID
        {
            get
            {
                return ((int)(this[this.tableIU.IUIDColumn]));
            }
            set
            {
                this[this.tableIU.IUIDColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int BUILDINGID
        {
            get
            {
                try
                {
                    return ((int)(this[this.tableIU.BUILDINGIDColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'BUILDINGID\' in table \'IU\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableIU.BUILDINGIDColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string IDENTIFIER
        {
            get
            {
                return ((string)(this[this.tableIU.IDENTIFIERColumn]));
            }
            set
            {
                this[this.tableIU.IDENTIFIERColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string SECTION
        {
            get
            {
                if (this.IsSECTIONNull())
                {
                    return string.Empty;
                }
                else
                {
                    return ((string)(this[this.tableIU.SECTIONColumn]));
                }
            }
            set
            {
                this[this.tableIU.SECTIONColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string APNO
        {
            get
            {
                if (this.IsAPNONull())
                {
                    return string.Empty;
                }
                else
                {
                    return ((string)(this[this.tableIU.APNOColumn]));
                }
            }
            set
            {
                this[this.tableIU.APNOColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string ENTRY
        {
            get
            {
                if (this.IsENTRYNull())
                {
                    return string.Empty;
                }
                else
                {
                    return ((string)(this[this.tableIU.ENTRYColumn]));
                }
            }
            set
            {
                this[this.tableIU.ENTRYColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public double MEASUREDAREA
        {
            get
            {
                try
                {
                    return ((double)(this[this.tableIU.MEASUREDAREAColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'MEASUREDAREA\' in table \'IU\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableIU.MEASUREDAREAColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public double TOTALAREA
        {
            get
            {
                try
                {
                    return ((double)(this[this.tableIU.TOTALAREAColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'TOTALAREA\' in table \'IU\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableIU.TOTALAREAColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string LANDINDIVISIONAREA
        {
            get
            {
                if (this.IsLANDINDIVISIONAREANull())
                {
                    return string.Empty;
                }
                else
                {
                    return ((string)(this[this.tableIU.LANDINDIVISIONAREAColumn]));
                }
            }
            set
            {
                this[this.tableIU.LANDINDIVISIONAREAColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string COMMONPARTSAREA
        {
            get
            {
                if (this.IsCOMMONPARTSAREANull())
                {
                    return string.Empty;
                }
                else
                {
                    return ((string)(this[this.tableIU.COMMONPARTSAREAColumn]));
                }
            }
            set
            {
                this[this.tableIU.COMMONPARTSAREAColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string NOTES
        {
            get
            {
                try
                {
                    return ((string)(this[this.tableIU.NOTESColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'NOTES\' in table \'IU\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableIU.NOTESColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string FLOOR
        {
            get
            {
                if (this.IsFLOORNull())
                {
                    return string.Empty;
                }
                else
                {
                    return ((string)(this[this.tableIU.FLOORColumn]));
                }
            }
            set
            {
                this[this.tableIU.FLOORColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string LANDDIVISIONTYPE
        {
            get
            {
                try
                {
                    return ((string)(this[this.tableIU.LANDDIVISIONTYPEColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'LANDDIVISIONTYPE\' in table \'IU\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableIU.LANDDIVISIONTYPEColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string COMMONPARTSTYPE
        {
            get
            {
                try
                {
                    return ((string)(this[this.tableIU.COMMONPARTSTYPEColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'COMMONPARTSTYPE\' in table \'IU\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableIU.COMMONPARTSTYPEColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public short ROOMNO
        {
            get
            {
                try
                {
                    return ((short)(this[this.tableIU.ROOMNOColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'ROOMNO\' in table \'IU\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableIU.ROOMNOColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string E2IDENTIFIER
        {
            get
            {
                try
                {
                    return ((string)(this[this.tableIU.E2IDENTIFIERColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'E2IDENTIFIER\' in table \'IU\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableIU.E2IDENTIFIERColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string PAPERCADNO
        {
            get
            {
                try
                {
                    return ((string)(this[this.tableIU.PAPERCADNOColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'PAPERCADNO\' in table \'IU\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableIU.PAPERCADNOColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string PAPERLBNO
        {
            get
            {
                try
                {
                    return ((string)(this[this.tableIU.PAPERLBNOColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'PAPERLBNO\' in table \'IU\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableIU.PAPERLBNOColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string TOPONO
        {
            get
            {
                try
                {
                    return ((string)(this[this.tableIU.TOPONOColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'TOPONO\' in table \'IU\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableIU.TOPONOColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string CADGENNO
        {
            get
            {
                try
                {
                    return ((string)(this[this.tableIU.CADGENNOColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'CADGENNO\' in table \'IU\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableIU.CADGENNOColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public BuildingRow BuildingRow
        {
            get
            {
                return ((BuildingRow)(this.GetParentRow(this.Table.ParentRelations["FK_Building_IndividualUnit"])));
            }
            set
            {
                this.SetParentRow(value, this.Table.ParentRelations["FK_Building_IndividualUnit"]);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsBUILDINGIDNull()
        {
            return this.IsNull(this.tableIU.BUILDINGIDColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetBUILDINGIDNull()
        {
            this[this.tableIU.BUILDINGIDColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsSECTIONNull()
        {
            return this.IsNull(this.tableIU.SECTIONColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetSECTIONNull()
        {
            this[this.tableIU.SECTIONColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsAPNONull()
        {
            return this.IsNull(this.tableIU.APNOColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetAPNONull()
        {
            this[this.tableIU.APNOColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsENTRYNull()
        {
            return this.IsNull(this.tableIU.ENTRYColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetENTRYNull()
        {
            this[this.tableIU.ENTRYColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsMEASUREDAREANull()
        {
            return this.IsNull(this.tableIU.MEASUREDAREAColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetMEASUREDAREANull()
        {
            this[this.tableIU.MEASUREDAREAColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsTOTALAREANull()
        {
            return this.IsNull(this.tableIU.TOTALAREAColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetTOTALAREANull()
        {
            this[this.tableIU.TOTALAREAColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsLANDINDIVISIONAREANull()
        {
            return this.IsNull(this.tableIU.LANDINDIVISIONAREAColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetLANDINDIVISIONAREANull()
        {
            this[this.tableIU.LANDINDIVISIONAREAColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsCOMMONPARTSAREANull()
        {
            return this.IsNull(this.tableIU.COMMONPARTSAREAColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetCOMMONPARTSAREANull()
        {
            this[this.tableIU.COMMONPARTSAREAColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsNOTESNull()
        {
            return this.IsNull(this.tableIU.NOTESColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetNOTESNull()
        {
            this[this.tableIU.NOTESColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsFLOORNull()
        {
            return this.IsNull(this.tableIU.FLOORColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetFLOORNull()
        {
            this[this.tableIU.FLOORColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsLANDDIVISIONTYPENull()
        {
            return this.IsNull(this.tableIU.LANDDIVISIONTYPEColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetLANDDIVISIONTYPENull()
        {
            this[this.tableIU.LANDDIVISIONTYPEColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsCOMMONPARTSTYPENull()
        {
            return this.IsNull(this.tableIU.COMMONPARTSTYPEColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetCOMMONPARTSTYPENull()
        {
            this[this.tableIU.COMMONPARTSTYPEColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsROOMNONull()
        {
            return this.IsNull(this.tableIU.ROOMNOColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetROOMNONull()
        {
            this[this.tableIU.ROOMNOColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsE2IDENTIFIERNull()
        {
            return this.IsNull(this.tableIU.E2IDENTIFIERColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetE2IDENTIFIERNull()
        {
            this[this.tableIU.E2IDENTIFIERColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsPAPERCADNONull()
        {
            return this.IsNull(this.tableIU.PAPERCADNOColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetPAPERCADNONull()
        {
            this[this.tableIU.PAPERCADNOColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsPAPERLBNONull()
        {
            return this.IsNull(this.tableIU.PAPERLBNOColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetPAPERLBNONull()
        {
            this[this.tableIU.PAPERLBNOColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsTOPONONull()
        {
            return this.IsNull(this.tableIU.TOPONOColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetTOPONONull()
        {
            this[this.tableIU.TOPONOColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsCADGENNONull()
        {
            return this.IsNull(this.tableIU.CADGENNOColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetCADGENNONull()
        {
            this[this.tableIU.CADGENNOColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RegistrationXEntityRow[] GetRegistrationXEntityRows()
        {
            if ((this.Table.ChildRelations["FK_IU_RegistrationXEntity"] == null))
            {
                return new RegistrationXEntityRow[0];
            }
            else
            {
                return ((RegistrationXEntityRow[])(base.GetChildRows(this.Table.ChildRelations["FK_IU_RegistrationXEntity"])));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ContestedxEntityRow[] GetContestedxEntityRows()
        {
            if ((this.Table.ChildRelations["IU_ContestedxEntity"] == null))
            {
                return new ContestedxEntityRow[0];
            }
            else
            {
                return ((ContestedxEntityRow[])(base.GetChildRows(this.Table.ChildRelations["IU_ContestedxEntity"])));
            }
        }
    }

    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class ParcelRow : global::System.Data.DataRow
    {

        private ParcelDataTable tableParcel;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal ParcelRow(global::System.Data.DataRowBuilder rb) :
                base(rb)
        {
            this.tableParcel = ((ParcelDataTable)(this.Table));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int PARCELID
        {
            get
            {
                return ((int)(this[this.tableParcel.PARCELIDColumn]));
            }
            set
            {
                this[this.tableParcel.PARCELIDColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int LANDID
        {
            get
            {
                try
                {
                    return ((int)(this[this.tableParcel.LANDIDColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'LANDID\' in table \'Parcel\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableParcel.LANDIDColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int NUMBER
        {
            get
            {
                try
                {
                    return ((int)(this[this.tableParcel.NUMBERColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'NUMBER\' in table \'Parcel\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableParcel.NUMBERColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public double MEASUREDAREA
        {
            get
            {
                try
                {
                    return ((double)(this[this.tableParcel.MEASUREDAREAColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'MEASUREDAREA\' in table \'Parcel\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableParcel.MEASUREDAREAColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string USECATEGORY
        {
            get
            {
                if (this.IsUSECATEGORYNull())
                {
                    return string.Empty;
                }
                else
                {
                    return ((string)(this[this.tableParcel.USECATEGORYColumn]));
                }
            }
            set
            {
                this[this.tableParcel.USECATEGORYColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool INTRAVILAN
        {
            get
            {
                try
                {
                    return ((bool)(this[this.tableParcel.INTRAVILANColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'INTRAVILAN\' in table \'Parcel\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableParcel.INTRAVILANColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public double TAXVALUE
        {
            get
            {
                try
                {
                    return ((double)(this[this.tableParcel.TAXVALUEColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'TAXVALUE\' in table \'Parcel\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableParcel.TAXVALUEColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string TITLENO
        {
            get
            {
                if (this.IsTITLENONull())
                {
                    return string.Empty;
                }
                else
                {
                    return ((string)(this[this.tableParcel.TITLENOColumn]));
                }
            }
            set
            {
                this[this.tableParcel.TITLENOColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string LANDPLOTNO
        {
            get
            {
                if (this.IsLANDPLOTNONull())
                {
                    return string.Empty;
                }
                else
                {
                    return ((string)(this[this.tableParcel.LANDPLOTNOColumn]));
                }
            }
            set
            {
                this[this.tableParcel.LANDPLOTNOColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string PARCELNO
        {
            get
            {
                if (this.IsPARCELNONull())
                {
                    return string.Empty;
                }
                else
                {
                    return ((string)(this[this.tableParcel.PARCELNOColumn]));
                }
            }
            set
            {
                this[this.tableParcel.PARCELNOColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string NOTES
        {
            get
            {
                if (this.IsNOTESNull())
                {
                    return string.Empty;
                }
                else
                {
                    return ((string)(this[this.tableParcel.NOTESColumn]));
                }
            }
            set
            {
                this[this.tableParcel.NOTESColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string E2IDENTIFIER
        {
            get
            {
                try
                {
                    return ((string)(this[this.tableParcel.E2IDENTIFIERColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'E2IDENTIFIER\' in table \'Parcel\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableParcel.E2IDENTIFIERColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string PAPERCADNO
        {
            get
            {
                if (this.IsPAPERCADNONull())
                {
                    return string.Empty;
                }
                else
                {
                    return ((string)(this[this.tableParcel.PAPERCADNOColumn]));
                }
            }
            set
            {
                this[this.tableParcel.PAPERCADNOColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string PAPERLBNO
        {
            get
            {
                if (this.IsPAPERLBNONull())
                {
                    return string.Empty;
                }
                else
                {
                    return ((string)(this[this.tableParcel.PAPERLBNOColumn]));
                }
            }
            set
            {
                this[this.tableParcel.PAPERLBNOColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string TOPONO
        {
            get
            {
                if (this.IsTOPONONull())
                {
                    return string.Empty;
                }
                else
                {
                    return ((string)(this[this.tableParcel.TOPONOColumn]));
                }
            }
            set
            {
                this[this.tableParcel.TOPONOColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string CADGENNO
        {
            get
            {
                if (this.IsCADGENNONull())
                {
                    return string.Empty;
                }
                else
                {
                    return ((string)(this[this.tableParcel.CADGENNOColumn]));
                }
            }
            set
            {
                this[this.tableParcel.CADGENNOColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public LandRow LandRow
        {
            get
            {
                return ((LandRow)(this.GetParentRow(this.Table.ParentRelations["FK_Immovable_Parcel"])));
            }
            set
            {
                this.SetParentRow(value, this.Table.ParentRelations["FK_Immovable_Parcel"]);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsLANDIDNull()
        {
            return this.IsNull(this.tableParcel.LANDIDColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetLANDIDNull()
        {
            this[this.tableParcel.LANDIDColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsNUMBERNull()
        {
            return this.IsNull(this.tableParcel.NUMBERColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetNUMBERNull()
        {
            this[this.tableParcel.NUMBERColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsMEASUREDAREANull()
        {
            return this.IsNull(this.tableParcel.MEASUREDAREAColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetMEASUREDAREANull()
        {
            this[this.tableParcel.MEASUREDAREAColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsUSECATEGORYNull()
        {
            return this.IsNull(this.tableParcel.USECATEGORYColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetUSECATEGORYNull()
        {
            this[this.tableParcel.USECATEGORYColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsINTRAVILANNull()
        {
            return this.IsNull(this.tableParcel.INTRAVILANColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetINTRAVILANNull()
        {
            this[this.tableParcel.INTRAVILANColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsTAXVALUENull()
        {
            return this.IsNull(this.tableParcel.TAXVALUEColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetTAXVALUENull()
        {
            this[this.tableParcel.TAXVALUEColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsTITLENONull()
        {
            return this.IsNull(this.tableParcel.TITLENOColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetTITLENONull()
        {
            this[this.tableParcel.TITLENOColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsLANDPLOTNONull()
        {
            return this.IsNull(this.tableParcel.LANDPLOTNOColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetLANDPLOTNONull()
        {
            this[this.tableParcel.LANDPLOTNOColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsPARCELNONull()
        {
            return this.IsNull(this.tableParcel.PARCELNOColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetPARCELNONull()
        {
            this[this.tableParcel.PARCELNOColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsNOTESNull()
        {
            return this.IsNull(this.tableParcel.NOTESColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetNOTESNull()
        {
            this[this.tableParcel.NOTESColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsE2IDENTIFIERNull()
        {
            return this.IsNull(this.tableParcel.E2IDENTIFIERColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetE2IDENTIFIERNull()
        {
            this[this.tableParcel.E2IDENTIFIERColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsPAPERCADNONull()
        {
            return this.IsNull(this.tableParcel.PAPERCADNOColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetPAPERCADNONull()
        {
            this[this.tableParcel.PAPERCADNOColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsPAPERLBNONull()
        {
            return this.IsNull(this.tableParcel.PAPERLBNOColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetPAPERLBNONull()
        {
            this[this.tableParcel.PAPERLBNOColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsTOPONONull()
        {
            return this.IsNull(this.tableParcel.TOPONOColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetTOPONONull()
        {
            this[this.tableParcel.TOPONOColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsCADGENNONull()
        {
            return this.IsNull(this.tableParcel.CADGENNOColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetCADGENNONull()
        {
            this[this.tableParcel.CADGENNOColumn] = global::System.Convert.DBNull;
        }
    }

    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class PersonRow : global::System.Data.DataRow
    {

        private PersonDataTable tablePerson;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal PersonRow(global::System.Data.DataRowBuilder rb) :
                base(rb)
        {
            this.tablePerson = ((PersonDataTable)(this.Table));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int PERSONID
        {
            get
            {
                return ((int)(this[this.tablePerson.PERSONIDColumn]));
            }
            set
            {
                this[this.tablePerson.PERSONIDColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int ADDRESSID
        {
            get
            {
                try
                {
                    return ((int)(this[this.tablePerson.ADDRESSIDColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'ADDRESSID\' in table \'Person\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tablePerson.ADDRESSIDColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string FIRSTNAME
        {
            get
            {
                return ((string)(this[this.tablePerson.FIRSTNAMEColumn]));
            }
            set
            {
                this[this.tablePerson.FIRSTNAMEColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ISPHYSICAL
        {
            get
            {
                try
                {
                    return ((bool)(this[this.tablePerson.ISPHYSICALColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'ISPHYSICAL\' in table \'Person\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tablePerson.ISPHYSICALColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string LASTNAME
        {
            get
            {
                if (this.IsLASTNAMENull())
                {
                    return string.Empty;
                }
                else
                {
                    return ((string)(this[this.tablePerson.LASTNAMEColumn]));
                }
            }
            set
            {
                this[this.tablePerson.LASTNAMEColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool DEFUNCT
        {
            get
            {
                try
                {
                    return ((bool)(this[this.tablePerson.DEFUNCTColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'DEFUNCT\' in table \'Person\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tablePerson.DEFUNCTColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IDENTIFIED
        {
            get
            {
                try
                {
                    return ((bool)(this[this.tablePerson.IDENTIFIEDColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'IDENTIFIED\' in table \'Person\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tablePerson.IDENTIFIEDColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string IDCODE
        {
            get
            {
                if (this.IsIDCODENull())
                {
                    return string.Empty;
                }
                else
                {
                    return ((string)(this[this.tablePerson.IDCODEColumn]));
                }
            }
            set
            {
                this[this.tablePerson.IDCODEColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string PREVIOUSLASTNAME
        {
            get
            {
                if (this.IsPREVIOUSLASTNAMENull())
                {
                    return string.Empty;
                }
                else
                {
                    return ((string)(this[this.tablePerson.PREVIOUSLASTNAMEColumn]));
                }
            }
            set
            {
                this[this.tablePerson.PREVIOUSLASTNAMEColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string FATHERINITIAL
        {
            get
            {
                if (this.IsFATHERINITIALNull())
                {
                    return string.Empty;
                }
                else
                {
                    return ((string)(this[this.tablePerson.FATHERINITIALColumn]));
                }
            }
            set
            {
                this[this.tablePerson.FATHERINITIALColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string CITIZENSHIPCOUNTRY
        {
            get
            {
                if (this.IsCITIZENSHIPCOUNTRYNull())
                {
                    return string.Empty;
                }
                else
                {
                    return ((string)(this[this.tablePerson.CITIZENSHIPCOUNTRYColumn]));
                }
            }
            set
            {
                this[this.tablePerson.CITIZENSHIPCOUNTRYColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string IDCARDTYPE
        {
            get
            {
                if (this.IsIDCARDTYPENull())
                {
                    return string.Empty;
                }
                else
                {
                    return ((string)(this[this.tablePerson.IDCARDTYPEColumn]));
                }
            }
            set
            {
                this[this.tablePerson.IDCARDTYPEColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string IDCARDSERIALNO
        {
            get
            {
                if (this.IsIDCARDSERIALNONull())
                {
                    return string.Empty;
                }
                else
                {
                    return ((string)(this[this.tablePerson.IDCARDSERIALNOColumn]));
                }
            }
            set
            {
                this[this.tablePerson.IDCARDSERIALNOColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string IDCARDNUMBER
        {
            get
            {
                if (this.IsIDCARDNUMBERNull())
                {
                    return string.Empty;
                }
                else
                {
                    return ((string)(this[this.tablePerson.IDCARDNUMBERColumn]));
                }
            }
            set
            {
                this[this.tablePerson.IDCARDNUMBERColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string NOTES
        {
            get
            {
                if (this.IsNOTESNull())
                {
                    return string.Empty;
                }
                else
                {
                    return ((string)(this[this.tablePerson.NOTESColumn]));
                }
            }
            set
            {
                this[this.tablePerson.NOTESColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string PHONE
        {
            get
            {
                if (this.IsPHONENull())
                {
                    return string.Empty;
                }
                else
                {
                    return ((string)(this[this.tablePerson.PHONEColumn]));
                }
            }
            set
            {
                this[this.tablePerson.PHONEColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string EMAIL
        {
            get
            {
                if (this.IsEMAILNull())
                {
                    return string.Empty;
                }
                else
                {
                    return ((string)(this[this.tablePerson.EMAILColumn]));
                }
            }
            set
            {
                this[this.tablePerson.EMAILColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int FILEID
        {
            get
            {
                try
                {
                    return ((int)(this[this.tablePerson.FILEIDColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'FILEID\' in table \'Person\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tablePerson.FILEIDColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int REGISTRATIONID
        {
            get
            {
                try
                {
                    return ((int)(this[this.tablePerson.REGISTRATIONIDColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'REGISTRATIONID\' in table \'Person\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tablePerson.REGISTRATIONIDColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public FileDescriptionRow FileDescriptionRow
        {
            get
            {
                return ((FileDescriptionRow)(this.GetParentRow(this.Table.ParentRelations["FK_Person_FileDescription"])));
            }
            set
            {
                this.SetParentRow(value, this.Table.ParentRelations["FK_Person_FileDescription"]);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AddressRow AddressRow
        {
            get
            {
                return ((AddressRow)(this.GetParentRow(this.Table.ParentRelations["FK_Address_Person"])));
            }
            set
            {
                this.SetParentRow(value, this.Table.ParentRelations["FK_Address_Person"]);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RegistrationRow RegistrationRow
        {
            get
            {
                return ((RegistrationRow)(this.GetParentRow(this.Table.ParentRelations["FK_Registration_Person"])));
            }
            set
            {
                this.SetParentRow(value, this.Table.ParentRelations["FK_Registration_Person"]);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsADDRESSIDNull()
        {
            return this.IsNull(this.tablePerson.ADDRESSIDColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetADDRESSIDNull()
        {
            this[this.tablePerson.ADDRESSIDColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsISPHYSICALNull()
        {
            return this.IsNull(this.tablePerson.ISPHYSICALColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetISPHYSICALNull()
        {
            this[this.tablePerson.ISPHYSICALColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsLASTNAMENull()
        {
            return this.IsNull(this.tablePerson.LASTNAMEColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetLASTNAMENull()
        {
            this[this.tablePerson.LASTNAMEColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsDEFUNCTNull()
        {
            return this.IsNull(this.tablePerson.DEFUNCTColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetDEFUNCTNull()
        {
            this[this.tablePerson.DEFUNCTColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsIDENTIFIEDNull()
        {
            return this.IsNull(this.tablePerson.IDENTIFIEDColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetIDENTIFIEDNull()
        {
            this[this.tablePerson.IDENTIFIEDColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsIDCODENull()
        {
            return this.IsNull(this.tablePerson.IDCODEColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetIDCODENull()
        {
            this[this.tablePerson.IDCODEColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsPREVIOUSLASTNAMENull()
        {
            return this.IsNull(this.tablePerson.PREVIOUSLASTNAMEColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetPREVIOUSLASTNAMENull()
        {
            this[this.tablePerson.PREVIOUSLASTNAMEColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsFATHERINITIALNull()
        {
            return this.IsNull(this.tablePerson.FATHERINITIALColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetFATHERINITIALNull()
        {
            this[this.tablePerson.FATHERINITIALColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsCITIZENSHIPCOUNTRYNull()
        {
            return this.IsNull(this.tablePerson.CITIZENSHIPCOUNTRYColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetCITIZENSHIPCOUNTRYNull()
        {
            this[this.tablePerson.CITIZENSHIPCOUNTRYColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsIDCARDTYPENull()
        {
            return this.IsNull(this.tablePerson.IDCARDTYPEColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetIDCARDTYPENull()
        {
            this[this.tablePerson.IDCARDTYPEColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsIDCARDSERIALNONull()
        {
            return this.IsNull(this.tablePerson.IDCARDSERIALNOColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetIDCARDSERIALNONull()
        {
            this[this.tablePerson.IDCARDSERIALNOColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsIDCARDNUMBERNull()
        {
            return this.IsNull(this.tablePerson.IDCARDNUMBERColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetIDCARDNUMBERNull()
        {
            this[this.tablePerson.IDCARDNUMBERColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsNOTESNull()
        {
            return this.IsNull(this.tablePerson.NOTESColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetNOTESNull()
        {
            this[this.tablePerson.NOTESColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsPHONENull()
        {
            return this.IsNull(this.tablePerson.PHONEColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetPHONENull()
        {
            this[this.tablePerson.PHONEColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsEMAILNull()
        {
            return this.IsNull(this.tablePerson.EMAILColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetEMAILNull()
        {
            this[this.tablePerson.EMAILColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsFILEIDNull()
        {
            return this.IsNull(this.tablePerson.FILEIDColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetFILEIDNull()
        {
            this[this.tablePerson.FILEIDColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsREGISTRATIONIDNull()
        {
            return this.IsNull(this.tablePerson.REGISTRATIONIDColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetREGISTRATIONIDNull()
        {
            this[this.tablePerson.REGISTRATIONIDColumn] = global::System.Convert.DBNull;
        }
    }

    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class PointsRow : global::System.Data.DataRow
    {

        private PointsDataTable tablePoints;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal PointsRow(global::System.Data.DataRowBuilder rb) :
                base(rb)
        {
            this.tablePoints = ((PointsDataTable)(this.Table));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int POINTID
        {
            get
            {
                return ((int)(this[this.tablePoints.POINTIDColumn]));
            }
            set
            {
                this[this.tablePoints.POINTIDColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int IMMOVABLEID
        {
            get
            {
                try
                {
                    return ((int)(this[this.tablePoints.IMMOVABLEIDColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    return ((int)(9898989));
                }
            }
            set
            {
                this[this.tablePoints.IMMOVABLEIDColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int BUILDINGID
        {
            get
            {
                try
                {
                    return ((int)(this[this.tablePoints.BUILDINGIDColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'BUILDINGID\' in table \'Points\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tablePoints.BUILDINGIDColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string NO
        {
            get
            {
                try
                {
                    return ((string)(this[this.tablePoints.NOColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'NO\' in table \'Points\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tablePoints.NOColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public double X
        {
            get
            {
                try
                {
                    return ((double)(this[this.tablePoints.XColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'X\' in table \'Points\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tablePoints.XColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public double Y
        {
            get
            {
                try
                {
                    return ((double)(this[this.tablePoints.YColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'Y\' in table \'Points\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tablePoints.YColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public BuildingRow BuildingRow
        {
            get
            {
                return ((BuildingRow)(this.GetParentRow(this.Table.ParentRelations["FK_Building_Points"])));
            }
            set
            {
                this.SetParentRow(value, this.Table.ParentRelations["FK_Building_Points"]);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public LandRow LandRow
        {
            get
            {
                return ((LandRow)(this.GetParentRow(this.Table.ParentRelations["FK_Immovable_Points"])));
            }
            set
            {
                this.SetParentRow(value, this.Table.ParentRelations["FK_Immovable_Points"]);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsIMMOVABLEIDNull()
        {
            return this.IsNull(this.tablePoints.IMMOVABLEIDColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetIMMOVABLEIDNull()
        {
            this[this.tablePoints.IMMOVABLEIDColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsBUILDINGIDNull()
        {
            return this.IsNull(this.tablePoints.BUILDINGIDColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetBUILDINGIDNull()
        {
            this[this.tablePoints.BUILDINGIDColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsNONull()
        {
            return this.IsNull(this.tablePoints.NOColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetNONull()
        {
            this[this.tablePoints.NOColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsXNull()
        {
            return this.IsNull(this.tablePoints.XColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetXNull()
        {
            this[this.tablePoints.XColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsYNull()
        {
            return this.IsNull(this.tablePoints.YColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetYNull()
        {
            this[this.tablePoints.YColumn] = global::System.Convert.DBNull;
        }
    }

    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class RegistrationRow : global::System.Data.DataRow
    {

        private RegistrationDataTable tableRegistration;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal RegistrationRow(global::System.Data.DataRowBuilder rb) :
                base(rb)
        {
            this.tableRegistration = ((RegistrationDataTable)(this.Table));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int REGISTRATIONID
        {
            get
            {
                return ((int)(this[this.tableRegistration.REGISTRATIONIDColumn]));
            }
            set
            {
                this[this.tableRegistration.REGISTRATIONIDColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string REGISTRATIONTYPE
        {
            get
            {
                return ((string)(this[this.tableRegistration.REGISTRATIONTYPEColumn]));
            }
            set
            {
                this[this.tableRegistration.REGISTRATIONTYPEColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string RIGHTTYPE
        {
            get
            {
                try
                {
                    return ((string)(this[this.tableRegistration.RIGHTTYPEColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'RIGHTTYPE\' in table \'Registration\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableRegistration.RIGHTTYPEColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string RIGHTCOMMENT
        {
            get
            {
                try
                {
                    return ((string)(this[this.tableRegistration.RIGHTCOMMENTColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'RIGHTCOMMENT\' in table \'Registration\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableRegistration.RIGHTCOMMENTColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string NOTES
        {
            get
            {
                try
                {
                    return ((string)(this[this.tableRegistration.NOTESColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'NOTES\' in table \'Registration\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableRegistration.NOTESColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int DEEDID
        {
            get
            {
                return ((int)(this[this.tableRegistration.DEEDIDColumn]));
            }
            set
            {
                this[this.tableRegistration.DEEDIDColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string TITLE
        {
            get
            {
                try
                {
                    return ((string)(this[this.tableRegistration.TITLEColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'TITLE\' in table \'Registration\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableRegistration.TITLEColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string QUOTATYPE
        {
            get
            {
                try
                {
                    return ((string)(this[this.tableRegistration.QUOTATYPEColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'QUOTATYPE\' in table \'Registration\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableRegistration.QUOTATYPEColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string INITIALQUOTA
        {
            get
            {
                try
                {
                    return ((string)(this[this.tableRegistration.INITIALQUOTAColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'INITIALQUOTA\' in table \'Registration\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableRegistration.INITIALQUOTAColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string ACTUALQUOTA
        {
            get
            {
                try
                {
                    return ((string)(this[this.tableRegistration.ACTUALQUOTAColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'ACTUALQUOTA\' in table \'Registration\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableRegistration.ACTUALQUOTAColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string VALUECURRENCY
        {
            get
            {
                try
                {
                    return ((string)(this[this.tableRegistration.VALUECURRENCYColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'VALUECURRENCY\' in table \'Registration\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableRegistration.VALUECURRENCYColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string VALUEAMOUNT
        {
            get
            {
                try
                {
                    return ((string)(this[this.tableRegistration.VALUEAMOUNTColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'VALUEAMOUNT\' in table \'Registration\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableRegistration.VALUEAMOUNTColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string COMMENTS
        {
            get
            {
                try
                {
                    return ((string)(this[this.tableRegistration.COMMENTSColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'COMMENTS\' in table \'Registration\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableRegistration.COMMENTSColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int LBPARTNO
        {
            get
            {
                try
                {
                    return ((int)(this[this.tableRegistration.LBPARTNOColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'LBPARTNO\' in table \'Registration\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableRegistration.LBPARTNOColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int POSITION
        {
            get
            {
                try
                {
                    return ((int)(this[this.tableRegistration.POSITIONColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'POSITION\' in table \'Registration\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableRegistration.POSITIONColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int APPNO
        {
            get
            {
                try
                {
                    return ((int)(this[this.tableRegistration.APPNOColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'APPNO\' in table \'Registration\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableRegistration.APPNOColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public System.DateTime APPDATE
        {
            get
            {
                try
                {
                    return ((global::System.DateTime)(this[this.tableRegistration.APPDATEColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'APPDATE\' in table \'Registration\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableRegistration.APPDATEColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DeedRow DeedRow
        {
            get
            {
                return ((DeedRow)(this.GetParentRow(this.Table.ParentRelations["FK_Deed_Registration"])));
            }
            set
            {
                this.SetParentRow(value, this.Table.ParentRelations["FK_Deed_Registration"]);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsRIGHTTYPENull()
        {
            return this.IsNull(this.tableRegistration.RIGHTTYPEColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetRIGHTTYPENull()
        {
            this[this.tableRegistration.RIGHTTYPEColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsRIGHTCOMMENTNull()
        {
            return this.IsNull(this.tableRegistration.RIGHTCOMMENTColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetRIGHTCOMMENTNull()
        {
            this[this.tableRegistration.RIGHTCOMMENTColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsNOTESNull()
        {
            return this.IsNull(this.tableRegistration.NOTESColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetNOTESNull()
        {
            this[this.tableRegistration.NOTESColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsTITLENull()
        {
            return this.IsNull(this.tableRegistration.TITLEColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetTITLENull()
        {
            this[this.tableRegistration.TITLEColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsQUOTATYPENull()
        {
            return this.IsNull(this.tableRegistration.QUOTATYPEColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetQUOTATYPENull()
        {
            this[this.tableRegistration.QUOTATYPEColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsINITIALQUOTANull()
        {
            return this.IsNull(this.tableRegistration.INITIALQUOTAColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetINITIALQUOTANull()
        {
            this[this.tableRegistration.INITIALQUOTAColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsACTUALQUOTANull()
        {
            return this.IsNull(this.tableRegistration.ACTUALQUOTAColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetACTUALQUOTANull()
        {
            this[this.tableRegistration.ACTUALQUOTAColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsVALUECURRENCYNull()
        {
            return this.IsNull(this.tableRegistration.VALUECURRENCYColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetVALUECURRENCYNull()
        {
            this[this.tableRegistration.VALUECURRENCYColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsVALUEAMOUNTNull()
        {
            return this.IsNull(this.tableRegistration.VALUEAMOUNTColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetVALUEAMOUNTNull()
        {
            this[this.tableRegistration.VALUEAMOUNTColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsCOMMENTSNull()
        {
            return this.IsNull(this.tableRegistration.COMMENTSColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetCOMMENTSNull()
        {
            this[this.tableRegistration.COMMENTSColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsLBPARTNONull()
        {
            return this.IsNull(this.tableRegistration.LBPARTNOColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetLBPARTNONull()
        {
            this[this.tableRegistration.LBPARTNOColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsPOSITIONNull()
        {
            return this.IsNull(this.tableRegistration.POSITIONColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetPOSITIONNull()
        {
            this[this.tableRegistration.POSITIONColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsAPPNONull()
        {
            return this.IsNull(this.tableRegistration.APPNOColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetAPPNONull()
        {
            this[this.tableRegistration.APPNOColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsAPPDATENull()
        {
            return this.IsNull(this.tableRegistration.APPDATEColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetAPPDATENull()
        {
            this[this.tableRegistration.APPDATEColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RegistrationXEntityRow[] GetRegistrationXEntityRows()
        {
            if ((this.Table.ChildRelations["FK_Registration_RegistrationXEntity"] == null))
            {
                return new RegistrationXEntityRow[0];
            }
            else
            {
                return ((RegistrationXEntityRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Registration_RegistrationXEntity"])));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PersonRow[] GetPersonRows()
        {
            if ((this.Table.ChildRelations["FK_Registration_Person"] == null))
            {
                return new PersonRow[0];
            }
            else
            {
                return ((PersonRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Registration_Person"])));
            }
        }
    }

    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class RegistrationXEntityRow : global::System.Data.DataRow
    {

        private RegistrationXEntityDataTable tableRegistrationXEntity;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal RegistrationXEntityRow(global::System.Data.DataRowBuilder rb) :
                base(rb)
        {
            this.tableRegistrationXEntity = ((RegistrationXEntityDataTable)(this.Table));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int REGISTRATIONXENTITYID
        {
            get
            {
                return ((int)(this[this.tableRegistrationXEntity.REGISTRATIONXENTITYIDColumn]));
            }
            set
            {
                this[this.tableRegistrationXEntity.REGISTRATIONXENTITYIDColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int REGISTRATIONID
        {
            get
            {
                try
                {
                    return ((int)(this[this.tableRegistrationXEntity.REGISTRATIONIDColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'REGISTRATIONID\' in table \'RegistrationXEntity\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableRegistrationXEntity.REGISTRATIONIDColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int LANDID
        {
            get
            {
                try
                {
                    return ((int)(this[this.tableRegistrationXEntity.LANDIDColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'LANDID\' in table \'RegistrationXEntity\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableRegistrationXEntity.LANDIDColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int BUILDINGID
        {
            get
            {
                try
                {
                    return ((int)(this[this.tableRegistrationXEntity.BUILDINGIDColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'BUILDINGID\' in table \'RegistrationXEntity\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableRegistrationXEntity.BUILDINGIDColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int IUID
        {
            get
            {
                try
                {
                    return ((int)(this[this.tableRegistrationXEntity.IUIDColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'IUID\' in table \'RegistrationXEntity\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableRegistrationXEntity.IUIDColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public LandRow LandRow
        {
            get
            {
                return ((LandRow)(this.GetParentRow(this.Table.ParentRelations["FK_Land_RegistrationXEntity"])));
            }
            set
            {
                this.SetParentRow(value, this.Table.ParentRelations["FK_Land_RegistrationXEntity"]);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public BuildingRow BuildingRow
        {
            get
            {
                return ((BuildingRow)(this.GetParentRow(this.Table.ParentRelations["FK_Building_InscrierexEntitate"])));
            }
            set
            {
                this.SetParentRow(value, this.Table.ParentRelations["FK_Building_InscrierexEntitate"]);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public IURow IURow
        {
            get
            {
                return ((IURow)(this.GetParentRow(this.Table.ParentRelations["FK_IU_RegistrationXEntity"])));
            }
            set
            {
                this.SetParentRow(value, this.Table.ParentRelations["FK_IU_RegistrationXEntity"]);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RegistrationRow InscriereRow
        {
            get
            {
                return ((RegistrationRow)(this.GetParentRow(this.Table.ParentRelations["FK_Registration_RegistrationXEntity"])));
            }
            set
            {
                this.SetParentRow(value, this.Table.ParentRelations["FK_Registration_RegistrationXEntity"]);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsREGISTRATIONIDNull()
        {
            return this.IsNull(this.tableRegistrationXEntity.REGISTRATIONIDColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetREGISTRATIONIDNull()
        {
            this[this.tableRegistrationXEntity.REGISTRATIONIDColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsLANDIDNull()
        {
            return this.IsNull(this.tableRegistrationXEntity.LANDIDColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetLANDIDNull()
        {
            this[this.tableRegistrationXEntity.LANDIDColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsBUILDINGIDNull()
        {
            return this.IsNull(this.tableRegistrationXEntity.BUILDINGIDColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetBUILDINGIDNull()
        {
            this[this.tableRegistrationXEntity.BUILDINGIDColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsIUIDNull()
        {
            return this.IsNull(this.tableRegistrationXEntity.IUIDColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetIUIDNull()
        {
            this[this.tableRegistrationXEntity.IUIDColumn] = global::System.Convert.DBNull;
        }
    }

    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class ContestedRow : global::System.Data.DataRow
    {

        private ContestedDataTable tableContested;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal ContestedRow(global::System.Data.DataRowBuilder rb) :
                base(rb)
        {
            this.tableContested = ((ContestedDataTable)(this.Table));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int CONTESTEDID
        {
            get
            {
                return ((int)(this[this.tableContested.CONTESTEDIDColumn]));
            }
            set
            {
                this[this.tableContested.CONTESTEDIDColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int CONTESTEDNUMBER
        {
            get
            {
                try
                {
                    return ((int)(this[this.tableContested.CONTESTEDNUMBERColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'CONTESTEDNUMBER\' in table \'Contested\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableContested.CONTESTEDNUMBERColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public System.DateTime CONTESTEDDATE
        {
            get
            {
                try
                {
                    return ((global::System.DateTime)(this[this.tableContested.CONTESTEDDATEColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'CONTESTEDDATE\' in table \'Contested\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableContested.CONTESTEDDATEColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int SOLUTIONNUMBER
        {
            get
            {
                try
                {
                    return ((int)(this[this.tableContested.SOLUTIONNUMBERColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'SOLUTIONNUMBER\' in table \'Contested\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableContested.SOLUTIONNUMBERColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public System.DateTime SOLUTIONDATE
        {
            get
            {
                try
                {
                    return ((global::System.DateTime)(this[this.tableContested.SOLUTIONDATEColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'SOLUTIONDATE\' in table \'Contested\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableContested.SOLUTIONDATEColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsCONTESTEDNUMBERNull()
        {
            return this.IsNull(this.tableContested.CONTESTEDNUMBERColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetCONTESTEDNUMBERNull()
        {
            this[this.tableContested.CONTESTEDNUMBERColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsCONTESTEDDATENull()
        {
            return this.IsNull(this.tableContested.CONTESTEDDATEColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetCONTESTEDDATENull()
        {
            this[this.tableContested.CONTESTEDDATEColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsSOLUTIONNUMBERNull()
        {
            return this.IsNull(this.tableContested.SOLUTIONNUMBERColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetSOLUTIONNUMBERNull()
        {
            this[this.tableContested.SOLUTIONNUMBERColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsSOLUTIONDATENull()
        {
            return this.IsNull(this.tableContested.SOLUTIONDATEColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetSOLUTIONDATENull()
        {
            this[this.tableContested.SOLUTIONDATEColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ContestedxEntityRow[] GetContestedxEntityRows()
        {
            if ((this.Table.ChildRelations["Contested_ContestedxEntity"] == null))
            {
                return new ContestedxEntityRow[0];
            }
            else
            {
                return ((ContestedxEntityRow[])(base.GetChildRows(this.Table.ChildRelations["Contested_ContestedxEntity"])));
            }
        }
    }

    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class ContestedxEntityRow : global::System.Data.DataRow
    {

        private ContestedxEntityDataTable tableContestedxEntity;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal ContestedxEntityRow(global::System.Data.DataRowBuilder rb) :
                base(rb)
        {
            this.tableContestedxEntity = ((ContestedxEntityDataTable)(this.Table));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int CONTESTEDXENTITYID
        {
            get
            {
                return ((int)(this[this.tableContestedxEntity.CONTESTEDXENTITYIDColumn]));
            }
            set
            {
                this[this.tableContestedxEntity.CONTESTEDXENTITYIDColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int CONTESTEDID
        {
            get
            {
                try
                {
                    return ((int)(this[this.tableContestedxEntity.CONTESTEDIDColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'CONTESTEDID\' in table \'ContestedxEntity\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableContestedxEntity.CONTESTEDIDColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int LANDID
        {
            get
            {
                try
                {
                    return ((int)(this[this.tableContestedxEntity.LANDIDColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'LANDID\' in table \'ContestedxEntity\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableContestedxEntity.LANDIDColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int BUILDINGID
        {
            get
            {
                try
                {
                    return ((int)(this[this.tableContestedxEntity.BUILDINGIDColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'BUILDINGID\' in table \'ContestedxEntity\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableContestedxEntity.BUILDINGIDColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int IUID
        {
            get
            {
                try
                {
                    return ((int)(this[this.tableContestedxEntity.IUIDColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'IUID\' in table \'ContestedxEntity\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableContestedxEntity.IUIDColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ContestedRow ContestedRow
        {
            get
            {
                return ((ContestedRow)(this.GetParentRow(this.Table.ParentRelations["Contested_ContestedxEntity"])));
            }
            set
            {
                this.SetParentRow(value, this.Table.ParentRelations["Contested_ContestedxEntity"]);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public IURow IURow
        {
            get
            {
                return ((IURow)(this.GetParentRow(this.Table.ParentRelations["IU_ContestedxEntity"])));
            }
            set
            {
                this.SetParentRow(value, this.Table.ParentRelations["IU_ContestedxEntity"]);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public BuildingRow BuildingRow
        {
            get
            {
                return ((BuildingRow)(this.GetParentRow(this.Table.ParentRelations["Building_ContestedxEntity"])));
            }
            set
            {
                this.SetParentRow(value, this.Table.ParentRelations["Building_ContestedxEntity"]);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public LandRow LandRow
        {
            get
            {
                return ((LandRow)(this.GetParentRow(this.Table.ParentRelations["Land_ContestedxEntity"])));
            }
            set
            {
                this.SetParentRow(value, this.Table.ParentRelations["Land_ContestedxEntity"]);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsCONTESTEDIDNull()
        {
            return this.IsNull(this.tableContestedxEntity.CONTESTEDIDColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetCONTESTEDIDNull()
        {
            this[this.tableContestedxEntity.CONTESTEDIDColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsLANDIDNull()
        {
            return this.IsNull(this.tableContestedxEntity.LANDIDColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetLANDIDNull()
        {
            this[this.tableContestedxEntity.LANDIDColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsBUILDINGIDNull()
        {
            return this.IsNull(this.tableContestedxEntity.BUILDINGIDColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetBUILDINGIDNull()
        {
            this[this.tableContestedxEntity.BUILDINGIDColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsIUIDNull()
        {
            return this.IsNull(this.tableContestedxEntity.IUIDColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetIUIDNull()
        {
            this[this.tableContestedxEntity.IUIDColumn] = global::System.Convert.DBNull;
        }
    }

    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class AddressRowChangeEvent : global::System.EventArgs
    {

        private AddressRow eventRow;

        private global::System.Data.DataRowAction eventAction;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AddressRowChangeEvent(AddressRow row, global::System.Data.DataRowAction action)
        {
            this.eventRow = row;
            this.eventAction = action;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AddressRow Row
        {
            get
            {
                return this.eventRow;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action
        {
            get
            {
                return this.eventAction;
            }
        }
    }

    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class BuildingRowChangeEvent : global::System.EventArgs
    {

        private BuildingRow eventRow;

        private global::System.Data.DataRowAction eventAction;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public BuildingRowChangeEvent(BuildingRow row, global::System.Data.DataRowAction action)
        {
            this.eventRow = row;
            this.eventAction = action;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public BuildingRow Row
        {
            get
            {
                return this.eventRow;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action
        {
            get
            {
                return this.eventAction;
            }
        }
    }

    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class BuildingCommonPartsRowChangeEvent : global::System.EventArgs
    {

        private BuildingCommonPartsRow eventRow;

        private global::System.Data.DataRowAction eventAction;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public BuildingCommonPartsRowChangeEvent(BuildingCommonPartsRow row, global::System.Data.DataRowAction action)
        {
            this.eventRow = row;
            this.eventAction = action;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public BuildingCommonPartsRow Row
        {
            get
            {
                return this.eventRow;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action
        {
            get
            {
                return this.eventAction;
            }
        }
    }

    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class DeedRowChangeEvent : global::System.EventArgs
    {

        private DeedRow eventRow;

        private global::System.Data.DataRowAction eventAction;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DeedRowChangeEvent(DeedRow row, global::System.Data.DataRowAction action)
        {
            this.eventRow = row;
            this.eventAction = action;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DeedRow Row
        {
            get
            {
                return this.eventRow;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action
        {
            get
            {
                return this.eventAction;
            }
        }
    }

    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class FileDescriptionRowChangeEvent : global::System.EventArgs
    {

        private FileDescriptionRow eventRow;

        private global::System.Data.DataRowAction eventAction;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public FileDescriptionRowChangeEvent(FileDescriptionRow row, global::System.Data.DataRowAction action)
        {
            this.eventRow = row;
            this.eventAction = action;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public FileDescriptionRow Row
        {
            get
            {
                return this.eventRow;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action
        {
            get
            {
                return this.eventAction;
            }
        }
    }

    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class LandRowChangeEvent : global::System.EventArgs
    {

        private LandRow eventRow;

        private global::System.Data.DataRowAction eventAction;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public LandRowChangeEvent(LandRow row, global::System.Data.DataRowAction action)
        {
            this.eventRow = row;
            this.eventAction = action;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public LandRow Row
        {
            get
            {
                return this.eventRow;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action
        {
            get
            {
                return this.eventAction;
            }
        }
    }

    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class IURowChangeEvent : global::System.EventArgs
    {

        private IURow eventRow;

        private global::System.Data.DataRowAction eventAction;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public IURowChangeEvent(IURow row, global::System.Data.DataRowAction action)
        {
            this.eventRow = row;
            this.eventAction = action;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public IURow Row
        {
            get
            {
                return this.eventRow;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action
        {
            get
            {
                return this.eventAction;
            }
        }
    }

    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class ParcelRowChangeEvent : global::System.EventArgs
    {

        private ParcelRow eventRow;

        private global::System.Data.DataRowAction eventAction;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ParcelRowChangeEvent(ParcelRow row, global::System.Data.DataRowAction action)
        {
            this.eventRow = row;
            this.eventAction = action;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ParcelRow Row
        {
            get
            {
                return this.eventRow;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action
        {
            get
            {
                return this.eventAction;
            }
        }
    }

    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class PersonRowChangeEvent : global::System.EventArgs
    {

        private PersonRow eventRow;

        private global::System.Data.DataRowAction eventAction;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PersonRowChangeEvent(PersonRow row, global::System.Data.DataRowAction action)
        {
            this.eventRow = row;
            this.eventAction = action;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PersonRow Row
        {
            get
            {
                return this.eventRow;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action
        {
            get
            {
                return this.eventAction;
            }
        }
    }

    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class PointsRowChangeEvent : global::System.EventArgs
    {

        private PointsRow eventRow;

        private global::System.Data.DataRowAction eventAction;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PointsRowChangeEvent(PointsRow row, global::System.Data.DataRowAction action)
        {
            this.eventRow = row;
            this.eventAction = action;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PointsRow Row
        {
            get
            {
                return this.eventRow;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action
        {
            get
            {
                return this.eventAction;
            }
        }
    }

    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class RegistrationRowChangeEvent : global::System.EventArgs
    {

        private RegistrationRow eventRow;

        private global::System.Data.DataRowAction eventAction;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RegistrationRowChangeEvent(RegistrationRow row, global::System.Data.DataRowAction action)
        {
            this.eventRow = row;
            this.eventAction = action;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RegistrationRow Row
        {
            get
            {
                return this.eventRow;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action
        {
            get
            {
                return this.eventAction;
            }
        }
    }

    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class RegistrationXEntityRowChangeEvent : global::System.EventArgs
    {

        private RegistrationXEntityRow eventRow;

        private global::System.Data.DataRowAction eventAction;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RegistrationXEntityRowChangeEvent(RegistrationXEntityRow row, global::System.Data.DataRowAction action)
        {
            this.eventRow = row;
            this.eventAction = action;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RegistrationXEntityRow Row
        {
            get
            {
                return this.eventRow;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action
        {
            get
            {
                return this.eventAction;
            }
        }
    }

    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class ContestedRowChangeEvent : global::System.EventArgs
    {

        private ContestedRow eventRow;

        private global::System.Data.DataRowAction eventAction;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ContestedRowChangeEvent(ContestedRow row, global::System.Data.DataRowAction action)
        {
            this.eventRow = row;
            this.eventAction = action;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ContestedRow Row
        {
            get
            {
                return this.eventRow;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action
        {
            get
            {
                return this.eventAction;
            }
        }
    }

    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class ContestedxEntityRowChangeEvent : global::System.EventArgs
    {

        private ContestedxEntityRow eventRow;

        private global::System.Data.DataRowAction eventAction;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ContestedxEntityRowChangeEvent(ContestedxEntityRow row, global::System.Data.DataRowAction action)
        {
            this.eventRow = row;
            this.eventAction = action;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ContestedxEntityRow Row
        {
            get
            {
                return this.eventRow;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action
        {
            get
            {
                return this.eventAction;
            }
        }
    }
}
